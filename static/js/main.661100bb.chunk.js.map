{"version":3,"sources":["conf.js","store/actionTypes.js","store/reducers/index.js","store/reducers/userReducer.js","store/reducers/myProgramsReducer.js","store/index.js","shared/constants.js","http-common.js","service/upload-files.service.js","components/UploadFiles/index.js","modules/Dashboard.js","modules/Welcome.js","modules/LogIn.js","components/Layout/HeadingComponent/Heading.js","service/user.service.js","modules/Portfolio.js","modules/AddCurrency.js","components/Layout/TransactionList/AllTransactionList.js","components/Layout/WalletComponent/main.js","modules/Wallets.js","modules/History.js","modules/SecureBackup.js","modules/Settings.js","modules/RestoreWallet.js","modules/Currency.js","modules/AccountSupport.js","components/Modals/BasicModal.js","components/OrSpinButton.js","service/utils.js","modules/HomePage.js","service/contractService.js","modules/Register.js","components/Modals/OrConfirm.js","components/OrTable.js","modules/Admin.js","components/Modals/ORFiwStep1.js","components/Modals/ORFiwStep2.js","components/Modals/ORFiwStep3.js","components/Modals/ORFileImportWizardSPB.js","components/Modals/ORFileImportWizard.js","modules/OnerepFile.js","modules/OnerepBoard.js","modules/index.js","components/WalletAddressBox.js","components/BadgeTokenAddressBox.js","components/Page404/index.js","components/SideBar/SideBar.js","components/SideBar/index.js","components/Layout/Connector.js","components/Layout/index.js","App.js","index.js"],"names":["module","exports","SERVER_URL","USERS","reducers","combineReducers","lastAction","action","userAction","state","user","wallet","error","showLoginModal","type","Object","assign","payload","localStorage","setItem","JSON","stringify","badgeTokenAddress","myPrograms","rootReducer","undefined","store","createStore","isAdmin","isLoading","applyMiddleware","thunk","next","routes","home","register","admin","onerepfile","onerepboard","portfoliopage","dashboardpage","walletspage","loginpage","logout","axios","create","baseURL","headers","file","prefix","onUploadProgress","formData","FormData","append","http","post","userId","get","UploadFiles","props","selectFile","bind","upload","selectedFiles","currentFile","progress","message","fileInfos","event","this","setState","target","files","UploadService","Math","round","loaded","total","then","response","data","getFiles","catch","className","role","aria-valuenow","aria-valuemin","aria-valuemax","style","width","onChange","onClick","map","index","key","href","url","name","Component","connect","useState","useEffect","console","log","keys","length","getItem","to","FileReader","textAlign","Step1","currentStep","src","alt","Step2","Step3","Fragment","WelcomeModule","handleChange","value","_next","_prev","email","username","password","title","nextButton","React","navigation","history","useHistory","seed","setSeed","useDispatch","useSelector","push","color","input","inputValue","i","placeholder","e","dispatch","Dropdown","Toggle","id","height","viewBox","fill","xmlns","fillRule","clipRule","d","Menu","Button","stroke","stroke-linecap","stroke-linejoin","stroke-width","margin","strokeWidth","curve","size","preventDefault","window","location","users","setUsers","UsersService","getUsers","Heading","addCurrency","image","heading","peregraph","checkboxId","isChecked","filterData","setFilterData","InputGroup","Text","cx","cy","r","FormControl","regex","RegExp","filtered","filter","item","search","currencyValue","Form","Check","label","defaultChecked","transactionList","transactionType","transactionName","transactionId","transactionValue","transactionValueUpDown","transactionStatus","transactionStatusUpDown","transactionDate","transaction","setTransaction","Table","transactionListData","dateRange","setDateRange","startDate","endDate","send","setSend","handleToggle","options","chart","zoom","enabled","stacked","xaxis","categories","borderColor","yAxisIndex","min","Date","getTime","tickAmount","x","show","text","colors","background","dataLabels","gradient","shadeIntensity","opacityFrom","opacityTo","stops","series","updown","price","selectsRange","update","isClearable","dateFormat","bgColor","fgColor","defaultValue","navigator","clipboard","writeText","AllTransactionList","cuurency","ratio","class","Tab","Container","defaultActiveKey","Nav","Item","Link","eventKey","fillOpacity","Content","Pane","setValue","themHandler","setColor","checked","activeCurrency","Group","Label","Control","BasicModal","modalType","children","closeModal","show_modal","setShowModal","setModalType","_closeModal","Modal","centered","onHide","Header","closeButton","Title","Body","Footer","variant","OrSpinButton","additionalClass","extraData","renderMode","disabled","baseClass","defaultClass","disabledClass","buttonClass","setButtonClass","status","setStatus","_handleClick","stopWait","getExtraData","ev","MintBatchApprovalTypes","MintBatchApproval","getDomain","web3","chainId","verifyingContract","utils","keccak256","version","getMintBatchApprovalSignature","erc1238ContractAddress","signer","amounts","recipient","domain","ids","_signTypedData","sig","fullSignature","ethers","splitSignature","orAlert","msg","alert","address","Balance","setdata","setShow","showMessage","setShowMessage","messageType","setMessageType","messageTitle","setMessageTitle","messageContent","setMessageContent","mounted","showMessageBox","content","_type","connectWallet","params","ethereum","request","method","res","accountChangeHandler","accountLogin","account","success","userType","parent","Web3","eth","net","getId","hexValue","getbalance","code","chainName","nativeCurrency","symbol","decimals","blockExplorerUrls","rpcUrls","addError","balance","formatEther","deployBadgeContract","tokenSymbol","getAccounts","accounts","getGasPrice","gasPrice","parseInt","Contract","ONERepDeployedInfo","abi","deploy","bytecode","arguments","from","result","setWallet","userName","setUserName","badgeSymbol","setBadgeSymbol","_badgeTokenAddress","setBadgeTokenAddress","daoName","setDaoName","errorUserName","setErrorUserName","errorBadgeName","setErrorBadgeName","errorDaoName","setErrorDaoName","showModal","modalTitle","setModalTitle","modalMessage","setModalMessage","isFirstRegister","setIsFirstRegister","isInited","setIsInited","registerForm","useRef","walletAddress","excludeInactive","nUsers","onSubmitHandler","warning","registerDao","inform","badgeAddress","badge","handleUserInput","ref","controlId","required","readOnly","current","submit","OrConfirm","closeConfirm","context","_context","setContext","_closeConfirmWithNo","onEscapeKeyDown","OrTable","config","editable","removable","columns","rows","methods","setHeaders","pageNumber","setPageNumber","pageSize","setPageSize","startRowIndex","setStartRowIndex","totalRows","setTotalRows","buildTable","_headers","c","trArray","trCount","row","fields","j","onEditRow","onDeleteRow","colSpan","striped","_pageSize","_page","nextAvailablePageNumber","userTableHeaderInfo","refineTableData","rawTableData","userList","expandUserList","_userList","_user","received","userListNested","userInfo","daos","defaultUser","_id","dao","showSettings","setShowSettings","enable","setEnable","curUser","setCurUser","setBadgeAddress","_userName","_wallet","inited","setInited","confirmContext","setConfirmContext","confirmText","setConfirmText","showConfirm","setShowConfirm","ret","daoRelation","getContributors","handleShow","_handleDelete","master","retData","handleDelete","onCloseWithYes","handleSave","reload","borderRadiusStyle","borderRadius","val","inactiveLabel","activeLabel","thumbStyle","trackStyle","onToggle","ORFiwStep1","checkAccomplished","stepAction","accept","ORFiwStep2","stepData","tableRows","setTableRows","values","setValues","reputation","setReputation","responsive","ORFiwStep3","StepLabel","setAccomplished","setCheckPass","setIndex","_class","setClass","accomplished","failedPass","_className","ORFileImportWizardSPB","setStepCount","setCurrentStep","stepCount","stepPercentage","failedPassList","percent","ORFileImportWizard","stepActions","onClose","setFailedPass","fileToUpload","setFileToUpload","passedStep","setPassedStep","_stepData","setStepData","step","setTimeout","_mint","PreviousButton","NextButton","MintButton","fileToupload","require","fileTableHeaderInfo","_boardDataList","filename","ipfsuri","created_at","toLocaleDateString","toLocaleTimeString","showMintWizard","setShowMintWizard","showFailure","setshowFailure","repfiles","setRepFiles","daoList","setDaoList","selectedDao","setSelectedDao","selectedDaoTokenTotalSupply","setSelectedDaoTokenTotalSupply","ipfsPath","setipfsPath","ipfsName","setipfsName","showWatingModalForMint","setShowWatingModalForMint","setParsedData","setCSVData","setStep","setShowMessageBox","messageBoxTitle","setMessageBoxTitle","messageBoxContent","setMessageBoxContent","messageBoxType","setMessageBoxType","setChainId","setIsAdmin","isFileImportable","setIsFileImportable","initedIsAdmin","setInitedIsAdmin","mintFailureReason","setMintFailureReason","setLoading","rpcProvider","_isAdmin","thisAddress","resp","handleDropDown","filterContractMessage","originMessage","msgElems","match","replace","handleCloseFailure","InitWeb3","providers","Web3Provider","getSigner","handleSubmit","badgeTokenContract","idsList","toList","amountsList","tokenUrisList","dataList","minter","tokenAmount","tokenUris","mintBundle","loadOneRepFiles","badgeAddressForSelectedDao","selectedDaoName","getDaoDataReqParam","sent","now","Papa","parse","header","skipEmptyLines","complete","results","rowsArray","valuesArray","rep","err","onSelect","m","boardDataTableHeaderInfo","sum","boardData","setBoardData","sortOption","loadBoardData","sort","HomePageModule","RegisterModule","AdminModule","OneRepFileModule","OneRepBoardModule","Dashboard","welcomepage","Welcome","Portfolio","addcurrencypage","AddCurrency","Wallets","historypage","History","securebackuppage","SecureBackup","settingspage","Setting","restorewalletpage","RestoreWallet","currencypage","Currency","accountsupportpage","AccountSupport","_wallet_address","setWalletAddress","_user_name","showCopiedMessage","setShowCopiedMessage","hideCopiedMessage","pathname","tooltip","substring","texts","subTitle","backToHomepage","Page404Module","backToLogin","metaMaskAccessible","setMetaMaskAccessible","on","initialise","isMetaMaskInstalled","Boolean","isMetaMask","isMetaMaskConnected","strokeLinecap","strokeLinejoin","y","rx","SideBar","Layout","split","Settings","withRouter","Connector","App","setRoutes","renderRoutes","_routes","modules","exact","path","component","Page404","render","document","getElementById","serviceWorker","getRegistrations","registrations","unregister"],"mappings":"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ChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,QAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,SAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,SAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,SAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,UAAe,WAKlC,CAEMyI,MAAO,CACHC,KAAM,CACFC,SAAS,GAEbC,SAAS,EACT9M,KAAM,QAEV+M,MAAO,CACHC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACvDC,YAAa,OACbC,WAAY,EACZlN,KAAM,WACNmN,IAAK,IAAIC,KAAK,eAAeC,UAC7BC,WAAY,EACZC,EAAG,IAAIH,KAAK,eAAeC,UAC3BjC,MAAO,CACHoC,MAAM,EACNC,KAAM,UACN/I,MAAO,CACHgJ,OAAQ,CAAC,QACTC,WAAY,aAIxBC,WAAY,CACRf,SAAS,GAEbhE,OAAQ,CACJlE,MAAO,EACPwE,MAAO,SACPuE,OAAQ,CAAC,YAEbpF,KAAM,CACFtI,KAAM,WACN0N,OAAQ,CAAC,UAAW,uBACpBG,SAAU,CACNC,eAAgB,EAChBC,YAAa,GACbC,UAAW,GACXC,MAAO,CAAC,EAAG,GAAI,OAGvBC,OAAQ,CACJ,CACI/I,KAAM,WACNnF,KAAM,WACNkE,KAAM,CACF,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,IAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,SAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,QAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,SAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,SAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,SAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,UAAe,WAMpC,CAEQyI,MAAO,CACHC,KAAM,CACFC,SAAS,GAEbC,SAAS,EACT9M,KAAM,QAEV+M,MAAO,CACHC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACvDC,YAAa,OACbC,WAAY,EACZlN,KAAM,WACNmN,IAAK,IAAIC,KAAK,eAAeC,UAC7BC,WAAY,EACZC,EAAG,IAAIH,KAAK,eAAeC,UAC3BjC,MAAO,CACHoC,MAAM,EACNC,KAAM,UACN/I,MAAO,CACHgJ,OAAQ,CAAC,QACTC,WAAY,aAIxBC,WAAY,CACRf,SAAS,GAEbhE,OAAQ,CACJlE,MAAO,EACPwE,MAAO,SACPuE,OAAQ,CAAC,YAEbpF,KAAM,CACFtI,KAAM,WACN0N,OAAQ,CAAC,UAAW,UAAW,uBAC/BG,SAAU,CACNC,eAAgB,EAChBC,YAAa,GACbC,UAAW,GACXC,MAAO,CAAC,EAAG,GAAI,OAGvBC,OAAQ,CACJ,CACI/I,KAAM,WACNnF,KAAM,WACNkE,KAAM,CACF,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,IAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,SAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,QAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,WAAe,OAChB,CAAC,SAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,SAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,MAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,SAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,UAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAChB,CAAC,WAAe,OAC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","file":"static/js/main.661100bb.chunk.js","sourcesContent":["const is_test  = false;\nmodule.exports = {\n  SERVER_URL: is_test ? \"http://localhost:3001\" : \"http://172.26.9.21:3001\",\n};\n","export const COMMON = {\n  //TOGGLE_LOADING: 'COMMON.TOGGLE_LOADING',\n  //GET_WALLETS_BY_EMAIL_SUCCESS: 'COMMON.GET_WALLETS_BY_EMAIL_SUCCESS',\n  //GET_WALLETS_BY_EMAIL_FAILED: 'COMMON.GET_WALLETS_BY_EMAIL_FAILED',\n  //ON_NEW_TX_ADDED: 'COMMON.ON_NEW_TX_ADDED',\n};\n\nexport const USERS = {\n  TOGGLE_LOGIN_MODAL: 'USERS.TOGGLE_LOGIN_MODAL',\n  //SIGNUP_SUCCESS: 'USERS.SIGNUP_SUCCESS',\n  //SIGNUP_FAILED: 'USERS.SIGNUP_FAILED',\n  LOGIN_SUCCESS: 'USERS.LOGIN_SUCCESS',\n  LOGIN_FAILED: 'USERS.LOGIN_FAILED',\n  LOGOUT: 'USERS.LOGOUT',\n  CONNECT_WALLET: 'USERS.CONNECT_WALLET'\n};\n\nexport const PROGRAMS = {\n\tGET_PROGRAMS_SUCCESS: 'PROGRAMS.GET_PROGRAMS_SUCCESS',\n};\n","import { combineReducers } from \"redux\";\nimport myProgramsReducer from './myProgramsReducer';\nimport userReducer from './userReducer';\n//import commonReducer from './common/reducers';\n//import tabReducer from './tabs/reducers';\n\nfunction lastAction(state = null, action) {\n  return action;\n}\n\nconst reducers = combineReducers({\n  lastAction: lastAction,\n  userAction: userReducer,\n  // commonAction: commonReducer,\n  myPrograms: myProgramsReducer,\n  //tabData: tabReducer,\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === 'USERS.LOGOUT') {\n    state = undefined;\n  }\n\n  return reducers(state, action);\n};\n\nexport default rootReducer;\n","import { USERS } from \"../actionTypes\";\n\nexport default function userReducer(\n\tstate = {\n\t\tuser: null,\n\t\twallet: null,\n\t\terror: '',\n    showLoginModal: false,\n\t},\n\taction\n) {\n    switch (action.type) {\n    case USERS.TOGGLE_LOGIN_MODAL:\n      return Object.assign({}, state, { showLoginModal: action.payload.showLoginModal });\n\n\t\tcase USERS.LOGIN_SUCCESS:\n\t\t\tlocalStorage.setItem('user', JSON.stringify(action.payload))\n    \treturn Object.assign({}, state, { user: action.payload, error: '' });\n\n\t\tcase USERS.LOGIN_FAILED:\n    \treturn Object.assign({}, state, {error: action.payload});\n\t      \n\t\tcase USERS.LOGOUT:\n    \treturn Object.assign({}, state, { user: null });\n\n    case USERS.CONNECT_WALLET:\n    \treturn Object.assign({}, state, { \n    \t\twallet: action.payload.wallet, \n    \t\tuser: action.payload.user,\n    \t\tbadgeTokenAddress: action.payload.badgeTokenAddress\n    \t});\n\n    default:\n    \treturn state;\n    }\n}","// import { PROGRAMS } from \"../actionTypes\";\n\nexport default (state = {}, action) => {\n    // if (action.type === actionType.FETCH_BLOG) {\n    //     return {state, ...action.payload};\n    // }\n    return state;\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\nexport const initialState = {\n  lastAction: { \n    type: '', \n    payload: {}\n  },\n  userAction: {\n    showLoginModal: false,\n    user: null,\n    wallet: null,\n    isAdmin: false,\n    badgeTokenAddress: null,\n    error: ''\n  },\n  // commonAction: {\n  //   isLoading: false\n  // },\n  myPrograms : {\n    isLoading: false\n  }\n};\n\nconst logger = store => next => action => {\n  let result = next(action);\n  return result;\n};\n\nvar store = createStore(\n  reducers,\n  initialState,\n  applyMiddleware(thunk, logger)\n);\nexport default store;\n","export const contactEmail = \"support@soh.com\";\n\nexport const routes = {\n  home: \"/home\",\n  register: \"/register\",\n  admin: \"/admin\",\n  onerepfile: \"/onerepfile\",\n  onerepboard: \"/onerepboard\",\n  // faq: \"/faq/\",\n  // giveaway: \"/giveaway/\",\n  // support: \"/support/\",\n  // company: \"/company/\",\n  // assets: \"/assets\",\n\n  // welcomepage: \"/\",\n  portfoliopage: \"/portfolio\",\n  dashboardpage: \"/dashboard\",\n  // addcurrencypage: \"/addcurrency\",\n  walletspage: \"/wallets\",\n  // historypage: \"/history\",\n  // securebackuppage: \"/securebackup\",\n  // settingspage: \"/settings\",\n  // restorewalletpage: \"/restorewallet\",\n  // currencypage: \"/currency\",\n  // accountsupportpage: \"/accountsupport\",\n  // account: \"/dashboard/account\",\n\n  loginpage: \"/\",\n  //login2fa: \"/account/login/2fa/\",\n  // signup: \"/signup\",\n  // forgotten: \"/forgotten\",\n  logout: \"/logout\",\n};\n\n\nexport const TESTNET_ADDRESS = \"0xB95df2B5bc0400488C2c2dADb6E4c3eE6DdAc3B3\";\n\nexport const MAINNET_ADDRESS = \"\";\n","import axios from \"axios\";\nimport { SERVER_URL } from \"./conf\";\nexport default axios.create({\n  baseURL: SERVER_URL,\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import http from \"../http-common\";\nclass UploadFilesService {\n  upload(file, prefix, onUploadProgress) {\n    let formData = new FormData();\n    formData.append(\"file\", file);\n    return http.post(\"/upload\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        \"prefix\": prefix\n      },\n      onUploadProgress,\n    });\n  }\n  getFiles(userId) {\n    return http.get(\"/files?userId=\"+userId);\n  }\n}\nexport default new UploadFilesService();","import React, {Component} from 'react'\nimport UploadService from \"../../service/upload-files.service\";\n\nexport default class UploadFiles extends Component {\n    constructor(props) {\n        super(props);\n        this.selectFile = this.selectFile.bind(this);\n        this.upload = this.upload.bind(this);\n        this.state = {\n          selectedFiles: undefined,\n          currentFile: undefined,\n          progress: 0,\n          message: \"\",\n          fileInfos: [],\n        };\n      }\n    selectFile(event) {\n        this.setState({\n          selectedFiles: event.target.files,\n        });\n      }\n    upload() {\n        let currentFile = this.state.selectedFiles[0];\n        this.setState({\n          progress: 0,\n          currentFile: currentFile,\n        });\n        UploadService.upload(currentFile, \"\", (event) => {\n          this.setState({\n            progress: Math.round((100 * event.loaded) / event.total),\n          });\n        })\n          .then((response) => {\n            this.setState({\n              message: response.data.message,\n            });\n            return UploadService.getFiles(\"data\");\n          })\n          .then((files) => {\n            this.setState({\n              fileInfos: files.data,\n            });\n          })\n          .catch(() => {\n            this.setState({\n              progress: 0,\n              message: \"Could not upload the file!\",\n              currentFile: undefined,\n            });\n          });\n        this.setState({\n          selectedFiles: undefined,\n        });\n      }\n      \n    componentDidMount() {\n        UploadService.getFiles(\"data\").then((response) => {\n          this.setState({\n            fileInfos: response.data,\n          });\n        });\n      }\n    render() {\n      const {\n        selectedFiles,\n        currentFile,\n        progress,\n        message,\n        fileInfos,\n      } = this.state;\n      return (\n        <div>\n          {currentFile && (\n            <div className=\"progress\">\n              <div\n                className=\"progress-bar progress-bar-info progress-bar-striped\"\n                role=\"progressbar\"\n                aria-valuenow={progress}\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                style={{ width: progress + \"%\" }}\n              >\n                {progress}%\n              </div>\n            </div>\n          )}\n          <label className=\"btn btn-default\">\n            <input type=\"file\" onChange={this.selectFile} />\n          </label>\n          <button className=\"btn btn-success\"\n            onClick={this.upload}\n          >\n            Upload\n          </button>\n          <div className=\"alert alert-light\" role=\"alert\">\n            {message}\n          </div>\n          <div className=\"card\">\n            <div className=\"card-header\">List of Files</div>\n            <ul className=\"list-group list-group-flush\">\n              {fileInfos &&\n                fileInfos.map((file, index) => (\n                  <li className=\"list-group-item\" key={index}>\n                    <a href={file.url}>{file.name}</a>\n                  </li>\n                ))}\n            </ul>\n          </div>\n        </div>\n      );\n    }\n  }","import React, { useState/*, useRef*/, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n// import HeadingModule from '../components/Layout/HeadingComponent/Heading';\n// import DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\n// import Chart from \"react-apexcharts\";\n// import { Sparklines, SparklinesLine, SparklinesSpots } from 'react-sparklines';\n// import { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\n// import { CSVLink } from \"react-csv\";\n// import ReactTable from \"react-table-6\";  \nimport \"react-table-6/react-table.css\" \n// import axios from 'axios'\n// import { useDispatch, useSelector } from 'react-redux'\nimport UploadFiles from \"../components/UploadFiles\";\n\n// import { mapStateToProps } from './mappers';\n\n// const columns = [\n//     {\n//       Header: \"No\",\n//       accessor: \"No\", // String-based value accessors!\n//     },\n//     {\n//       Header: \"name\",\n//       accessor: \"name\",\n//     },\n//     {\n//       Header: \"Date\",\n//       accessor: 'Date',\n//     },\n//     {\n//       Header: \"address\",\n//       accessor: \"address\",\n//     },\n//     {\n//       Header: \"epoch number\",\n//       accessor: \"epoch number\",\n//     },\n//     {\n//       Header: \"received\",\n//       accessor: \"received\",\n//     },\n//     {\n//       Header: \"sent\",\n//       accessor: \"sent\",\n//     },\n//   ];\n\nconst DashboardModule = (props) => {\n  // const reactTable = useRef(null)\n  // const csvLink = useRef(null)\n  const [file, setFile] = useState();\n  // const [array, setArray] = useState([]);\n\n  useEffect(() => {\n    console.log('props.user', props.user)\n    if (props.user && Object.keys(props.user).length === 0 && !localStorage.getItem('user')) {\n        return (\n          <Redirect to={'/'} />\n        )\n    }\n  }, [props.user])\n\n  const fileReader = new FileReader();\n\n  const handleOnChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const csvFileToArray = string => {\n    const csvHeader = string.slice(0, string.indexOf(\"\\n\")).split(\",\");\n    const csvRows = string.slice(string.indexOf(\"\\n\") + 1).split(\"\\n\");\n\n    const array = csvRows.map(i => {\n      const values = i.split(\",\");\n      const obj = csvHeader.reduce((object, header, index) => {\n        let temp = header.split('').filter(c => c !== '\"' && c !== '.').join('').trim()\n        object[temp] = (values[index] || '').trim();\n        return object;\n      }, {});\n      return obj;\n    });\n    console.log('[ar', array)\n\n    // setArray(array);\n  };\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n\n    if (file) {\n      fileReader.onload = function (event) {\n        const text = event.target.result;\n        csvFileToArray(text);\n      };\n\n      fileReader.readAsText(file);\n    }\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <UploadFiles />\n      \n    </div>\n  );\n}\nconst mapStoreToProps = ({ userAction }) => ({\n    user: userAction.user,\n});\nexport default connect(mapStoreToProps, null)(DashboardModule);\n","import React from \"react\";\nimport { Link } from 'react-router-dom';\n\nclass WelcomeModule extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentStep: 1,\n            email: '',\n            username: '',\n            password: '',\n        }\n    }\n\n    handleChange = event => {\n        const { name, value } = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    _next = () => {\n        let currentStep = this.state.currentStep\n        currentStep = currentStep >= 2 ? 3 : currentStep + 1\n        this.setState({\n            currentStep: currentStep\n        })\n    }\n\n    _prev = () => {\n        let currentStep = this.state.currentStep\n        currentStep = currentStep <= 1 ? 1 : currentStep - 1\n        this.setState({\n            currentStep: currentStep\n        })\n    }\n\n    nextButton() {\n        let currentStep = this.state.currentStep;\n        if (currentStep < 3) {\n            return (\n                <button\n                    className=\"zl_welcome_slide_step_btns\"\n                    type=\"button\" onClick={this._next}>\n                    Next\n                </button>\n            )\n        }\n        return null;\n    }\n\n    render() {\n        return (\n            <section className=\"zl_welcome_slide_section\">\n                <div className=\"zl_welcome_slide_content container\">\n                    <img src=\"assets/image/welcome-round-shap1.svg\" alt=\"round-shap\" className=\"round_shap_img_one\" />\n                    <img src=\"assets/image/welcome-round-shap2.svg\" alt=\"round-shap\" className=\"round_shap_img_two\" />\n                    <img src=\"assets/image/light-welcome-round-shap1.png\" alt=\"round-shap\" className=\"round_shap_light_img_one\" />\n                    <img src=\"assets/image/light-welcome-round-shap2.png\" alt=\"round-shap\" className=\"round_shap_light_img_two\" />\n                    <React.Fragment>\n                        {/*render the form steps and pass required props in*/}\n                        <Step1\n                            currentStep={this.state.currentStep}\n                            handleChange={this.handleChange}\n                            email={this.state.email}\n                        />\n                        <Step2\n                            currentStep={this.state.currentStep}\n                            handleChange={this.handleChange}\n                            username={this.state.username}\n                        />\n                        <Step3\n                            currentStep={this.state.currentStep}\n                            handleChange={this.handleChange}\n                            password={this.state.password}\n                        />\n                        {/* {this.previousButton()} */}\n                        <ul className=\"zl_welcome_slide_indicator\">\n                            <li className=\"zl_welcome_slide_indicator_items\" title={this.state.currentStep}></li>\n                            <li className=\"zl_welcome_slide_indicator_items\" title={this.state.currentStep}></li>\n                            <li className=\"zl_welcome_slide_indicator_items\" title={this.state.currentStep}></li>\n                        </ul>\n                        <h2 className=\"zl_welcome_slide_heading\">Welcome to crypto</h2>\n                        <p className=\"zl_welcome_slide_peregraph\">Lorem Ipsum is simply dummy text of the printing & industry.</p>\n                        {this.nextButton()}\n                    </React.Fragment>\n                </div>\n            </section>\n        );\n    }\n}\n\nfunction Step1(props) {\n    if (props.currentStep !== 1) {\n        return null\n    }\n    return (\n        <div className=\"zl_welcome_slide_img\">\n            <img src=\"assets/image/welcome-slider1.png\" alt=\"wizard-img\" className=\"img-fluid zl_dark_theme_slide_img\" />\n            <img src=\"assets/image/light-welcome-slider1.png\" alt=\"wizard-img\" className=\"img-fluid zl_light_theme_slide_img\" />\n        </div>\n    );\n}\n\nfunction Step2(props) {\n    if (props.currentStep !== 2) {\n        return null\n    }\n    return (\n        <div className=\"zl_welcome_slide_img\">\n            <img src=\"assets/image/welcome-slider2.png\" alt=\"wizard-img\" className=\"img-fluid zl_dark_theme_slide_img\" />\n            <img src=\"assets/image/light-welcome-slider2.png\" alt=\"wizard-img\" className=\"img-fluid zl_light_theme_slide_img\" />\n        </div>\n    );\n}\n\nfunction Step3(props) {\n    if (props.currentStep !== 3) {\n        return null\n    }\n    return (\n        <React.Fragment>\n            <div className=\"zl_welcome_slide_img\">\n                <img src=\"assets/image/welcome-slider3.png\" alt=\"wizard-img\" className=\"img-fluid zl_dark_theme_slide_img\" />\n                <img src=\"assets/image/light-welcome-slider3.png\" alt=\"wizard-img\" className=\"img-fluid zl_light_theme_slide_img\" />\n            </div>\n            <Link to={'/dashboard'} className=\"zl_welcome_slide_step_btns\">Get Started</Link>\n            <Link to={'/login'} className=\"zl_welcome_slide_already_wallet\">I already have wallet</Link>\n        </React.Fragment>\n    );\n}\nexport default WelcomeModule","import React, {useEffect, useState} from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { USERS } from \"../store/actionTypes\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\n\n// import { mapStateToProps } from './mappers';\n\nconst LogInModule = ({ navigation }) => {\n    let history = useHistory();\n    const [seed, setSeed] = useState({})\n    const dispatch = useDispatch()\n    const error = useSelector(({userAction}) => userAction.error)\n\n    const inputField = [\n        { input: 'UserName', name: 'username', type: \"text\"},\n        { input: 'Password', name: 'password', type: \"password\"}\n    ];\n\n    useEffect(() => {\n        if(localStorage.getItem('user')) {\n            history.push('/dashboard')\n        }\n    }, [])\n    \n    return (\n        <section className=\"zl_login_section\">\n            <div className=\"zl_login_content container\">\n                <div className=\"zl_login_heading_text\">\n                    <h3 className=\"zl_login_heading\">Login</h3>\n                    <p className=\"zl_login_peregraph\">Please input your name and password.</p>\n                </div>\n                <p className=\"zl_login_peregraph\" style={{color: 'red'}}>{error}</p>\n                    {inputField.map((inputValue, i) => (\n                        <div className=\"zl_login_row row\">\n                            <div key={inputValue.name} className=\"zl_login_col_3 col-lg-3 col-md-6\">\n                                <div className=\"zl_login_input_content position-relative\">\n                                    <p className=\"zl_login_input_text\">{inputValue.input}</p>\n                                    <input type={inputValue.type} className=\"zl_login_input\" name={`input${inputValue.name}`} placeholder=\"________\" \n                                        value={seed[inputValue.name]}\n                                        onChange={(e) => {\n                                            setSeed({...seed, [inputValue.name]: e.target.value})\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                <div className=\"zl_login_btn\">\n                    <Link to={'/'} onClick={(e) => {\n                    }} className=\"mx-auto\">Login</Link>\n                </div>\n                <div className=\"zl_login_btn\">\n                    <Link to=\"/register\" className=\"mx-auto\">Register</Link>\n                </div>\n            </div>\n        </section>\n    );\n}\n\nexport default connect(null, null)(LogInModule);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Sparklines, SparklinesLine, SparklinesSpots } from 'react-sparklines';\nimport { useDispatch/*, useSelector*/ } from 'react-redux'\nimport { USERS } from \"../../../store/actionTypes\";\nimport { useHistory } from \"react-router-dom\";\n// import { mapStateToProps } from './mappers';\n\nconst HeadingModule = (props) => {\n    let history = useHistory();\n    const dispatch = useDispatch()\n    return (\n        <>\n            <div className=\"zl_all_page_heading_section\">\n                <div className=\"zl_all_page_heading\">\n                    <h2>{props.name}</h2>\n                </div>\n                <div className=\"zl_all_page_notify_logout_btn\">\n                    <Dropdown className=\"zl_all_page_notification_dropdown\">\n                        <Dropdown.Toggle id=\"dropdown-basic\">\n                            <svg width=\"10\" height=\"12\" viewBox=\"0 0 10 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M5 0C3.92954 0 2.98173 0.691642 2.65518 1.71108L0 10H10L7.34482 1.71108C7.01827 0.691641 6.07046 0 5 0ZM3.5 11C3.22386 11 3 11.2239 3 11.5C3 11.7761 3.22386 12 3.5 12H6.5C6.77614 12 7 11.7761 7 11.5C7 11.2239 6.77614 11 6.5 11H3.5Z\" fill=\"white\" />\n                            </svg>\n                            15\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            <div className=\"zl_all_page_notification_body\">\n                                <h2 className=\"zl_all_page_notification_heading\">NOTIFICATIONS</h2>\n                                <div className=\"zl_all_page_notification_list\">\n                                    <img src=\"assets/image/Avatar.png\" alt=\"user-img\" className=\"zl_all_page_notification_user_img\" />\n                                    <div className=\"zl_all_page_notification_list_body\">\n                                        <h3 className=\"zl_all_page_notification_list_heading\">\n                                            Clifford Hale\n                                            <span>Sent you a message</span>\n                                        </h3>\n                                        <p className=\"zl_all_page_notification_list_peregraph\">\n                                            Lorem Ipsum is simply dummy text of industry.?\n                                        </p>\n                                        <span className=\"zl_all_page_notification_list_time\">2 hours ago</span>\n                                    </div>\n                                    <Button className=\"zl_all_page_notification_list_more_btn\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\" />\n                                        </svg>\n                                    </Button>\n                                </div>\n                                <div className=\"zl_all_page_notification_list\">\n                                    <div className=\"zl_all_page_notification_user_img zl_user_green_bg\">L</div>\n                                    <div className=\"zl_all_page_notification_list_body\">\n                                        <h3 className=\"zl_all_page_notification_list_heading\">\n                                            Lottie Marsh\n                                            <span>Sent you a coin</span>\n                                        </h3>\n                                        <p className=\"zl_all_page_notification_list_peregraph\">\n                                            Lorem Ipsum is simply dummy text of industry.?\n                                        </p>\n                                        <div className=\"zl_all_page_notification_list_price\">\n                                            <p>+380.234<span>LTC</span></p>\n                                            <Link to={'/dashboard'}>Open my wallet</Link>\n                                        </div>\n                                        <span className=\"zl_all_page_notification_list_time\">3 hours ago</span>\n                                    </div>\n                                    <Button className=\"zl_all_page_notification_list_more_btn\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\" />\n                                        </svg>\n                                    </Button>\n                                </div>\n                                <div className=\"zl_all_page_notification_list\">\n                                    <div className=\"zl_all_page_notification_user_img zl_user_pink_bg\">B</div>\n                                    <div className=\"zl_all_page_notification_list_body\">\n                                        <h3 className=\"zl_all_page_notification_list_heading\">\n                                            BTC\n                                            <span>News</span>\n                                        </h3>\n                                        <p className=\"zl_all_page_notification_list_peregraph\">\n                                            Lorem Ipsum is simply dummy text of industry.?\n                                        </p>\n                                        <div className=\"zl_all_page_notification_list_price\">\n                                            <Sparklines data={[0, 5, 0, 15, 12, 14]} margin={6} className=\"zl_add_currency_mini_chart\">\n                                                <SparklinesLine style={{ strokeWidth: 10, stroke: \"#309AFF\", fill: \"none\", curve: \"smooth\" }} />\n                                                <SparklinesSpots size={4}\n                                                    style={{ stroke: \"#309AFF\", strokeWidth: 3, fill: \"white\" }} />\n                                            </Sparklines>\n                                            <p>+39.69%<span>LTC</span></p>\n                                            <Link to={'/dashboard'}>Trade now</Link>\n                                        </div>\n                                        <span className=\"zl_all_page_notification_list_time\">3 hours ago</span>\n                                    </div>\n                                    <Button className=\"zl_all_page_notification_list_more_btn\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\" />\n                                        </svg>\n                                    </Button>\n                                </div>\n                                <div className=\"zl_all_page_notification_list\">\n                                    <img src=\"assets/image/Avatar.png\" alt=\"user-img\" className=\"zl_all_page_notification_user_img\" />\n                                    <div className=\"zl_all_page_notification_list_body\">\n                                        <h3 className=\"zl_all_page_notification_list_heading\">\n                                            Clifford Hale\n                                            <span>Sent you a message</span>\n                                        </h3>\n                                        <p className=\"zl_all_page_notification_list_peregraph\">\n                                            Lorem Ipsum is simply dummy text of industry.?\n                                        </p>\n                                        <div className=\"zl_all_page_notification_list_price\">\n                                            <p>+380.234<span>LTC</span></p>\n                                            <Link to={'/dashboard'}>Open my wallet</Link>\n                                        </div>\n                                        <span className=\"zl_all_page_notification_list_time\">2 hours ago</span>\n                                    </div>\n                                    <Button className=\"zl_all_page_notification_list_more_btn\">\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\" />\n                                        </svg>\n                                    </Button>\n                                </div>\n                                <div className=\"zl_all_page_notification_more_list_btn\">\n                                    <Link to={'/dashboard'}>See All</Link>\n                                </div>\n                            </div>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Link to={'/'} onClick={(e) => {\n                        e.preventDefault()\n                        localStorage.setItem(\"wallet\", \"\");\n                        localStorage.setItem('username', \"\");\n                        localStorage.setItem(\"isAdmin\",false);\n                        dispatch({type: USERS.LOGOUT})\n                        window.location.href = \"/\";\n                    }} className=\"zl_all_page_logout_btn\">Log Out</Link>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default connect(null, null)(HeadingModule);\n","import http from \"../http-common\";\nclass UsersService {\n  getUsers() {\n    return http.get(\"/users\");\n  }\n  addUser(data) {\n    return http.post(\"/addUser\", data);\n  }\n}\nexport default new UsersService();","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport HeadingModule from '../components/Layout/HeadingComponent/Heading';\n// import DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Link } from 'react-router-dom';\n// import Chart from \"react-apexcharts\";\n// import { Sparklines, SparklinesLine, SparklinesSpots } from 'react-sparklines';\nimport UsersService from '../service/user.service'\n\nconst PortfolioModule = () => {\n    // date picker\n    const inputField = [1,2,3,4,5,6,7,8,9,10,11,12];\n    const [seed, setSeed] = useState({})\n    const [users, setUsers] = useState([])\n    useEffect(() => {\n        UsersService.getUsers().then((response) => {\n            setUsers(response.data)\n          });\n    }, [])\n    // const addUser = () => {\n    //     UsersService.addUser()\n    // }\n    return (\n        <>\n            <section className=\"zl_securebackup_page\">\n                <HeadingModule name={'User Management'} />\n                <div className=\"zl_securebackup_row row\">\n                    {inputField.map((inputValue,i) => (\n                        <div className=\"zl_login_col_3 col-lg-3 col-md-6\" key={inputValue}>\n                            <div className=\"zl_login_input_content position-relative\">\n                                <p className=\"zl_login_input_text\">{inputValue}</p>\n                                <input type=\"text\" className=\"zl_login_input\" name={`input${inputValue}`} placeholder=\"________\" \n                                    value={seed[inputValue]}\n                                    onChange={(e) => {\n                                        setSeed({...seed, [inputValue]: e.target.value})\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"zl_securebackup_btn\">\n                    <Link to={'#'} onClick={() => console.log('here') } className=\"mx-auto\">Add</Link>\n                </div>\n                {users.map(user => user)}\n            </section>\n        </>\n    );\n}\n\nexport default connect(null, null)(PortfolioModule);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport HeadingModule from '../components/Layout/HeadingComponent/Heading';\nimport { InputGroup, FormControl, Form } from 'react-bootstrap'\n\n// import { mapStateToProps } from './mappers';\n\nconst addCurrency = [\n    {\n        id: 1,\n        image: 'assets/image/Bitcoin.svg',\n        heading: 'BTC',\n        peregraph: 'Bitcoin',\n        checkboxId: 'checkbox1',\n        isChecked:'true'\n    },\n    {\n        id: 2,\n        image: 'assets/image/ETH.svg',\n        heading: 'ETH',\n        peregraph: 'Ethereum',\n        checkboxId: 'checkbox2',\n        isChecked: 'true'\n    },\n    {\n        id: 3,\n        image: 'assets/image/Litecoin.svg',\n        heading: 'LTC',\n        peregraph: 'Litecoin',\n        checkboxId: 'checkbox3'\n    },\n    {\n        id: 4,\n        image: 'assets/image/algo.svg',\n        heading: 'ALGO',\n        peregraph: 'Algorand',\n        checkboxId: 'checkbox4'\n    },\n    {\n        id: 5,\n        image: 'assets/image/bitcoinlight.svg',\n        heading: 'BCH',\n        peregraph: 'Bitcoin Cash',\n        checkboxId: 'checkbox5'\n    },\n    {\n        id: 6,\n        image: 'assets/image/dash.svg',\n        heading: 'DASH',\n        peregraph: 'Dash Parr',\n        checkboxId: 'checkbox6',\n        isChecked: 'true'\n    },\n    {\n        id: 7,\n        image: 'assets/image/lumen.svg',\n        heading: 'LUMEN',\n        peregraph: 'Lumen Pierce',\n        checkboxId: 'checkbox7'\n    },\n    {\n        id: 8,\n        image: 'assets/image/tezos.svg',\n        heading: 'TEZOS',\n        peregraph: 'Tezos',\n        checkboxId: 'checkbox8'\n    },\n    {\n        id: 9,\n        image: 'assets/image/zcash.svg',\n        heading: 'ZCASH',\n        peregraph: 'Lumen',\n        checkboxId: 'checkbox9'\n    },\n    {\n        id: 10,\n        image: 'assets/image/eos.svg',\n        heading: 'EOS',\n        peregraph: 'Eos',\n        checkboxId: 'checkbox10'\n    }\n];\n\nconst AddCurrencyModule = () => {\n   \n    const [filterData, setFilterData] = useState(addCurrency);\n\n    const search = (event) => {\n        event.preventDefault();\n        console.log(event.target.value);\n        const regex = new RegExp(event.target.value, 'i');\n        console.log(regex);\n        const filtered = addCurrency.filter((item) => {\n          return ((item['peregraph'].search(regex) && item['heading'].search(regex)) > -1);\n        });\n        setFilterData(filtered);\n    }\n\n    return (\n        <>\n            <section className=\"zl_add_currency_page\">\n                <HeadingModule name={'Add Currency'} />\n                <div className=\"zl_all_page_comman_content\">\n                    <InputGroup className=\"zl_add_currency_search\">\n                        <InputGroup.Text className=\"zl_add_currency_search_icon\">\n                            <svg width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <circle cx=\"10.0972\" cy=\"10.0968\" r=\"8.58064\" stroke=\"#828CAE\" strokeWidth=\"2\" />\n                                <path d=\"M15.9678 16.8709L20.2968 21.2\" stroke=\"#828CAE\" strokeWidth=\"2\" />\n                            </svg>\n                        </InputGroup.Text>\n                        <FormControl\n                            placeholder=\"Search\"\n                            type=\"text\"\n                            onChange={search}\n                        />\n                    </InputGroup>\n                    <div className=\"zl_add_currency_row row\">\n                        {filterData.map((currencyValue, i) => (\n                            <div className=\"zl_add_currency_column col\" key={currencyValue.id}>\n                                <div className=\"zl_add_currency_inner_content\">\n                                    <div className=\"zl_add_currency_img\">\n                                        <img src={currencyValue.image} alt=\"currency-img\" />\n                                    </div>\n                                    <div className=\"zl_add_currency_text\">\n                                        <h3>{currencyValue.heading}</h3>\n                                        <p>{currencyValue.peregraph}</p>\n                                    </div>\n                                    <Form.Check\n                                        type=\"switch\"\n                                        id={currencyValue.checkboxId}\n                                        label=\"\"\n                                        className=\"zl_custom_currency_checkbox\"\n                                        defaultChecked={currencyValue.isChecked}\n                                    />\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n}\n\nexport default connect(null, null)(AddCurrencyModule);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Table } from 'react-bootstrap';\n\nconst transactionList = [\n    {\n        id: 1,\n        transactionType: 'assets/image/tableBitcoin.png',\n        transactionName: 'Bitcoin',\n        transactionId: '5bfa9573d7bc89742a4b8ec5f1da0ed09475bfa9573d7bc8',\n        transactionValue: '+0.025',\n        transactionValueUpDown: 'zl_transaction_pluse',\n        transactionStatus: 'Completed',\n        transactionStatusUpDown: 'zl_transaction_completed',\n        transactionDate: '08/26/2018'\n    },\n    {\n        id: 2,\n        transactionType: 'assets/image/tableDash.svg',\n        transactionName: 'Dash Parr',\n        transactionId: '8ba9573d7bc89742a4b8ec5f1da0ed09475bfa9573d7bc8',\n        transactionValue: '-5.23%',\n        transactionValueUpDown: 'zl_transaction_pluse',\n        transactionStatus: 'Completed',\n        transactionStatusUpDown: 'zl_transaction_completed',\n        transactionDate: '08/26/2018'\n    },\n    {\n        id: 3,\n        transactionType: 'assets/image/tableETH.png',\n        transactionName: 'Ethereum',\n        transactionId: '4befa9573d7bc89742a4b8ec5f1da0ed09475bfa9573d7bc',\n        transactionValue: '-5.53%',\n        transactionValueUpDown: 'zl_transaction_minas',\n        transactionStatus: 'Failed',\n        transactionStatusUpDown: 'zl_transaction_failed',\n        transactionDate: '08/26/2018'\n    },\n    {\n        id: 4,\n        transactionType: 'assets/image/tableBitcoin.png',\n        transactionName: 'Bitcoin',\n        transactionId: '6bf9573d7bc89742a4b8ec5f1da0ed09475bfa9573d7bc8',\n        transactionValue: '-5.43%',\n        transactionValueUpDown: 'zl_transaction_pluse',\n        transactionStatus: 'Completed',\n        transactionStatusUpDown: 'zl_transaction_completed',\n        transactionDate: '08/26/2018'\n    },\n    {\n        id: 5,\n        transactionType: 'assets/image/tableDash.svg',\n        transactionName: 'Dash Parr',\n        transactionId: '7bfa9573d7bc89742a4b8ec5f1da0ed09475bfa9573d7bc8',\n        transactionValue: '+0.025',\n        transactionValueUpDown: 'zl_transaction_pluse',\n        transactionStatus: 'Completed',\n        transactionStatusUpDown: 'zl_transaction_completed',\n        transactionDate: '08/26/2018'\n    },\n    {\n        id: 6,\n        transactionType: 'assets/image/tableETH.png',\n        transactionName: 'Ethereum',\n        transactionId: '0fa9573d7bc89742a4b8ec5f1da0ed09475bfa9573d7bc8',\n        transactionValue: '+0.025',\n        transactionValueUpDown: 'zl_transaction_pluse',\n        transactionStatus: 'Completed',\n        transactionStatusUpDown: 'zl_transaction_completed',\n        transactionDate: '08/26/2018'\n    },\n    {\n        id: 7,\n        transactionType: 'assets/image/tableBitcoin.png',\n        transactionName: 'Bitcoin',\n        transactionId: '5bfa9573d7bc89742a4b8ec5f1da0ed09475bfa9573d7bc8',\n        transactionValue: '+0.025',\n        transactionValueUpDown: 'zl_transaction_pluse',\n        transactionStatus: 'Completed',\n        transactionStatusUpDown: 'zl_transaction_completed',\n        transactionDate: '08/26/2018'\n    },\n    {\n        id: 8,\n        transactionType: 'assets/image/tableDash.svg',\n        transactionName: 'Dash Parr',\n        transactionId: '8ba9573d7bc89742a4b8ec5f1da0ed09475bfa9573d7bc8',\n        transactionValue: '-5.23%',\n        transactionValueUpDown: 'zl_transaction_pluse',\n        transactionStatus: 'Completed',\n        transactionStatusUpDown: 'zl_transaction_completed',\n        transactionDate: '08/26/2018'\n    },\n    {\n        id: 9,\n        transactionType: 'assets/image/tableETH.png',\n        transactionName: 'Ethereum',\n        transactionId: '0fa9573d7bc89742a4b8ec5f1da0ed09475bfa9573d7bc8',\n        transactionValue: '+0.025',\n        transactionValueUpDown: 'zl_transaction_minas',\n        transactionStatus: 'Failed',\n        transactionStatusUpDown: 'zl_transaction_failed',\n        transactionDate: '08/26/2018'\n    },\n    {\n        id: 10,\n        transactionType: 'assets/image/tableBitcoin.png',\n        transactionName: 'Bitcoin',\n        transactionId: '5bfa9573d7bc89742a4b8ec5f1da0ed09475bfa9573d7bc8',\n        transactionValue: '+0.025',\n        transactionValueUpDown: 'zl_transaction_pluse',\n        transactionStatus: 'Completed',\n        transactionStatusUpDown: 'zl_transaction_completed',\n        transactionDate: '08/26/2018'\n    },\n    {\n        id: 11,\n        transactionType: 'assets/image/tableDash.svg',\n        transactionName: 'Dash Parr',\n        transactionId: '8ba9573d7bc89742a4b8ec5f1da0ed09475bfa9573d7bc8',\n        transactionValue: '-5.23%',\n        transactionValueUpDown: 'zl_transaction_pluse',\n        transactionStatus: 'Completed',\n        transactionStatusUpDown: 'zl_transaction_completed',\n        transactionDate: '08/26/2018'\n    },\n    {\n        id: 12,\n        transactionType: 'assets/image/tableETH.png',\n        transactionName: 'Ethereum',\n        transactionId: '0fa9573d7bc89742a4b8ec5f1da0ed09475bfa9573d7bc8',\n        transactionValue: '+0.025',\n        transactionValueUpDown: 'zl_transaction_pluse',\n        transactionStatus: 'Completed',\n        transactionStatusUpDown: 'zl_transaction_completed',\n        transactionDate: '08/26/2018'\n    },\n    {\n        id: 13,\n        transactionType: 'assets/image/tableBitcoin.png',\n        transactionName: 'Bitcoin',\n        transactionId: '5bfa9573d7bc89742a4b8ec5f1da0ed09475bfa9573d7bc8',\n        transactionValue: '+0.025',\n        transactionValueUpDown: 'zl_transaction_pluse',\n        transactionStatus: 'Completed',\n        transactionStatusUpDown: 'zl_transaction_completed',\n        transactionDate: '08/26/2018'\n    },\n    {\n        id: 14,\n        transactionType: 'assets/image/tableDash.svg',\n        transactionName: 'Dash Parr',\n        transactionId: '8ba9573d7bc89742a4b8ec5f1da0ed09475bfa9573d7bc8',\n        transactionValue: '-5.23%',\n        transactionValueUpDown: 'zl_transaction_pluse',\n        transactionStatus: 'Completed',\n        transactionStatusUpDown: 'zl_transaction_completed',\n        transactionDate: '08/26/2018'\n    },\n    {\n        id: 15,\n        transactionType: 'assets/image/tableETH.png',\n        transactionName: 'Ethereum',\n        transactionId: '0fa9573d7bc89742a4b8ec5f1da0ed09475bfa9573d7bc8',\n        transactionValue: '+0.025',\n        transactionValueUpDown: 'zl_transaction_minas',\n        transactionStatus: 'Failed',\n        transactionStatusUpDown: 'zl_transaction_failed',\n        transactionDate: '08/26/2018'\n    },\n    {\n        id: 16,\n        transactionType: 'assets/image/tableBitcoin.png',\n        transactionName: 'Bitcoin',\n        transactionId: '5bfa9573d7bc89742a4b8ec5f1da0ed09475bfa9573d7bc8',\n        transactionValue: '+0.025',\n        transactionValueUpDown: 'zl_transaction_pluse',\n        transactionStatus: 'Completed',\n        transactionStatusUpDown: 'zl_transaction_completed',\n        transactionDate: '08/26/2018'\n    },\n    {\n        id: 17,\n        transactionType: 'assets/image/tableDash.svg',\n        transactionName: 'Dash Parr',\n        transactionId: '8ba9573d7bc89742a4b8ec5f1da0ed09475bfa9573d7bc8',\n        transactionValue: '-5.23%',\n        transactionValueUpDown: 'zl_transaction_pluse',\n        transactionStatus: 'Completed',\n        transactionStatusUpDown: 'zl_transaction_completed',\n        transactionDate: '08/26/2018'\n    },\n    {\n        id: 18,\n        transactionType: 'assets/image/tableETH.png',\n        transactionName: 'Ethereum',\n        transactionId: '0fa9573d7bc89742a4b8ec5f1da0ed09475bfa9573d7bc8',\n        transactionValue: '+0.025',\n        transactionValueUpDown: 'zl_transaction_pluse',\n        transactionStatus: 'Completed',\n        transactionStatusUpDown: 'zl_transaction_completed',\n        transactionDate: '08/26/2018'\n    }\n];\n\nconst AllTransactionListComponent = (props) => {\n    // Transaction list\n    const [transaction, setTransaction] = useState(transactionList);\n    useEffect(() => {\n        const regex = new RegExp(props.value, 'i');\n        const filtered = transactionList.filter((item) => {\n          return (item['transactionName'].search(regex)  > -1);\n        });\n        setTransaction(filtered); \n    },[props]);\n\n    return (\n        <>\n            <div className=\"overflow-auto\">\n                <Table className=\"zl_transaction_list_table\">\n                    <thead>\n                        <tr>\n                            <th className=\"zl_transaction_list_table_heading\">type</th>\n                            <th className=\"zl_transaction_list_table_heading\">name</th>\n                            <th className=\"zl_transaction_list_table_heading\">transaction id</th>\n                            <th className=\"zl_transaction_list_table_heading\">value</th>\n                            <th className=\"zl_transaction_list_table_heading\">status</th>\n                            <th className=\"zl_transaction_list_table_heading\">date</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {transaction.map((transactionListData, i) => (\n                            <tr key={transactionListData.id}>\n                                <td className=\"zl_transaction_list_type\">\n                                    <img src={transactionListData.transactionType} alt=\"transaction-icon\" />\n                                </td>\n                                <td className=\"zl_transaction_list_name\">{transactionListData.transactionName}</td>\n                                <td className=\"zl_transaction_list_id\">{transactionListData.transactionId}</td>\n                                <td className={`${transactionListData.transactionValueUpDown} zl_transaction_list_value`}>{transactionListData.transactionValue}</td>\n                                <td className={`${transactionListData.transactionStatusUpDown} zl_transaction_list_status`}>{transactionListData.transactionStatus}</td>\n                                <td className=\"zl_transaction_list_date\">{transactionListData.transactionDate}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            </div>\n        </>\n    );\n}\n\nexport default connect(null, null)(AllTransactionListComponent);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Chart from \"react-apexcharts\";\nimport { Button, FormControl } from 'react-bootstrap'\nimport QRCode from 'qrcode.react';\nimport { Link } from 'react-router-dom';\nimport AllTransactionList from \"../TransactionList/AllTransactionList\";\n\nconst MainComponent = (props) => {\n    // date picker\n    const [dateRange, setDateRange] = useState([null, null]);\n    const [startDate, endDate] = dateRange;\n\n    // send btn\n    const [send, setSend] = useState(false);\n\n    const handleToggle = () => {\n        setSend(!send);\n    };\n\n    // charts\n    // const [valued, onChange] = useState(new Date());\n    const options = [ { \n        chart: {\n            zoom: {\n                enabled: true\n            },\n            stacked: false,\n            type: 'area'\n        },\n        xaxis: {\n            categories: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n            borderColor: '#999',\n            yAxisIndex: 0,\n            type: 'datetime',\n            min: new Date('01 Mar 2012').getTime(),\n            tickAmount: 6,\n            x: new Date('14 Nov 2012').getTime(),\n            label: {\n                show: true,\n                text: 'Support',\n                style: {\n                    colors: ['#fff'],\n                    background: '#00E396'\n                }\n            },\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            width: 2,\n            curve: \"smooth\",\n            colors: ['#F7931A'],\n        },\n        fill: {\n            type: 'gradient',\n            colors: ['rgba(247, 147, 26, 0.33)', 'rgba(45, 55, 83, 0)'],\n            gradient: {\n                shadeIntensity: 1,\n                opacityFrom: 0.7,\n                opacityTo: 0.2,\n                stops: [0, 90, 100]\n            }\n        },\n        series: [\n            {\n                name: \"series-1\",\n                type: 'datetime',\n                data: [\n                    [1327359600000, 30.95],\n                    [1327446000000, 31.34],\n                    [1327532400000, 31.18],\n                    [1327618800000, 31.05],\n                    [1327878000000, 31.00],\n                    [1327964400000, 30.95],\n                    [1328050800000, 31.24],\n                    [1328137200000, 31.29],\n                    [1328223600000, 31.85],\n                    [1328482800000, 31.86],\n                    [1328569200000, 32.28],\n                    [1328655600000, 32.10],\n                    [1328742000000, 32.65],\n                    [1328828400000, 32.21],\n                    [1329087600000, 32.35],\n                    [1329174000000, 32.44],\n                    [1329260400000, 32.46],\n                    [1329346800000, 32.86],\n                    [1329433200000, 32.75],\n                    [1329778800000, 32.54],\n                    [1329865200000, 32.33],\n                    [1329951600000, 32.97],\n                    [1330038000000, 33.41],\n                    [1330297200000, 33.27],\n                    [1330383600000, 33.27],\n                    [1330470000000, 32.89],\n                    [1330556400000, 33.10],\n                    [1330642800000, 33.73],\n                    [1330902000000, 33.22],\n                    [1330988400000, 31.99],\n                    [1331074800000, 32.41],\n                    [1331161200000, 33.05],\n                    [1331247600000, 33.64],\n                    [1331506800000, 33.56],\n                    [1331593200000, 34.22],\n                    [1331679600000, 33.77],\n                    [1331766000000, 34.17],\n                    [1331852400000, 33.82],\n                    [1332111600000, 34.51],\n                    [1332198000000, 33.16],\n                    [1332284400000, 33.56],\n                    [1332370800000, 33.71],\n                    [1332457200000, 33.81],\n                    [1332712800000, 34.40],\n                    [1332799200000, 34.63],\n                    [1332885600000, 34.46],\n                    [1332972000000, 34.48],\n                    [1333058400000, 34.31],\n                    [1333317600000, 34.70],\n                    [1333404000000, 34.31],\n                    [1333490400000, 33.46],\n                    [1333576800000, 33.59],\n                    [1333922400000, 33.22],\n                    [1334008800000, 32.61],\n                    [1334095200000, 33.01],\n                    [1334181600000, 33.55],\n                    [1334268000000, 33.18],\n                    [1334527200000, 32.84],\n                    [1334613600000, 33.84],\n                    [1334700000000, 33.39],\n                    [1334786400000, 32.91],\n                    [1334872800000, 33.06],\n                    [1335132000000, 32.62],\n                    [1335218400000, 32.40],\n                    [1335304800000, 33.13],\n                    [1335391200000, 33.26],\n                    [1335477600000, 33.58],\n                    [1335736800000, 33.55],\n                    [1335823200000, 33.77],\n                    [1335909600000, 33.76],\n                    [1335996000000, 33.32],\n                    [1336082400000, 32.61],\n                    [1336341600000, 32.52],\n                    [1336428000000, 32.67],\n                    [1336514400000, 32.52],\n                    [1336600800000, 31.92],\n                    [1336687200000, 32.20],\n                    [1336946400000, 32.23],\n                    [1337032800000, 32.33],\n                    [1337119200000, 32.36],\n                    [1337205600000, 32.01],\n                    [1337292000000, 31.31],\n                    [1337551200000, 32.01],\n                    [1337637600000, 32.01],\n                    [1337724000000, 32.18],\n                    [1337810400000, 31.54],\n                    [1337896800000, 31.60],\n                    [1338242400000, 32.05],\n                    [1338328800000, 31.29],\n                    [1338415200000, 31.05],\n                    [1338501600000, 29.82],\n                    [1338760800000, 30.31],\n                    [1338847200000, 30.70],\n                    [1338933600000, 31.69],\n                    [1339020000000, 31.32],\n                    [1339106400000, 31.65],\n                    [1339365600000, 31.13],\n                    [1339452000000, 31.77],\n                    [1339538400000, 31.79],\n                    [1339624800000, 31.67],\n                    [1339711200000, 32.39],\n                    [1339970400000, 32.63],\n                    [1340056800000, 32.89],\n                    [1340143200000, 31.99],\n                    [1340229600000, 31.23],\n                    [1340316000000, 31.57],\n                    [1340575200000, 30.84],\n                    [1340661600000, 31.07],\n                    [1340748000000, 31.41],\n                    [1340834400000, 31.17],\n                    [1340920800000, 32.37],\n                    [1341180000000, 32.19],\n                    [1341266400000, 32.51],\n                    [1341439200000, 32.53],\n                    [1341525600000, 31.37],\n                    [1341784800000, 30.43],\n                    [1341871200000, 30.44],\n                    [1341957600000, 30.20],\n                    [1342044000000, 30.14],\n                    [1342130400000, 30.65],\n                    [1342389600000, 30.40],\n                    [1342476000000, 30.65],\n                    [1342562400000, 31.43],\n                    [1342648800000, 31.89],\n                    [1342735200000, 31.38],\n                    [1342994400000, 30.64],\n                    [1343080800000, 30.02],\n                    [1343167200000, 30.33],\n                    [1343253600000, 30.95],\n                    [1343340000000, 31.89],\n                    [1343599200000, 31.01],\n                    [1343685600000, 30.88],\n                    [1343772000000, 30.69],\n                    [1343858400000, 30.58],\n                    [1343944800000, 32.02],\n                    [1344204000000, 32.14],\n                    [1344290400000, 32.37],\n                    [1344376800000, 32.51],\n                    [1344463200000, 32.65],\n                    [1344549600000, 32.64],\n                    [1344808800000, 32.27],\n                    [1344895200000, 32.10],\n                    [1344981600000, 32.91],\n                    [1345068000000, 33.65],\n                ]\n            }\n        ]\n    ,\n},{\n    \n        chart: {\n            zoom: {\n                enabled: true\n            },\n            stacked: false,\n            type: 'area'\n        },\n        xaxis: {\n            categories: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n            borderColor: '#999',\n            yAxisIndex: 0,\n            type: 'datetime',\n            min: new Date('01 Mar 2012').getTime(),\n            tickAmount: 6,\n            x: new Date('14 Nov 2012').getTime(),\n            label: {\n                show: true,\n                text: 'Support',\n                style: {\n                    colors: ['#fff'],\n                    background: '#00E396'\n                }\n            },\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            width: 2,\n            curve: \"smooth\",\n            colors: ['#E3507A'],\n        },\n        fill: {\n            type: 'gradient',\n            colors: ['#E3507A', 'rgba(45, 55, 83, 0)'],\n            gradient: {\n                shadeIntensity: 1,\n                opacityFrom: 0.7,\n                opacityTo: 0.2,\n                stops: [0, 90, 100]\n            }\n        },\n        series: [\n            {\n                name: \"series-1\",\n                type: 'datetime',\n                data: [\n                    [1327359600000, 30.95],\n                    [1327446000000, 31.34],\n                    [1327532400000, 31.18],\n                    [1327618800000, 31.05],\n                    [1327878000000, 31.00],\n                    [1327964400000, 30.95],\n                    [1328050800000, 31.24],\n                    [1328137200000, 31.29],\n                    [1328223600000, 31.85],\n                    [1328482800000, 31.86],\n                    [1328569200000, 32.28],\n                    [1328655600000, 32.10],\n                    [1328742000000, 32.65],\n                    [1328828400000, 32.21],\n                    [1329087600000, 32.35],\n                    [1329174000000, 32.44],\n                    [1329260400000, 32.46],\n                    [1329346800000, 32.86],\n                    [1329433200000, 32.75],\n                    [1329778800000, 32.54],\n                    [1329865200000, 32.33],\n                    [1329951600000, 32.97],\n                    [1330038000000, 33.41],\n                    [1330297200000, 33.27],\n                    [1330383600000, 33.27],\n                    [1330470000000, 32.89],\n                    [1330556400000, 33.10],\n                    [1330642800000, 33.73],\n                    [1330902000000, 33.22],\n                    [1330988400000, 31.99],\n                    [1331074800000, 32.41],\n                    [1331161200000, 33.05],\n                    [1331247600000, 33.64],\n                    [1331506800000, 33.56],\n                    [1331593200000, 34.22],\n                    [1331679600000, 33.77],\n                    [1331766000000, 34.17],\n                    [1331852400000, 33.82],\n                    [1332111600000, 34.51],\n                    [1332198000000, 33.16],\n                    [1332284400000, 33.56],\n                    [1332370800000, 33.71],\n                    [1332457200000, 33.81],\n                    [1332712800000, 34.40],\n                    [1332799200000, 34.63],\n                    [1332885600000, 34.46],\n                    [1332972000000, 34.48],\n                    [1333058400000, 34.31],\n                    [1333317600000, 34.70],\n                    [1333404000000, 34.31],\n                    [1333490400000, 33.46],\n                    [1333576800000, 33.59],\n                    [1333922400000, 33.22],\n                    [1334008800000, 32.61],\n                    [1334095200000, 33.01],\n                    [1334181600000, 33.55],\n                    [1334268000000, 33.18],\n                    [1334527200000, 32.84],\n                    [1334613600000, 33.84],\n                    [1334700000000, 33.39],\n                    [1334786400000, 32.91],\n                    [1334872800000, 33.06],\n                    [1335132000000, 32.62],\n                    [1335218400000, 32.40],\n                    [1335304800000, 33.13],\n                    [1335391200000, 33.26],\n                    [1335477600000, 33.58],\n                    [1335736800000, 33.55],\n                    [1335823200000, 33.77],\n                    [1335909600000, 33.76],\n                    [1335996000000, 33.32],\n                    [1336082400000, 32.61],\n                    [1336341600000, 32.52],\n                    [1336428000000, 32.67],\n                    [1336514400000, 32.52],\n                    [1336600800000, 31.92],\n                    [1336687200000, 32.20],\n                    [1336946400000, 32.23],\n                    [1337032800000, 32.33],\n                    [1337119200000, 32.36],\n                    [1337205600000, 32.01],\n                    [1337292000000, 31.31],\n                    [1337551200000, 32.01],\n                    [1337637600000, 32.01],\n                    [1337724000000, 32.18],\n                    [1337810400000, 31.54],\n                    [1337896800000, 31.60],\n                    [1338242400000, 32.05],\n                    [1338328800000, 31.29],\n                    [1338415200000, 31.05],\n                    [1338501600000, 29.82],\n                    [1338760800000, 30.31],\n                    [1338847200000, 30.70],\n                    [1338933600000, 31.69],\n                    [1339020000000, 31.32],\n                    [1339106400000, 31.65],\n                    [1339365600000, 31.13],\n                    [1339452000000, 31.77],\n                    [1339538400000, 31.79],\n                    [1339624800000, 31.67],\n                    [1339711200000, 32.39],\n                    [1339970400000, 32.63],\n                    [1340056800000, 32.89],\n                    [1340143200000, 31.99],\n                    [1340229600000, 31.23],\n                    [1340316000000, 31.57],\n                    [1340575200000, 30.84],\n                    [1340661600000, 31.07],\n                    [1340748000000, 31.41],\n                    [1340834400000, 31.17],\n                    [1340920800000, 32.37],\n                    [1341180000000, 32.19],\n                    [1341266400000, 32.51],\n                    [1341439200000, 32.53],\n                    [1341525600000, 31.37],\n                    [1341784800000, 30.43],\n                    [1341871200000, 30.44],\n                    [1341957600000, 30.20],\n                    [1342044000000, 30.14],\n                    [1342130400000, 30.65],\n                    [1342389600000, 30.40],\n                    [1342476000000, 30.65],\n                    [1342562400000, 31.43],\n                    [1342648800000, 31.89],\n                    [1342735200000, 31.38],\n                    [1342994400000, 30.64],\n                    [1343080800000, 30.02],\n                    [1343167200000, 30.33],\n                    [1343253600000, 30.95],\n                    [1343340000000, 31.89],\n                    [1343599200000, 31.01],\n                    [1343685600000, 30.88],\n                    [1343772000000, 30.69],\n                    [1343858400000, 30.58],\n                    [1343944800000, 32.02],\n                    [1344204000000, 32.14],\n                    [1344290400000, 32.37],\n                    [1344376800000, 32.51],\n                    [1344463200000, 32.65],\n                    [1344549600000, 32.64],\n                    [1344808800000, 32.27],\n                    [1344895200000, 32.10],\n                    [1344981600000, 32.91],\n                    [1345068000000, 33.65],\n                ]\n            }\n        ]\n    \n},\n{\n   \n        chart: {\n            zoom: {\n                enabled: true\n            },\n            stacked: false,\n            type: 'area'\n        },\n        xaxis: {\n            categories: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n            borderColor: '#999',\n            yAxisIndex: 0,\n            type: 'datetime',\n            min: new Date('01 Mar 2012').getTime(),\n            tickAmount: 6,\n            x: new Date('14 Nov 2012').getTime(),\n            label: {\n                show: true,\n                text: 'Support',\n                style: {\n                    colors: ['#fff'],\n                    background: '#00E396'\n                }\n            },\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            width: 2,\n            curve: \"smooth\",\n            colors: ['#309AFF'],\n        },\n        fill: {\n            type: 'gradient',\n            colors: ['#345D9D', '#2C3651', 'rgba(45, 55, 83, 0)'],\n            gradient: {\n                shadeIntensity: 1,\n                opacityFrom: 0.7,\n                opacityTo: 0.2,\n                stops: [0, 90, 100]\n            }\n        },\n        series: [\n            {\n                name: \"series-1\",\n                type: 'datetime',\n                data: [\n                    [1327359600000, 30.95],\n                    [1327446000000, 31.34],\n                    [1327532400000, 31.18],\n                    [1327618800000, 31.05],\n                    [1327878000000, 31.00],\n                    [1327964400000, 30.95],\n                    [1328050800000, 31.24],\n                    [1328137200000, 31.29],\n                    [1328223600000, 31.85],\n                    [1328482800000, 31.86],\n                    [1328569200000, 32.28],\n                    [1328655600000, 32.10],\n                    [1328742000000, 32.65],\n                    [1328828400000, 32.21],\n                    [1329087600000, 32.35],\n                    [1329174000000, 32.44],\n                    [1329260400000, 32.46],\n                    [1329346800000, 32.86],\n                    [1329433200000, 32.75],\n                    [1329778800000, 32.54],\n                    [1329865200000, 32.33],\n                    [1329951600000, 32.97],\n                    [1330038000000, 33.41],\n                    [1330297200000, 33.27],\n                    [1330383600000, 33.27],\n                    [1330470000000, 32.89],\n                    [1330556400000, 33.10],\n                    [1330642800000, 33.73],\n                    [1330902000000, 33.22],\n                    [1330988400000, 31.99],\n                    [1331074800000, 32.41],\n                    [1331161200000, 33.05],\n                    [1331247600000, 33.64],\n                    [1331506800000, 33.56],\n                    [1331593200000, 34.22],\n                    [1331679600000, 33.77],\n                    [1331766000000, 34.17],\n                    [1331852400000, 33.82],\n                    [1332111600000, 34.51],\n                    [1332198000000, 33.16],\n                    [1332284400000, 33.56],\n                    [1332370800000, 33.71],\n                    [1332457200000, 33.81],\n                    [1332712800000, 34.40],\n                    [1332799200000, 34.63],\n                    [1332885600000, 34.46],\n                    [1332972000000, 34.48],\n                    [1333058400000, 34.31],\n                    [1333317600000, 34.70],\n                    [1333404000000, 34.31],\n                    [1333490400000, 33.46],\n                    [1333576800000, 33.59],\n                    [1333922400000, 33.22],\n                    [1334008800000, 32.61],\n                    [1334095200000, 33.01],\n                    [1334181600000, 33.55],\n                    [1334268000000, 33.18],\n                    [1334527200000, 32.84],\n                    [1334613600000, 33.84],\n                    [1334700000000, 33.39],\n                    [1334786400000, 32.91],\n                    [1334872800000, 33.06],\n                    [1335132000000, 32.62],\n                    [1335218400000, 32.40],\n                    [1335304800000, 33.13],\n                    [1335391200000, 33.26],\n                    [1335477600000, 33.58],\n                    [1335736800000, 33.55],\n                    [1335823200000, 33.77],\n                    [1335909600000, 33.76],\n                    [1335996000000, 33.32],\n                    [1336082400000, 32.61],\n                    [1336341600000, 32.52],\n                    [1336428000000, 32.67],\n                    [1336514400000, 32.52],\n                    [1336600800000, 31.92],\n                    [1336687200000, 32.20],\n                    [1336946400000, 32.23],\n                    [1337032800000, 32.33],\n                    [1337119200000, 32.36],\n                    [1337205600000, 32.01],\n                    [1337292000000, 31.31],\n                    [1337551200000, 32.01],\n                    [1337637600000, 32.01],\n                    [1337724000000, 32.18],\n                    [1337810400000, 31.54],\n                    [1337896800000, 31.60],\n                    [1338242400000, 32.05],\n                    [1338328800000, 31.29],\n                    [1338415200000, 31.05],\n                    [1338501600000, 29.82],\n                    [1338760800000, 30.31],\n                    [1338847200000, 30.70],\n                    [1338933600000, 31.69],\n                    [1339020000000, 31.32],\n                    [1339106400000, 31.65],\n                    [1339365600000, 31.13],\n                    [1339452000000, 31.77],\n                    [1339538400000, 31.79],\n                    [1339624800000, 31.67],\n                    [1339711200000, 32.39],\n                    [1339970400000, 32.63],\n                    [1340056800000, 32.89],\n                    [1340143200000, 31.99],\n                    [1340229600000, 31.23],\n                    [1340316000000, 31.57],\n                    [1340575200000, 30.84],\n                    [1340661600000, 31.07],\n                    [1340748000000, 31.41],\n                    [1340834400000, 31.17],\n                    [1340920800000, 32.37],\n                    [1341180000000, 32.19],\n                    [1341266400000, 32.51],\n                    [1341439200000, 32.53],\n                    [1341525600000, 31.37],\n                    [1341784800000, 30.43],\n                    [1341871200000, 30.44],\n                    [1341957600000, 30.20],\n                    [1342044000000, 30.14],\n                    [1342130400000, 30.65],\n                    [1342389600000, 30.40],\n                    [1342476000000, 30.65],\n                    [1342562400000, 31.43],\n                    [1342648800000, 31.89],\n                    [1342735200000, 31.38],\n                    [1342994400000, 30.64],\n                    [1343080800000, 30.02],\n                    [1343167200000, 30.33],\n                    [1343253600000, 30.95],\n                    [1343340000000, 31.89],\n                    [1343599200000, 31.01],\n                    [1343685600000, 30.88],\n                    [1343772000000, 30.69],\n                    [1343858400000, 30.58],\n                    [1343944800000, 32.02],\n                    [1344204000000, 32.14],\n                    [1344290400000, 32.37],\n                    [1344376800000, 32.51],\n                    [1344463200000, 32.65],\n                    [1344549600000, 32.64],\n                    [1344808800000, 32.27],\n                    [1344895200000, 32.10],\n                    [1344981600000, 32.91],\n                    [1345068000000, 33.65],\n                ]\n            }\n        ]\n    \n}\n]\n    const { id, name, value, updown, price } = props;\n    \n\n    return (\n        <>\n            <div className={`zl_chart_component ${send ? \"active\" : \"\"}`}>\n                <div className=\"zl_all_page_comman_content\">\n                    <div className=\"zl_chart_box_heading_date\">\n                        <h2 className=\"zl_chart_box_heading\">{name}</h2>\n                        <div className=\"position-relative\">\n                            <DatePicker\n                                selectsRange={true}\n                                startDate={startDate}\n                                endDate={endDate}\n                                onChange={(update) => {\n                                    setDateRange(update);\n                                }}\n                                isClearable={true}\n                                dateFormat=\"MMM, yyyy\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"zl_dashboard_chart\">\n                        <Chart options={options[id-1]} series={options[id-1].series} type=\"area\" height={350} />\n                    </div>\n                    <div className=\"zl_wallet_chart_bottom_content\">\n                        <div className=\"zl_all_page_comman_total_price\">\n                            <p className=\"zl_all_page_total_price_heading\">Total Balance</p>\n                            <h2 className=\"zl_all_page_total_price_text\">{price}</h2>\n                            <span className=\"zl_all_page_total_price_up_text\">\n                                <svg width=\"6\" height=\"6\" viewBox=\"0 0 6 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M3.60609 3.60609L2.69695 4.51523C2.36222 4.84996 1.81951 4.84996 1.48477 4.51523C1.15004 4.18049 1.15004 3.63778 1.48477 3.30305L2.39391 2.39391L0 0H6V6L3.60609 3.60609Z\" fill=\"#50E2C2\" />\n                                </svg>\n                                {updown}\n                            </span>\n                        </div>\n                        <div className=\"zl_wallet_chart_send_recive_btn\">\n                            <Button className=\"zl_wallet_chart_send_btn\" onClick={handleToggle}>\n                                <svg width=\"15\" height=\"15\" viewBox=\"0 0 6 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M3.60609 3.60609L2.69695 4.51523C2.36222 4.84996 1.81951 4.84996 1.48477 4.51523C1.15004 4.18049 1.15004 3.63778 1.48477 3.30305L2.39391 2.39391L0 0H6V6L3.60609 3.60609Z\" fill=\"#252F47\" />\n                                </svg>\n                                Send\n                            </Button>\n                            <Button className=\"zl_wallet_chart_recive_btn\" onClick={handleToggle}>\n                                <svg width=\"15\" height=\"15\" viewBox=\"0 0 6 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M3.60609 3.60609L2.69695 4.51523C2.36222 4.84996 1.81951 4.84996 1.48477 4.51523C1.15004 4.18049 1.15004 3.63778 1.48477 3.30305L2.39391 2.39391L0 0H6V6L3.60609 3.60609Z\" fill=\"#252F47\" />\n                                </svg>\n                                Receive\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"zl_send_recive_content\">\n                    <div className=\"zl_send_recive_content_row\">\n                        <div className=\"zl_send_recive_content_column\">\n                            <div className=\"zl_send_recive_inner_content\">\n                                <h3 className=\"zl_send_recive_heading\">\n                                    <svg width=\"15\" height=\"15\" viewBox=\"0 0 6 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path d=\"M3.60609 3.60609L2.69695 4.51523C2.36222 4.84996 1.81951 4.84996 1.48477 4.51523C1.15004 4.18049 1.15004 3.63778 1.48477 3.30305L2.39391 2.39391L0 0H6V6L3.60609 3.60609Z\" fill=\"#53B9EA\" />\n                                    </svg>\n                                    Send\n                                </h3>\n                                <div className=\"zl_send_qr_address\">\n                                    <FormControl\n                                        placeholder=\"Insert address\"\n                                    />\n                                    <QRCode \n                                        value=\"EYdNhC7hGgHuL2sF20p2dLv\"\n                                        bgColor={\"#3D476A\"}\n                                        fgColor={\"#CAD3F2\"}\n                                        size={32}\n                                        className=\"zl_dark_theme_qrcode\"\n                                    />\n                                    <QRCode\n                                        value=\"EYdNhC7hGgHuL2sF20p2dLv\"\n                                        bgColor={\"#EFF0F2\"}\n                                        fgColor={\"#3D476A\"}\n                                        size={32}\n                                        className=\"zl_light_theme_qrcode\"\n                                    />\n                                </div>\n                                <div className=\"zl_send_currency_input_content\">\n                                    <FormControl\n                                        type=\"number\"\n                                        className=\"zl_send_currency_input\"\n                                        defaultValue=\"500\"\n                                    />\n                                    <div className=\"zl_send_currency_input_btns\">\n                                        <Button>1/4</Button>\n                                        <Button>Half</Button>\n                                        <Button>All</Button>\n                                    </div>\n                                </div>\n                                <div className=\"zl_send_currency_text_type\">\n                                    <h3 className=\"zl_send_currency_text\">$825.42</h3>\n                                    <h3 className=\"zl_send_currency_type\">USD</h3>\n                                </div>\n                                <div className=\"zl_send_currency_btn_text\">\n                                    <Button className=\"zl_send_currency_btn\">\n                                        Send\n                                    </Button>\n                                    <div className=\"zl_send_currency_text\">\n                                        <p>Network Fee<span>$0.16</span></p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"zl_send_recive_content_column\">\n                            <div className=\"zl_send_recive_inner_content\">\n                                <h3 className=\"zl_send_recive_heading zl_recive_heading\">\n                                    <svg width=\"15\" height=\"15\" viewBox=\"0 0 6 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                        <path d=\"M3.60609 3.60609L2.69695 4.51523C2.36222 4.84996 1.81951 4.84996 1.48477 4.51523C1.15004 4.18049 1.15004 3.63778 1.48477 3.30305L2.39391 2.39391L0 0H6V6L3.60609 3.60609Z\" fill=\"#53B9EA\" />\n                                    </svg>\n                                    Receive\n                                </h3>\n                                <div className=\"zl_recive_address_content\">\n                                    <p className=\"zl_recive_address_heading\">Address</p>\n                                    <div className=\"zl_recive_copy_address_content\">\n                                        <Button onClick={() => navigator.clipboard.writeText('EYdNhC7hGgHuL2sF20p2dLv')}>\n                                            <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path d=\"M1.48116 0H12.5365C13.3244 0 13.9653 0.641 13.9653 1.42887V4.78252H12.661V1.42887C12.661 1.36022 12.6051 1.30435 12.5365 1.30435H1.48116C1.4125 1.30435 1.35663 1.36022 1.35663 1.42887V12.4842C1.35663 12.5529 1.4125 12.6087 1.48116 12.6087H4.73024V13.9131H1.48116C0.693287 13.9131 0.0522861 13.2721 0.0522861 12.4842V1.42887C0.0523291 0.641 0.693287 0 1.48116 0Z\" fill=\"#CAD3F2\" />\n                                                <path d=\"M7.46358 6.08691H18.5188C19.3068 6.08691 19.9478 6.72791 19.9478 7.51583V18.5711C19.9477 19.3591 19.3068 20.0001 18.5188 20.0001H7.46354C6.67562 20.0001 6.03463 19.3591 6.03463 18.5712V7.51583C6.03458 6.72791 6.67567 6.08691 7.46358 6.08691ZM7.46349 18.6957H18.5188C18.5875 18.6957 18.6434 18.6398 18.6434 18.5712V7.51583C18.6434 7.44713 18.5875 7.39126 18.5188 7.39126H7.46354C7.39484 7.39126 7.33897 7.44713 7.33897 7.51583V18.5712H7.33893C7.33893 18.6398 7.39484 18.6957 7.46349 18.6957Z\" fill=\"#CAD3F2\" />\n                                            </svg>\n                                        </Button>\n                                        <p>EYdNhC7hGgHuL2sF20p2dLv</p>\n                                    </div>\n                                    <div className=\"zl_recive_address_qr_code\">\n                                        <QRCode\n                                            value=\"EYdNhC7hGgHuL2sF20p2dLv\"\n                                            bgColor={\"transparent\"}\n                                            fgColor={\"#CAD3F2\"}\n                                            size={166}\n                                            className=\"zl_dark_theme_qrcode\"\n                                        />\n                                        <QRCode\n                                            value=\"EYdNhC7hGgHuL2sF20p2dLv\"\n                                            bgColor={\"transparent\"}\n                                            fgColor={\"#3D476A\"}\n                                            size={166}\n                                            className=\"zl_light_theme_qrcode\"\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"zl_transaction_list\">\n                    <h3 className=\"zl_transaction_list_main_heading\">\n                        Transaction\n                    <Link to={'/history'}>See All</Link>\n                    </h3>\n                    <AllTransactionList value={value} />\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default connect(null, null)(MainComponent);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport HeadingModule from '../components/Layout/HeadingComponent/Heading';\nimport { Sparklines, SparklinesLine, SparklinesSpots } from 'react-sparklines';\nimport { Link } from 'react-router-dom';\nimport { Tab, Nav } from 'react-bootstrap';\nimport WalletDetails from '../components/Layout/WalletComponent/main';\n\nconst cuurency = [{\n    id:1,\n    name: 'BTC',\n    ratio: '1.9678',\n    updown: '+12,5%',\n    price: '$6,541.1',\n    class: 'zl_add_bitcoin_currency',\n    value: 'Bitcoin'\n},{\n    id:2,\n    name: 'ETH',\n    ratio: '3.2134',\n    updown: '-5.23%',\n    price: '$3,452.1',\n    class: 'zl_add_ethereum_currency',\n    value: 'Ethereum'\n},{\n    id:3,\n    name: 'DASH',\n    ratio: '38.234',\n    updown: '+39.69%',\n    price: '$346.31',\n    class: 'zl_add_litecoin_currency',\n    value: 'Dash Parr'\n},];\nconst PortfolioModule = () => {\n   \n    return (\n        <>\n            <section className=\"zl_wallets_page\">\n                <HeadingModule name={'Wallets'} />\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"tab1\">\n                    <div className=\"zl_add_currency_content\">\n                        <h3 className=\"zl_bottom_content_heading\">crypto currencies</h3>\n                        <Nav className=\"zl_add_currency_row row\">\n                            <div className=\"zl_currency_column_sub_row\">\n                            <Nav.Item className=\"zl_add_currency_column col\">\n                                <Nav.Link eventKey=\"tab1\" className=\"zl_add_currency_inner_content zl_add_bitcoin_currency\">\n                                    <div className=\"zl_add_currency_icon_chart\">\n                                        {/* <img src=\"assets/image/Bitcoin.svg\" alt=\"currency-icon\" /> */}\n                                        <div className=\"zl_currency_icon\">\n                                            <svg viewBox=\"0 0 34 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                <g>\n                                                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.96 9.45191L13.9783 13.2264H19.3666C20.3236 13.2264 21.0992 12.4443 21.0944 11.4825L21.093 11.1958C21.0884 10.2338 20.3053 9.45191 19.3482 9.45191H14.6976H13.96ZM21.7786 18.9638L21.7771 18.6608C21.772 17.5879 20.8995 16.7168 19.8322 16.7168H19.3838H13.9955L14.0159 20.9079H19.8524C20.9198 20.9079 21.7838 20.0353 21.7786 18.9638ZM23.4886 14.6793C24.5609 15.6723 25.2408 17.0875 25.2484 18.6608L25.2499 18.9638C25.2645 21.9591 22.8506 24.3969 19.8692 24.3969H19.7373L19.7449 26H16.2735L16.2657 24.3969H14.8429L14.8507 26H11.3793L11.3715 24.3969H10.5611H8.83951L8.82256 20.9079H10.5442L10.5239 16.7168L10.5068 13.2264L10.4886 9.45189H8.76694L8.75 5.9616H11.282L11.2725 4H14.7439L14.7534 5.9616H16.1763L16.1667 4H19.6383L19.6478 5.97803C22.3731 6.14423 24.5513 8.41715 24.5648 11.1958L24.5661 11.4825C24.572 12.6866 24.1667 13.7932 23.4886 14.6793Z\" fill=\"url(#paint0_linear)\" />\n                                                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.96 9.45191L13.9783 13.2264H19.3666C20.3236 13.2264 21.0992 12.4443 21.0944 11.4825L21.093 11.1958C21.0884 10.2338 20.3053 9.45191 19.3482 9.45191H14.6976H13.96ZM21.7786 18.9638L21.7771 18.6608C21.772 17.5879 20.8995 16.7168 19.8322 16.7168H19.3838H13.9955L14.0159 20.9079H19.8524C20.9198 20.9079 21.7838 20.0353 21.7786 18.9638ZM23.4886 14.6793C24.5609 15.6723 25.2408 17.0875 25.2484 18.6608L25.2499 18.9638C25.2645 21.9591 22.8506 24.3969 19.8692 24.3969H19.7373L19.7449 26H16.2735L16.2657 24.3969H14.8429L14.8507 26H11.3793L11.3715 24.3969H10.5611H8.83951L8.82256 20.9079H10.5442L10.5239 16.7168L10.5068 13.2264L10.4886 9.45189H8.76694L8.75 5.9616H11.282L11.2725 4H14.7439L14.7534 5.9616H16.1763L16.1667 4H19.6383L19.6478 5.97803C22.3731 6.14423 24.5513 8.41715 24.5648 11.1958L24.5661 11.4825C24.572 12.6866 24.1667 13.7932 23.4886 14.6793Z\" fill=\"#7781A2\" />\n                                                </g>\n                                            </svg>\n                                        </div>\n                                        <Sparklines data={[0, 5, 0, 15, 12, 14]} margin={6} className=\"zl_add_currency_mini_chart\">\n                                            <SparklinesLine style={{ strokeWidth: 10, stroke: \"#fec74f\", fill: \"none\", curve: \"smooth\" }} />\n                                            <SparklinesSpots size={4}\n                                                style={{ stroke: \"#fec74f\", strokeWidth: 3, fill: \"white\" }} />\n                                        </Sparklines>\n                                    </div>\n                                    <div className=\"zl_add_currency_price\">\n                                        <div className=\"zl_add_currency_left_price\">\n                                            <h3>BTC</h3>\n                                            <p>1.9678</p>\n                                        </div>\n                                        <div className=\"zl_add_currency_right_price\">\n                                            <span>\n                                                <svg width=\"6\" height=\"6\" viewBox=\"0 0 6 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                    <path d=\"M3.60609 3.60609L2.69695 4.51523C2.36222 4.84996 1.81951 4.84996 1.48477 4.51523C1.15004 4.18049 1.15004 3.63778 1.48477 3.30305L2.39391 2.39391L0 0H6V6L3.60609 3.60609Z\" fill=\"#50E2C2\" />\n                                                </svg>\n                                                +12,5%\n                                            </span>\n                                            <p>$6,541.1</p>\n                                        </div>\n                                    </div>\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item className=\"zl_add_currency_column col\">\n                                <Nav.Link eventKey=\"tab2\" className=\"zl_add_currency_inner_content zl_add_ethereum_currency\">\n                                    <div className=\"zl_add_currency_icon_chart\">\n                                        <div className=\"zl_currency_icon\">\n                                            <svg viewBox=\"0 0 17 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8.48909 9.60596L0 13.2332L8.48909 17.9453L16.9748 13.2332L8.48909 9.60596Z\" fill=\"#010101\" fillOpacity=\"0.6\" />\n                                                <path className=\"left-shap\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 13.2332L8.48909 17.9452V0L0 13.2332Z\" fill=\"#96A0C2\" />\n                                                <path className=\"right-shap\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8.48926 0V17.9452L16.975 13.2332L8.48926 0Z\" fill=\"#7680A0\" />\n                                                <path className=\"left-shap\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 14.7444L8.48909 25.9805V19.4564L0 14.7444Z\" fill=\"#96A0C2\" />\n                                                <path className=\"right-shap\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8.48926 19.4564V25.9805L16.9817 14.7444L8.48926 19.4564Z\" fill=\"#7680A0\" />\n                                            </svg>\n                                        </div>\n                                        <Sparklines data={[14, 12, 15, 0, 5, 0]} margin={6} className=\"zl_add_currency_mini_chart\">\n                                            <SparklinesLine style={{ strokeWidth: 10, stroke: \"#A330FF\", fill: \"none\", curve: \"smooth\" }} />\n                                            <SparklinesSpots size={4}\n                                                style={{ stroke: \"#A330FF\", strokeWidth: 3, fill: \"white\" }} />\n                                        </Sparklines>\n                                    </div>\n                                    <div className=\"zl_add_currency_price\">\n                                        <div className=\"zl_add_currency_left_price\">\n                                            <h3>ETH</h3>\n                                            <p>3.2134</p>\n                                        </div>\n                                        <div className=\"zl_add_currency_right_price\">\n                                            <span className=\"zl_add_currency_down_price\">\n                                                <svg width=\"6\" height=\"6\" viewBox=\"0 0 6 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                    <path d=\"M3.60609 2.39391L2.69695 1.48477C2.36222 1.15004 1.81951 1.15004 1.48477 1.48477C1.15004 1.81951 1.15004 2.36222 1.48477 2.69695L2.39391 3.60609L0 6H6V0L3.60609 2.39391Z\" fill=\"#E3507A\" />\n                                                </svg>\n                                                -5.23%\n                                            </span>\n                                            <p>$3,452.1</p>\n                                        </div>\n                                    </div>\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item className=\"zl_add_currency_column col\">\n                                <Nav.Link eventKey=\"tab3\" className=\"zl_add_currency_inner_content zl_add_litecoin_currency\">\n                                    <div className=\"zl_add_currency_icon_chart\">\n                                        <div className=\"zl_currency_icon\">\n                                            <svg width=\"16\" height=\"22\" viewBox=\"0 0 28 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path d=\"M17.7513 0H7.88132L7.06403 4.57013L15.9708 4.58264C20.3574 4.58264 21.6543 6.17551 21.6167 8.81501C21.5959 10.1702 21.0121 12.4594 20.7577 13.2017C20.0822 15.1782 18.6937 17.4382 13.4897 17.4299L4.83317 17.4257L4.01172 22H13.8567C17.3301 22 18.8063 21.5955 20.3699 20.8741C23.8392 19.2729 25.9033 15.8495 26.7289 11.3836C27.959 4.73275 26.4245 0 17.7513 0\" fill=\"#7781A2\" />\n                                                <path d=\"M3.62358 8.7066C1.03829 8.7066 0.667172 10.3912 0.425322 11.4087C0.104246 12.743 0 13.2809 0 13.2809H10.1035C12.6888 13.2809 13.0599 11.5963 13.3017 10.5789C13.6228 9.24451 13.7271 8.7066 13.7271 8.7066H3.62358Z\" fill=\"#7781A2\" />\n                                            </svg>\n                                        </div>\n                                        <Sparklines data={[0, 5, 0, 15, 12, 14]} margin={6} className=\"zl_add_currency_mini_chart\">\n                                            <SparklinesLine style={{ strokeWidth: 10, stroke: \"#309AFF\", fill: \"none\", curve: \"smooth\" }} />\n                                            <SparklinesSpots size={4}\n                                                style={{ stroke: \"#309AFF\", strokeWidth: 3, fill: \"white\" }} />\n                                        </Sparklines>\n                                    </div>\n                                    <div className=\"zl_add_currency_price\">\n                                        <div className=\"zl_add_currency_left_price\">\n                                            <h3>DASH</h3>\n                                            <p>38.234</p>\n                                        </div>\n                                        <div className=\"zl_add_currency_right_price\">\n                                            <span>\n                                                <svg width=\"6\" height=\"6\" viewBox=\"0 0 6 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                    <path d=\"M3.60609 3.60609L2.69695 4.51523C2.36222 4.84996 1.81951 4.84996 1.48477 4.51523C1.15004 4.18049 1.15004 3.63778 1.48477 3.30305L2.39391 2.39391L0 0H6V6L3.60609 3.60609Z\" fill=\"#50E2C2\" />\n                                                </svg>\n                                                +39.69%\n                                            </span>\n                                            <p>$346.31</p>\n                                        </div>\n                                    </div>\n                                </Nav.Link>\n                            </Nav.Item>\n                            </div>\n                            <div className=\"zl_add_currency_column zl_add_currency_btn_col col\">\n                                <Link to={'/addcurrency'} className=\"zl_add_currency_btn_content\">\n                                    + Add Currency\n                                </Link>\n                            </div>\n                        </Nav>\n                    </div>\n                    <Tab.Content>\n                        {cuurency.map((item) => (\n                        <Tab.Pane eventKey={`tab${item.id}`}  key={item.id}>\n                            <WalletDetails {...item} />\n                        </Tab.Pane>\n                        ))}\n                        {/* <Tab.Pane eventKey=\"tab1\">\n                            <MainComponent />\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"tab2\">\n                            <EthereumComponent />\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"tab3\">\n                            <LitecoinComponent />\n                        </Tab.Pane> */}\n                    </Tab.Content>\n                </Tab.Container>\n            </section>\n        </>\n    );\n}\n\nexport default connect(null, null)(PortfolioModule);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport HeadingModule from '../components/Layout/HeadingComponent/Heading';\nimport { Sparklines, SparklinesLine, SparklinesSpots } from 'react-sparklines';\nimport { Tab, Nav } from 'react-bootstrap';\nimport AllList from '../components/Layout/TransactionList/AllTransactionList';\n\nconst PortfolioModule = () => {\n    return (\n        <>\n            <section className=\"zl_history_page\">\n                <HeadingModule name={'History'} />\n                <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"tab1\">\n                    <div className=\"zl_add_currency_content\">\n                        <h3 className=\"zl_bottom_content_heading\">Activities</h3>\n                        <Nav className=\"zl_add_currency_row row\">\n                            <Nav.Item className=\"zl_add_currency_column col\">\n                                <Nav.Link eventKey=\"tab1\" className=\"zl_all_currency_content\">\n                                    All currency\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item className=\"zl_add_currency_column col\">\n                                <Nav.Link eventKey=\"tab2\" className=\"zl_add_currency_inner_content zl_add_bitcoin_currency\">\n                                    <div className=\"zl_add_currency_icon_chart\">\n                                        {/* <img src=\"assets/image/Bitcoin.svg\" alt=\"currency-icon\" /> */}\n                                        <div className=\"zl_currency_icon\">\n                                            <svg viewBox=\"0 0 34 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                <g>\n                                                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.96 9.45191L13.9783 13.2264H19.3666C20.3236 13.2264 21.0992 12.4443 21.0944 11.4825L21.093 11.1958C21.0884 10.2338 20.3053 9.45191 19.3482 9.45191H14.6976H13.96ZM21.7786 18.9638L21.7771 18.6608C21.772 17.5879 20.8995 16.7168 19.8322 16.7168H19.3838H13.9955L14.0159 20.9079H19.8524C20.9198 20.9079 21.7838 20.0353 21.7786 18.9638ZM23.4886 14.6793C24.5609 15.6723 25.2408 17.0875 25.2484 18.6608L25.2499 18.9638C25.2645 21.9591 22.8506 24.3969 19.8692 24.3969H19.7373L19.7449 26H16.2735L16.2657 24.3969H14.8429L14.8507 26H11.3793L11.3715 24.3969H10.5611H8.83951L8.82256 20.9079H10.5442L10.5239 16.7168L10.5068 13.2264L10.4886 9.45189H8.76694L8.75 5.9616H11.282L11.2725 4H14.7439L14.7534 5.9616H16.1763L16.1667 4H19.6383L19.6478 5.97803C22.3731 6.14423 24.5513 8.41715 24.5648 11.1958L24.5661 11.4825C24.572 12.6866 24.1667 13.7932 23.4886 14.6793Z\" fill=\"url(#paint0_linear)\" />\n                                                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M13.96 9.45191L13.9783 13.2264H19.3666C20.3236 13.2264 21.0992 12.4443 21.0944 11.4825L21.093 11.1958C21.0884 10.2338 20.3053 9.45191 19.3482 9.45191H14.6976H13.96ZM21.7786 18.9638L21.7771 18.6608C21.772 17.5879 20.8995 16.7168 19.8322 16.7168H19.3838H13.9955L14.0159 20.9079H19.8524C20.9198 20.9079 21.7838 20.0353 21.7786 18.9638ZM23.4886 14.6793C24.5609 15.6723 25.2408 17.0875 25.2484 18.6608L25.2499 18.9638C25.2645 21.9591 22.8506 24.3969 19.8692 24.3969H19.7373L19.7449 26H16.2735L16.2657 24.3969H14.8429L14.8507 26H11.3793L11.3715 24.3969H10.5611H8.83951L8.82256 20.9079H10.5442L10.5239 16.7168L10.5068 13.2264L10.4886 9.45189H8.76694L8.75 5.9616H11.282L11.2725 4H14.7439L14.7534 5.9616H16.1763L16.1667 4H19.6383L19.6478 5.97803C22.3731 6.14423 24.5513 8.41715 24.5648 11.1958L24.5661 11.4825C24.572 12.6866 24.1667 13.7932 23.4886 14.6793Z\" fill=\"#7781A2\" />\n                                                </g>\n                                            </svg>\n                                        </div>\n                                        <Sparklines data={[0, 5, 0, 15, 12, 14]} margin={6} className=\"zl_add_currency_mini_chart\">\n                                            <SparklinesLine style={{ strokeWidth: 10, stroke: \"#fec74f\", fill: \"none\", curve: \"smooth\" }} />\n                                            <SparklinesSpots size={4}\n                                                style={{ stroke: \"#fec74f\", strokeWidth: 3, fill: \"white\" }} />\n                                        </Sparklines>\n                                    </div>\n                                    <div className=\"zl_add_currency_price\">\n                                        <div className=\"zl_add_currency_left_price\">\n                                            <h3>BTC</h3>\n                                            <p>1.9678</p>\n                                        </div>\n                                        <div className=\"zl_add_currency_right_price\">\n                                            <span>\n                                                <svg width=\"6\" height=\"6\" viewBox=\"0 0 6 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                    <path d=\"M3.60609 3.60609L2.69695 4.51523C2.36222 4.84996 1.81951 4.84996 1.48477 4.51523C1.15004 4.18049 1.15004 3.63778 1.48477 3.30305L2.39391 2.39391L0 0H6V6L3.60609 3.60609Z\" fill=\"#50E2C2\" />\n                                                </svg>\n                                                +12,5%\n                                            </span>\n                                            <p>$6,541.1</p>\n                                        </div>\n                                    </div>\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item className=\"zl_add_currency_column col\">\n                                <Nav.Link eventKey=\"tab3\" className=\"zl_add_currency_inner_content zl_add_ethereum_currency\">\n                                    <div className=\"zl_add_currency_icon_chart\">\n                                        <div className=\"zl_currency_icon\">\n                                            <svg viewBox=\"0 0 17 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8.48909 9.60596L0 13.2332L8.48909 17.9453L16.9748 13.2332L8.48909 9.60596Z\" fill=\"#010101\" fillOpacity=\"0.6\" />\n                                                <path className=\"left-shap\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 13.2332L8.48909 17.9452V0L0 13.2332Z\" fill=\"#96A0C2\" />\n                                                <path className=\"right-shap\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8.48926 0V17.9452L16.975 13.2332L8.48926 0Z\" fill=\"#7680A0\" />\n                                                <path className=\"left-shap\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 14.7444L8.48909 25.9805V19.4564L0 14.7444Z\" fill=\"#96A0C2\" />\n                                                <path className=\"right-shap\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8.48926 19.4564V25.9805L16.9817 14.7444L8.48926 19.4564Z\" fill=\"#7680A0\" />\n                                            </svg>\n                                        </div>\n                                        <Sparklines data={[14, 12, 15, 0, 5, 0]} margin={6} className=\"zl_add_currency_mini_chart\">\n                                            <SparklinesLine style={{ strokeWidth: 10, stroke: \"#A330FF\", fill: \"none\", curve: \"smooth\" }} />\n                                            <SparklinesSpots size={4}\n                                                style={{ stroke: \"#A330FF\", strokeWidth: 3, fill: \"white\" }} />\n                                        </Sparklines>\n                                    </div>\n                                    <div className=\"zl_add_currency_price\">\n                                        <div className=\"zl_add_currency_left_price\">\n                                            <h3>ETH</h3>\n                                            <p>3.2134</p>\n                                        </div>\n                                        <div className=\"zl_add_currency_right_price\">\n                                            <span className=\"zl_add_currency_down_price\">\n                                                <svg width=\"6\" height=\"6\" viewBox=\"0 0 6 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                    <path d=\"M3.60609 2.39391L2.69695 1.48477C2.36222 1.15004 1.81951 1.15004 1.48477 1.48477C1.15004 1.81951 1.15004 2.36222 1.48477 2.69695L2.39391 3.60609L0 6H6V0L3.60609 2.39391Z\" fill=\"#E3507A\" />\n                                                </svg>\n                                                -5.23%\n                                            </span>\n                                            <p>$3,452.1</p>\n                                        </div>\n                                    </div>\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item className=\"zl_add_currency_column col\">\n                                <Nav.Link eventKey=\"tab4\" className=\"zl_add_currency_inner_content zl_add_litecoin_currency\">\n                                    <div className=\"zl_add_currency_icon_chart\">\n                                        <div className=\"zl_currency_icon\">\n                                            <svg width=\"16\" height=\"22\" viewBox=\"0 0 28 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                <path d=\"M17.7513 0H7.88132L7.06403 4.57013L15.9708 4.58264C20.3574 4.58264 21.6543 6.17551 21.6167 8.81501C21.5959 10.1702 21.0121 12.4594 20.7577 13.2017C20.0822 15.1782 18.6937 17.4382 13.4897 17.4299L4.83317 17.4257L4.01172 22H13.8567C17.3301 22 18.8063 21.5955 20.3699 20.8741C23.8392 19.2729 25.9033 15.8495 26.7289 11.3836C27.959 4.73275 26.4245 0 17.7513 0\" fill=\"#7781A2\" />\n                                                <path d=\"M3.62358 8.7066C1.03829 8.7066 0.667172 10.3912 0.425322 11.4087C0.104246 12.743 0 13.2809 0 13.2809H10.1035C12.6888 13.2809 13.0599 11.5963 13.3017 10.5789C13.6228 9.24451 13.7271 8.7066 13.7271 8.7066H3.62358Z\" fill=\"#7781A2\" />\n                                            </svg>\n                                        </div>\n                                        <Sparklines data={[0, 5, 0, 15, 12, 14]} margin={6} className=\"zl_add_currency_mini_chart\">\n                                            <SparklinesLine style={{ strokeWidth: 10, stroke: \"#309AFF\", fill: \"none\", curve: \"smooth\" }} />\n                                            <SparklinesSpots size={4}\n                                                style={{ stroke: \"#309AFF\", strokeWidth: 3, fill: \"white\" }} />\n                                        </Sparklines>\n                                    </div>\n                                    <div className=\"zl_add_currency_price\">\n                                        <div className=\"zl_add_currency_left_price\">\n                                            <h3>DASH</h3>\n                                            <p>38.234</p>\n                                        </div>\n                                        <div className=\"zl_add_currency_right_price\">\n                                            <span>\n                                                <svg width=\"6\" height=\"6\" viewBox=\"0 0 6 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                                    <path d=\"M3.60609 3.60609L2.69695 4.51523C2.36222 4.84996 1.81951 4.84996 1.48477 4.51523C1.15004 4.18049 1.15004 3.63778 1.48477 3.30305L2.39391 2.39391L0 0H6V6L3.60609 3.60609Z\" fill=\"#50E2C2\" />\n                                                </svg>\n                                                +39.69%\n                                            </span>\n                                            <p>$346.31</p>\n                                        </div>\n                                    </div>\n                                </Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                    </div>\n                    <Tab.Content>\n                        <Tab.Pane eventKey=\"tab1\">\n                            <AllList value='' />\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"tab2\">\n                            <AllList value='Bitcoin' />\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"tab3\">\n                        <AllList value='Ethereum' />\n                        </Tab.Pane>\n                        <Tab.Pane eventKey=\"tab4\">\n                        <AllList value='Dash Parr' />\n                        </Tab.Pane>\n                    </Tab.Content>\n                </Tab.Container>\n            </section>\n        </>\n    );\n}\n\nexport default connect(null, null)(PortfolioModule);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport HeadingModule from '../components/Layout/HeadingComponent/Heading';\n\n// import { mapStateToProps } from './mappers';\n\nconst LogInModule = ({ navigation }) => {\n    const inputField = [1,2,3,4,5,6,7,8,9,10,11,12];\n    const [value, setValue] = useState('');\n\n    return (\n        <section className=\"zl_securebackup_page\">\n            <HeadingModule name={'Secure Backup'} />\n            <div className=\"zl_SecureBackup_heading\">\n                <h3>recovery words</h3>\n            </div>\n            <div className=\"zl_securebackup_row row\">\n                {inputField.map((inputValue,i) => (\n                    <div className=\"zl_securebackup_col_3 col-lg-3 col-md-6\" key={inputValue}>\n                        <div className=\"zl_securebackup_input_content position-relative\">\n                            <p className=\"zl_securebackup_input_text\">{inputValue}</p>\n                            <input type=\"text\" className=\"zl_securebackup_input\" name={`input${inputValue}`} placeholder=\"_____\" defaultValue={value ? value : \"\"} />\n                        </div>\n                    </div>\n                ))}\n            </div>\n            <div className=\"zl_securebackup_btn\">\n                {value === \"\" ? <Link to={'#'} onClick={() => { setValue(\"Lorem\") }} className=\"mx-auto\">Show</Link>\n                    : <Link to={'#'} onClick={() => { setValue(\"\") }} className=\"mx-auto\">Hide</Link>}\n            </div>\n        </section>\n    );\n}\n\nexport default connect(null, null)(LogInModule);","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport HeadingModule from '../components/Layout/HeadingComponent/Heading';\nimport Form from 'react-bootstrap/Form';\nimport { Link } from 'react-router-dom';\n\nconst SettingModule = ({themHandler}) => {\n\n    const [color, setColor] = useState(true);\n    \n    useEffect(() => {\n        if(typeof window !== 'undefined') {\n            setColor(localStorage.getItem(\"themColor\") === \"zl_light_theme_active\" ? false : localStorage.getItem(\"themColor\") !== null && true);\n        }\n    }, []);\n\n    return (\n        <>\n            <section className=\"zl_settings_page\">\n                <HeadingModule name={'Settings'} />\n                <div className=\"zl_setting_list\">\n                    <div className=\"zl_setting_list_items\">\n                        <div className=\"zl_setting_items_heading_peregraph\">\n                            <h3>Notification</h3>\n                            <p>Show a notification when funds are received</p>\n                        </div>\n                        <Form.Check\n                            type=\"switch\"\n                            id='checkbox1'\n                            label=\"\"\n                            className=\"zl_custom_currency_checkbox\"\n                            defaultChecked\n                        />\n                    </div>\n                    <Link to={'/currency'} className=\"zl_setting_list_items\">\n                        <div className=\"zl_setting_items_heading_peregraph\">\n                            <h3>Currency</h3>\n                            <p>Set your preferred local currency.</p>\n                        </div>\n                        <div className=\"zl_setting_items_right_text\">\n                            <h3>AUD</h3>\n                            <svg width=\"8\" height=\"12\" viewBox=\"0 0 8 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M1 1L6.08833 6L1 11\" stroke=\"#828CAE\" strokeWidth=\"2.4\" />\n                            </svg>\n                        </div>\n                    </Link>\n                    <Link to={'/restorewallet'} className=\"zl_setting_list_items\">\n                        <div className=\"zl_setting_items_heading_peregraph\">\n                            <h3>Restore Wallet</h3>\n                            <p>Overwrite your current mobile wallet using a 12-word recovery pharse.</p>\n                        </div>\n                        <div className=\"zl_setting_items_right_text\">\n                            <svg width=\"8\" height=\"12\" viewBox=\"0 0 8 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M1 1L6.08833 6L1 11\" stroke=\"#828CAE\" strokeWidth=\"2.4\" />\n                            </svg>\n                        </div>\n                    </Link>\n                    <div className=\"zl_setting_list_items\">\n                        <div className=\"zl_setting_items_heading_peregraph\">\n                            <h3>Change Theme Mode</h3>\n                        </div>\n                        <Form.Check\n                            type=\"switch\"\n                            id='checkbox2'\n                            label=\"\"\n                            className=\"zl_custom_currency_checkbox\"\n                            checked={color}\n                            onChange={() => {\n                                setColor(!color);\n                                themHandler(color);\n                            }}\n                        />\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n}\n\nexport default connect(null, null)(SettingModule);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport HeadingModule from '../components/Layout/HeadingComponent/Heading';\n\nconst RestoreWalletModule = () => {\n    const inputField = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n    return (\n        <>\n            <section className=\"zl_restore_wallet_page\">\n                <HeadingModule name={'Restore Wallet'} />\n                <div className=\"zl_restore_wallet_input_content\">\n                    <div className=\"zl_securebackup_row row\">\n                        {inputField.map((inputValue, i) => (\n                            <div className=\"zl_securebackup_col_3 col-lg-3 col-md-6\" key={i}>\n                                <div className=\"zl_securebackup_input_content position-relative\">\n                                    <p className=\"zl_securebackup_input_text\">{inputValue}</p>\n                                    <input type=\"text\" className=\"zl_securebackup_input\" name={`input${inputValue}`} placeholder=\"________\" />\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"zl_securebackup_btn\">\n                        <Link to={'#'} className=\"mx-auto\">Restore</Link>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n}\n\nexport default connect(null, null)(RestoreWalletModule);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { InputGroup, FormControl } from 'react-bootstrap'\nimport HeadingModule from '../components/Layout/HeadingComponent/Heading';\n\nconst RestoreWalletModule = () => {\n    const addCurrency = [\n        {\n            id: 1,\n            image: 'assets/image/Australia.png',\n            heading: 'AUD',\n            peregraph: 'Australian Dollar',\n            activeCurrency: 'active'\n        },\n        {\n            id: 2,\n            image: 'assets/image/Brazil.png',\n            heading: 'BRL',\n            peregraph: 'Brazilian Real',\n            activeCurrency: 'unactive'\n        },\n        {\n            id: 3,\n            image: 'assets/image/Canada.png',\n            heading: 'CAD',\n            peregraph: 'Canadian Dollar',\n            activeCurrency: 'unactive'\n        },\n        {\n            id: 4,\n            image: 'assets/image/Switzerland.png',\n            heading: 'CHF',\n            peregraph: 'Swiss France',\n            activeCurrency: 'unactive'\n        },\n        {\n            id: 5,\n            image: 'assets/image/China.png',\n            heading: 'CNY',\n            peregraph: 'Chinese Yuan',\n            activeCurrency: 'unactive'\n        },\n        {\n            id: 6,\n            image: 'assets/image/Germany.png',\n            heading: 'DEM',\n            peregraph: 'Germany',\n            activeCurrency: 'unactive'\n        },\n        {\n            id: 7,\n            image: 'assets/image/EUROPE.png',\n            heading: 'EURO',\n            peregraph: 'Europe',\n            activeCurrency: 'unactive'\n        },\n        {\n            id: 8,\n            image: 'assets/image/France.png',\n            heading: 'EURO',\n            peregraph: 'France',\n            activeCurrency: 'unactive'\n        },\n        {\n            id: 9,\n            image: 'assets/image/England.png',\n            heading: 'AUD',\n            peregraph: 'England',\n            activeCurrency: 'unactive'\n        },\n        {\n            id: 10,\n            image: 'assets/image/HongKong.png',\n            heading: 'BRL',\n            peregraph: 'Hong Kong',\n            activeCurrency: 'unactive'\n        },\n        {\n            id: 11,\n            image: 'assets/image/India.png',\n            heading: 'INR',\n            peregraph: 'India',\n            activeCurrency: 'unactive'\n        },\n        {\n            id: 12,\n            image: 'assets/image/Japan.png',\n            heading: 'CHF',\n            peregraph: 'Japan',\n            activeCurrency: 'unactive'\n        },\n        {\n            id: 13,\n            image: 'assets/image/Kuwait.png',\n            heading: 'CNY',\n            peregraph: 'Kuwait',\n            activeCurrency: 'unactive'\n        },\n        {\n            id: 14,\n            image: 'assets/image/SriLanka.png',\n            heading: 'DEM',\n            peregraph: 'Sri Lanka',\n            activeCurrency: 'unactive'\n        },\n        {\n            id: 15,\n            image: 'assets/image/Maldives.png',\n            heading: 'EURO',\n            peregraph: 'Maldives',\n            activeCurrency: 'unactive'\n        },\n        {\n            id: 16,\n            image: 'assets/image/Norway.png',\n            heading: 'EURO',\n            peregraph: 'Norway',\n            activeCurrency: 'unactive'\n        }\n    ];\n    return (\n        <>\n            <section className=\"zl_currency_page\">\n                <HeadingModule name={'Currency'} />\n                <div className=\"zl_all_page_comman_content\">\n                    <InputGroup className=\"zl_add_currency_search\">\n                        <InputGroup.Text className=\"zl_add_currency_search_icon\">\n                            <svg width=\"22\" height=\"22\" viewBox=\"0 0 22 22\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <circle cx=\"10.0972\" cy=\"10.0968\" r=\"8.58064\" stroke=\"#828CAE\" strokeWidth=\"2\" />\n                                <path d=\"M15.9678 16.8709L20.2968 21.2\" stroke=\"#828CAE\" strokeWidth=\"2\" />\n                            </svg>\n                        </InputGroup.Text>\n                        <FormControl\n                            placeholder=\"Search\"\n                            type=\"text\"\n                        />\n                    </InputGroup>\n                    <div className=\"zl_add_currency_row row\">\n                        {addCurrency.map((currencyValue, i) => (\n                            <div className={`zl_add_currency_column col ${currencyValue.activeCurrency}`} key={i}>\n                                <div className=\"zl_add_currency_inner_content\">\n                                    <div className=\"zl_add_currency_img\">\n                                        <img src={currencyValue.image} alt=\"currency-img\" />\n                                    </div>\n                                    <div className=\"zl_add_currency_text\">\n                                        <h3>{currencyValue.heading}</h3>\n                                        <p>{currencyValue.peregraph}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n}\n\nexport default connect(null, null)(RestoreWalletModule);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport HeadingModule from '../components/Layout/HeadingComponent/Heading';\n\nconst AccountSupportModule = () => {\n    return (\n        <>\n            <section className=\"zl_account_support_page\">\n                <HeadingModule name={'Account Support'} />\n                <div className=\"zl_SecureBackup_heading\">\n                    <h3>How can we help you?</h3>\n                </div>\n                <Form className=\"zl_account_support_input_list\">\n                    <Form.Group className=\"zl_account_support_input_items\">\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Type your email address here!\" />\n                    </Form.Group>\n                    <Form.Group className=\"zl_account_support_input_items\">\n                        <Form.Label>Message</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Type your Message here\" />\n                    </Form.Group>\n                </Form>\n                <div className=\"zl_securebackup_btn\">\n                    <Link to={'#'} className=\"mx-auto\">Send</Link>\n                </div>\n            </section>\n        </>\n    );\n}\n\nexport default connect(null, null)(AccountSupportModule);\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nconst BasicModal = props => {\n\n\tconst { modalType, title, show, children, closeModal } = props;\n\n\tconst [show_modal, setShowModal] = useState(false);\n\tconst [modal_type, setModalType] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tsetShowModal(show);\n\t\tsetModalType(modalType);\n\t});\n\n  \tconst _closeModal = () => {\n  \t\tsetShowModal(false);\n  \t\tcloseModal();\n  \t};\n\n    return (\n\t    <Modal centered show={show_modal} onHide={_closeModal} className=\"or-modal\">\n\t        <Modal.Header closeButton>\n\t          <Modal.Title><span className={modalType}>{title}</span></Modal.Title>\n\t        </Modal.Header>\n\t        <Modal.Body>\n\t            {children}\n\t        </Modal.Body>\n\t        <Modal.Footer>\n\t          <Button variant=\"secondary\" onClick={_closeModal}>\n\t            Close\n\t          </Button>\n\t        </Modal.Footer>\n\t    </Modal>\n    );\t\n}\n\nexport default BasicModal;","import React, { useEffect } from 'react';\n\nexport default function OrSpinButton(props) {\n\n    // renderMode: 'flex' - flex mode(caption is next by spinner) , \n    //             'overlapped' - overlapped mode(spinner is overlapped above the caption)\n    const { title, onClick, additionalClass, size, extraData, children, renderMode='flex', disabled } = props;\n\n    const baseClass = \"justify-content-center align-items-center or-spin-button mx-auto focus:outline-none \" +\n                    (additionalClass ? additionalClass : \"\");\n    const defaultClass = baseClass + \" cursor-pointer\";\n    const disabledClass = baseClass + \" or-spin-button-disabled\";\n\n    const [buttonClass, setButtonClass] = React.useState(defaultClass);\n    const [status, setStatus] = React.useState(0); // 0: Normal, 1: Pending\n\n    useEffect(() => {\n        if (disabled !== undefined && disabled) {\n            setButtonClass(disabledClass);\n        } else {\n            setButtonClass(status? disabledClass: defaultClass);\n        }\n    });\n    // const handleMouseEvent = ev => {\n    //     console.log(ev.type);\n    // }\n    const handleClick = ev => {\n        if (disabled === undefined || !disabled) {\n            _handleClick();\n        }\n    };\n    const _handleClick = () => {\n        if (status) {\n            return;\n        }\n        setStatus(1);\n        setButtonClass(disabledClass);\n        onClick({\n            stopWait: stopWait, \n            getExtraData: getExtraData\n        });\n    };\n    const stopWait = () => {\n        setButtonClass(defaultClass);\n        setStatus(0);        \n    }\n    const getExtraData = () => {\n        return extraData;\n    }\n\n    return (\n        <div\n            id={props.id} \n            className={buttonClass} \n            onClick={handleClick}\n            // onMouseDown={handleMouseEvent}\n            // onMouseUp={handleMouseEvent}\n        >\n            {status?\n                <div className={`${renderMode} items-center justify-center mr-2`}>\n                  <div className={`or-spin-border spinner-border ${size}`} role=\"status\"/>\n                </div>:\n            <></>}\n            {children}\n        </div>\n    );\n}\n","import { ethers } from \"ethers\";\n\nconst MintApprovaltypes = {\n  MintApproval: [\n    { name: \"recipient\", type: \"address\" },\n    { name: \"id\", type: \"uint256\" },\n    { name: \"amount\", type: \"uint256\" },\n  ],\n};\nconst MintBatchApprovalTypes = {\n  MintBatchApproval: [\n    { name: \"recipient\", type: \"address\" },\n    { name: \"ids\", type: \"uint256[]\" },\n    { name: \"amounts\", type: \"uint256[]\" },\n  ],\n};\n\nconst getDomain = (web3, chainId, verifyingContract) => ({\n  name: web3.utils.keccak256(\"ERC1238 Mint Approval\"),\n  version: web3.utils.keccak256(\"1\"),\n  chainId: chainId,\n  verifyingContract: verifyingContract,\n});\n\nexport const getContractAddress = async (chainid) => {};\n\nexport const getMintApprovalSignature = async ({\n  web3,\n  erc1238ContractAddress,\n  chainId,\n  signer,\n  // id,\n  amount,\n  recipient,\n}) => {\n  // console.log(\"I am inside get approval\")\n  const domain = getDomain(web3, chainId, erc1238ContractAddress);\n\n  // const provider = new ethers.providers.JsonRpcProvider(\n  //   \"https://api.s0.b.hmny.io\"\n  // );\n  // const signer = provider.getSigner(address);\n\n  const value = {\n    recipient,\n    id: 1, //id,\n    amount,\n  };\n\n  let sig;\n  try {\n    sig = await signer._signTypedData(domain, MintApprovaltypes, value);\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n\n  return { fullSignature: sig, ...ethers.utils.splitSignature(sig) };\n};\n\nexport const getMintBatchApprovalSignature = async ({\n  web3,\n  erc1238ContractAddress,\n  chainId,\n  signer,\n  // ids,\n  amounts,\n  recipient,\n}) => {\n  // const provider = new ethers.providers.JsonRpcProvider(\n  //   \"https://api.s0.b.hmny.io\"\n  // );\n\n  // const signer = provider.getSigner(address);\n\n  // const domain = getDomain(chainId, erc1238ContractAddress);\n  const domain = getDomain(web3, chainId, erc1238ContractAddress);\n\n  const value = {\n    recipient,\n    ids: [1],\n    amounts,\n  };\n\n  const sig = await signer._signTypedData(\n    domain,\n    MintBatchApprovalTypes,\n    value\n  );\n\n  return { fullSignature: sig, ...ethers.utils.splitSignature(sig) };\n};\n\nexport const orAlert = msg => {\n  alert(msg);\n}","import React, { useEffect, useState } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { connect } from \"react-redux\";\nimport { ethers, utils } from \"ethers\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { USERS } from \"../store/actionTypes\";\nimport { useHistory } from \"react-router-dom\";\nimport BasicModal from '../components/Modals/BasicModal';\nimport OrSpinButton from '../components/OrSpinButton';\nimport { orAlert } from \"../service/utils\";\nimport axios from \"axios\";\nimport { SERVER_URL } from \"../conf\";\nimport Web3 from \"web3\";\n\nconst HomePageModule = (props) => {\n\n  const [data, setdata] = useState({\n    address: \"\",\n    Balance: null,\n  });\n  const [show, setShow] = useState(false);\n  const [showMessage, setShowMessage] = useState(false);\n  const [messageType, setMessageType] = useState(\"error\");\n  const [messageTitle, setMessageTitle] = useState(\"\");\n  const [messageContent, setMessageContent] = useState(\"\");\n\n  let history = useHistory();\n  const dispatch = useDispatch();\n\n  let mounted = false;\n  \n  useEffect(() => {\n    mounted = true;\n\n    return () => {\n      mounted = false;\n    }\n  });\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => {\n    if (window.ethereum) {\n      setShow(true);\n    } else {\n      showMessageBox(\"Warning\", \"No wallet installed. You should have wallet installed to access the page\");\n    }\n  }\n  // const error = useSelector(({ userAction }) => userAction.error);\n\n  const showMessageBox = (title, content, _type = \"error\") => {\n    setMessageType(_type);\n    setMessageTitle(title);\n    setMessageContent(content);\n    setShowMessage(true);\n  }\n\n  const handleCloseMessageBox = () => {\n    setShowMessage(false);\n  }\n\n  const connectWallet = async (params) => {\n    if (window.ethereum) {\n      // res[0] for fetching a first wallet\n      await window.ethereum\n        .request({ method: \"eth_requestAccounts\" })\n        .then(async res => {\n          await accountChangeHandler(res[0])\n          params.stopWait();\n        });\n    } else {\n      showMessageBox(\"Warning\", \"No wallet installed. You should have wallet installed to access the page\");\n    }\n  };\n\n  // Function for login\n  //commit\n  const accountLogin = (account) => {\n    axios.post(\n      SERVER_URL + \"/users/login\",\n      {\n        wallet: account\n      }\n    ).then((response) => {\n      if (response.data.success == true) {\n        localStorage.setItem(\"user\", response.data.username);\n        localStorage.setItem(\"wallet\", account);\n        localStorage.setItem(\"isAdmin\", (response.data.userType === 0));\n        localStorage.setItem(\"parent\", response.data.parent);\n        console.log(\"parent\", response.data.parent);\n\n        dispatch({\n          type: USERS.CONNECT_WALLET,\n          payload: {\n            wallet: account,\n            user: response.data.username,\n            isAdmin: (response.data.userType === 0),\n            badgeTokenAddress: response.data.badgeTokenAddress,\n            // chainId: chainId\n          }\n        });\n        history.push(response.data.url);\n      } else {\n        orAlert(response.data.data);\n        history.push(response.data.url);\n      }\n    });\n  };\n\n  // Function for getting handling all events\n  const accountChangeHandler = async account => {\n    try {\n      let web3 = new Web3(window.ethereum);\n      let chainId = await web3.eth.net.getId();\n      localStorage.setItem(\"chainId\", chainId);\n\n      window.ethereum\n        .request({\n          method: \"wallet_switchEthereumChain\",\n          params: [{ chainId: utils.hexValue(chainId) }], // chainId must be in hexadecimal numbers\n        })\n        .then((res) => {\n          console.log(\"res:\", res);\n          setdata({\n            address: account,\n          });\n          getbalance(account);\n          accountLogin(account);\n        })\n        .catch((error) => {\n          if (error.code === 4902) {\n            try {\n              window.ethereum\n                .request({\n                  method: \"wallet_addEthereumChain\",\n                  params: [\n                    {\n                      chainName: \"Harmony TestNet\",\n                      chainId: utils.hexValue(1666700000),\n                      nativeCurrency: {\n                        name: \"ONE\",\n                        symbol: \"ONE\",\n                        decimals: 18,\n                      },\n                      blockExplorerUrls: [\"https://explorer.pops.one/\"],\n                      rpcUrls: [\"https://api.s0.b.hmny.io\"],\n                    },\n                  ],\n                })\n                .then((res) => {\n                  setdata({\n                    address: account,\n                  });\n                  getbalance(account);\n                  accountLogin(account);\n                  return;\n                });\n            } catch (addError) {\n              console.error(addError);\n            }\n          }\n        });\n    } catch (error) { }\n  };\n\n  // getbalance function for getting a balance in\n  // a right format with help of ethers\n  const getbalance = (address) => {\n    // Requesting balance method\n    window.ethereum\n      .request({\n        method: \"eth_getBalance\",\n        params: [address, \"latest\"],\n      })\n      .then((balance) => {\n        // Setting balance\n        if (mounted) {\n          setdata({\n            address: address,\n            Balance: ethers.utils.formatEther(balance),\n          });\n        }\n      });\n  };\n\n  return (\n    <section className=\"\">\n      <BasicModal\n        show={showMessage}\n        modalType={messageType}\n        title={messageTitle}\n        closeModal={handleCloseMessageBox}\n      >\n        <p className=\"text-white\">{messageContent}</p>\n      </BasicModal>\n      <div className=\"text-right\">\n        <div className=\"zl_securebackup_btn\">\n          <button onClick={handleShow} className=\"mx-auto\" href=\"#\">\n            Connect your wallet\n          </button>\n        </div>\n      </div>\n      <br />\n      <br />\n      <br />\n      <br />\n      <h2 className=\"header-1 text-center\">Track your DAO Reputation</h2>\n      <div className=\"header-small text-center text-muted\">\n        Connect your wallet to participate\n      </div>\n      <br />\n      <br />\n      <div className=\"text-center\">\n        <ul className=\"v-link\">\n          <li className=\"text-muted-dark\">ONERep</li>\n          <li className=\"text-muted-dark\">Discord</li>\n          <li className=\"text-muted-dark\">Twitter</li>\n          <li className=\"text-muted-dark\">Docs</li>\n        </ul>\n      </div>\n\n      <Modal centered show={show} onHide={handleClose}>\n        <Modal.Body>\n          <div className=\"p-4\">\n            <h5 className=\"text-center text-white\">Connect your wallet</h5>\n            <br />\n            <br />\n            <div className=\"text-center\">\n              <OrSpinButton\n                renderMode={'overlapped'}\n                size='large'\n                onClick={connectWallet}\n              >\n                <span color=\"text-white\">\n                  Metamask{\" \"}\n                  <img className=\"\" src=\"assets/image/metamask.svg\" />\n                </span>\n              </OrSpinButton>\n            </div>\n            <br />\n            <br />\n            <p className=\"text-center text-muted\">\n              <small>\n                New to something <a href=\"#\">Link for this</a>\n              </small>\n            </p>\n          </div>\n        </Modal.Body>\n      </Modal>\n    </section>\n  );\n};\nconst mapStoreToProps = ({ userAction }) => ({});\nexport default connect(mapStoreToProps, null)(HomePageModule);\n","import { TESTNET_ADDRESS, MAINNET_ADDRESS } from \"../shared/constants\";\nimport { orAlert, getMintBatchApprovalSignature } from \"./utils\";\nimport { ethers } from \"ethers\";\nimport ONERepDeployedInfo from \"../shared/ONERep.json\";\nimport ERC1238ReceiverMockDeployInfo from \"../shared/ERC1238ReceiverMock.json\";\n\n\nlet contract = null;\nlet deployedContractAddress = null;\nlet gas_price = '';\n\nlet mainnetChainIDs = [1666600000, 1666600001, 1666600002, 1666600003];\n\nlet testnetChainIDs = [1666700000, 1666700001, 1666700002, 1666700003];\n\nconst determineAddress = async (chainId) => {\n  if (mainnetChainIDs.find((id) => id === chainId)) {\n    return MAINNET_ADDRESS;\n  } else if (testnetChainIDs.find((id) => id === chainId)) {\n    return TESTNET_ADDRESS;\n  } else {\n    throw new Error(\"This chain ID does not exist on the HARMONY NETWORK\");\n  }\n};\n\n/*******************************Deploy badge contract******************/\nexport const deployBadgeContract = async (web3, tokenSymbol) => {\n  const accounts = await web3.eth.getAccounts();\n  let gasPrice = await web3.eth.getGasPrice();\n  if (gasPrice === null || gasPrice === \"\" || parseInt(gasPrice) <= 0) {\n    orAlert(\"deployBadgeContract(): Failed to get the current value of gas price\");\n    return null;\n  }\n  const result = await new web3.eth.Contract(ONERepDeployedInfo.abi)\n    .deploy({ data: ONERepDeployedInfo.bytecode, arguments:[localStorage.getItem('wallet') , tokenSymbol, ''] })\n    .send({ from: accounts[0], gasPrice: gasPrice });\n  return result.options.address;\n};\n\n/*******************************Deploy New contract******************/\nexport const deployRecipientContract = async (web3) => {\n\n  const toBN1 = (units, decimalPlaces) => ethers.utils.parseUnits(units, 18);\n  \n  const accounts = await web3.eth.getAccounts();\n  let gasPrice = await web3.eth.getGasPrice();\n  if (gasPrice === null || gasPrice === \"\" || parseInt(gasPrice) <= 0) {\n    orAlert(\"deployRecipientContract(): Failed to get the current value of gas price\");\n    return null;\n  }\n  const result = await new web3.eth.Contract(ERC1238ReceiverMockDeployInfo.abi)\n    .deploy({ data: ERC1238ReceiverMockDeployInfo.bytecode, arguments:[localStorage.getItem('wallet') , ''] })\n    .send({ from: accounts[0], gasPrice: parseInt(gasPrice) });\n  return result.options.address;\n};\n\nexport const initContractByChainId = async (web3, chainId) => {\n  contract = new web3.eth.Contract(ONERepDeployedInfo.abi, await determineAddress(chainId));\n  return contract;\n};\nexport const initContractByAddress = async (web3, address, provider) => {\n  contract = new ethers.Contract(address, ONERepDeployedInfo.abi, provider)\n  return contract;\n};\n\nexport const getContractInstance = async () => {\n  if (contract) {\n    return contract;\n  } else {\n    throw new Error(\"Contract not yet initalized\");\n  }\n};\n\nexport const testBundleMint = async (\n  signer1,\n  eoaRecipient,\n  walletAddress,\n  chainId\n) => {\n  const tokenBatchIds = [\"2000\", \"2010\", \"2020\"];\n  const tokenBatchURIs = [\n    \"https://ipfs.io/ipfs/Qme7ss3ARVgxv6rXqVPiikMJ8u2NLgmgszg13pYrDKEoiu\",\n    \"https://ipfs.io/ipfs/Qme7ss3ARVgxv6rXqVPiikMJ8u2NLgmgszg13pYrDKEoiv\",\n    \"https://ipfs.io/ipfs/Qme7ss3ARVgxv6rXqVPiikMJ8u2NLgmgszg13pYrDKEoiw\",\n  ];\n  const mintBatchAmounts = [\"5000\", \"10000\", \"42195\"];\n\n  const ids = [tokenBatchIds, tokenBatchIds, tokenBatchIds];\n  const amounts = [mintBatchAmounts, mintBatchAmounts, mintBatchAmounts];\n  const uris = [tokenBatchURIs, tokenBatchURIs, tokenBatchURIs];\n\n  const signatureFromSigner1 = await getMintBatchApprovalSignature({\n    erc1238ContractAddress: TESTNET_ADDRESS,\n    chainId,\n    signer: signer1,\n    ids: ids[0],\n    amounts: amounts[0],\n  });\n\n  const signatureFromEoaRecipient = await getMintBatchApprovalSignature({\n    erc1238ContractAddress: TESTNET_ADDRESS,\n    chainId,\n    signer: eoaRecipient,\n    ids: ids[2],\n    amounts: amounts[2],\n  });\n\n  const data = [\n    signatureFromSigner1.fullSignature,\n    [],\n    signatureFromEoaRecipient.fullSignature,\n  ];\n\n  // mintBundle(to, ids, amounts, uris, data, walletAddress);\n};\n\nexport const mintBundle = async (to, ids, amounts, uris, data, address) => {\n  return await contract.methods\n    .mintBundle(to, ids, amounts, uris, data)\n    .send({ from: address });\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport Form from 'react-bootstrap/Form';\nimport { deployBadgeContract } from \"../service/contractService\";\nimport { SERVER_URL } from \"../conf\";\nimport { orAlert } from \"../service/utils\";\nimport Web3 from \"web3\";\nimport OrSpinButton from \"../components/OrSpinButton\";\nimport BasicModal from \"../components/Modals/BasicModal\";\nimport axios from 'axios';\n\n// This function detects most providers injected at window.ethereum\n// import detectEthereumProvider from '@metamask/detect-provider';\n\n// const provider = await detectEthereumProvider();\n\n// if (provider) {\n//   // From now on, this should always be true:\n//   // provider === window.ethereum\n//   startApp(provider); // initialize your app\n// } else {\n//   console.log('Please install MetaMask!');\n// }\nconst IDLE = 0, PENDING = 1;\n\nconst RegisterModule = (props) => {\n\n    const [wallet, setWallet] = useState('');\n    const [status, setStatus] = useState(IDLE); // IDLE, PENDING\n    const [userName, setUserName] = useState(\"\");\n    const [badgeSymbol, setBadgeSymbol] = useState(\"\");\n    const [_badgeTokenAddress, setBadgeTokenAddress] = useState(\"\");\n    const [daoName, setDaoName] = useState(\"\");\n    const [errorUserName, setErrorUserName] = useState(\"\");\n    const [errorBadgeName, setErrorBadgeName] = useState(\"\");\n    const [errorDaoName, setErrorDaoName] = useState(\"\");\n    // Modal-related state variables\n    const [showModal, setShowModal] = useState(false);\n    const [modalType, setModalType] = useState(\"error\"); // 0: Error, 1: Warning, 2: Success\n    const [modalTitle, setModalTitle] = useState(\"\");\n    const [modalMessage, setModalMessage] = useState(\"\");\n    const [isFirstRegister, setIsFirstRegister] = useState(false);\n    const [isInited, setIsInited] = useState(false);\n    \n    const registerForm = useRef();\n\n    useEffect(() => {\n        let walletAddress = localStorage.getItem('wallet');\n        setWallet(walletAddress);\n        if (!isInited) {\n            axios.get(SERVER_URL + '/users', {excludeInactive: true}).then(response => {\n                let nUsers = response.data ? response.data.data ? response.data.data : 0 : 0;\n                if (nUsers < 1) {\n                    setIsFirstRegister(true);\n                } else {\n                    setIsFirstRegister(false);\n                }\n                setIsInited(true);\n            });\n        }\n    }, [wallet]);\n\n    /******************************Deploy badge contract from entered user information************/\n    const onSubmitHandler = async params => {\n        let stopWait = params.stopWait;\n        console.log(\"inside handler\")\n        // e.preventDefault();\n        if (userName === '') {\n            setErrorUserName('Invalid user name');\n            stopWait();\n            return;\n        }\n        if (!isFirstRegister && badgeSymbol === null) {\n            setErrorBadgeName('Invalid badge token name');\n            stopWait();\n            return;\n        }\n        if (!isFirstRegister && daoName === null) {\n            setErrorDaoName('Invalid DAO name');\n            stopWait();\n            return;\n        }\n\n        let web3 = new Web3(window.ethereum);\n        let address1;\n\n        try {\n            if (badgeSymbol) {\n                const accounts = await web3.eth.getAccounts();\n                if (\n                    accounts === undefined || accounts === null ||\n                    accounts.length < 1 || accounts[0] === null\n                ) {\n                    warning(\"No selected account for you\");\n                    stopWait();\n                    return;\n                }\n                setStatus(PENDING);\n                let badgeTokenAddress = await deployBadgeContract(web3, badgeSymbol);\n                setBadgeTokenAddress(badgeTokenAddress);\n                stopWait();\n                setStatus(IDLE);\n                if (badgeTokenAddress === null) {\n                    warning(\"Failed to deploy badge token for you. Please try again\");\n                    return;\n                }\n                registerDao(daoName, badgeSymbol, badgeTokenAddress);\n            }\n            localStorage.setItem(\"user\", userName);\n            localStorage.setItem(\"wallet\", wallet);\n            inform(\"Success\", \"DAO Token deployed, please proceed to launch ONERep Account\");\n        } catch (error) {\n            stopWait();\n            orAlert(error.message);\n        }\n    }\n    const registerDao = async (name, badgeSymbol, badgeAddress) => {\n        axios.post(SERVER_URL + \"/daos/register\", { name: name, badge: badgeSymbol, badgeAddress: badgeAddress })\n        .then((response) => {\n            if (response.data.success == true) {\n                localStorage.setItem(\"dao\", name);\n                localStorage.setItem(\"daoId\", response.data.data);\n                localStorage.setItem(\"badge\", badgeSymbol);\n                localStorage.setItem(\"badgeTokenAddress\", badgeAddress);\n            } else {\n                orAlert(response.data.error);\n            }\n        });\n    };\n\n\n    const handleUserInput = (ev) => {\n        const name = ev.target.name;\n        const value = ev.target.value;\n        if (name === 'userName') {\n            setErrorUserName('');\n            setUserName(ev.target.value);\n        } else if (name === 'badge') {\n            setErrorBadgeName('');\n            setBadgeSymbol(ev.target.value);\n        } else if (name === 'dao') {\n            setErrorDaoName('');\n            setDaoName(ev.target.value);\n        }\n    }\n    const inform = (title, message) => {\n        setModalTitle(title);\n        setModalMessage(message);\n        setModalType('success');\n        setShowModal(true);\n    }\n    const warning = (message) => {\n        setModalTitle(\"Warning\");\n        setModalMessage(message);\n        setModalType('error');\n        setShowModal(true);\n    }\n    const handleCloseModal = () => {\n        setShowModal(false)\n    }\n    const onChangeAddress = ev => {\n        console.log(\"Wallet address changed: \", ev.target.value);\n    }\n    const onClickRegister = ev => {\n        if (registerForm.current){\n            registerForm.current.submit();\n        }\n    }\n\n    return (\n        <section className=\"\">\n            <br /><br />\n            <BasicModal show={showModal} modalType={modalType} title={modalTitle} closeModal={handleCloseModal}>\n                <p className=\"text-white\">{modalMessage}</p>\n            </BasicModal>\n            <h2 className=\"header-1 text-center\">Create a ONERep Account</h2>\n            <br /><br />\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3\">\n                    <Form ref={registerForm} action={SERVER_URL + \"/users/register\"} method=\"post\">\n                        <div className=\"row mb-40\">\n                            <div className=\"col-md-6\">\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                    <div className=\"text-center\">\n                                        <Form.Label className=\"text-muted-dark\">User Name</Form.Label>\n                                    </div>\n                                    <Form.Control \n                                        className={errorUserName !== '' ? \"invalid-content\" : \"\"} \n                                        type=\"text\" \n                                        name=\"userName\" \n                                        placeholder=\"\" \n                                        value={userName} \n                                        onChange={handleUserInput} \n                                        required \n                                        readOnly={status === PENDING ? true : false} \n                                    />\n                                    <div className='error-tooltip'>{errorUserName}</div>\n                                </Form.Group>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                                    <div className=\"text-center\">\n                                        <Form.Label className=\"text-muted-dark\">Address</Form.Label>\n                                    </div>\n                                    <Form.Control \n                                        type=\"text\" \n                                        value={wallet} \n                                        name=\"wallet\" \n                                        placeholder=\"\" \n                                        onChange={onChangeAddress} \n                                        required \n                                        readOnly\n                                    />\n                                </Form.Group>\n                            </div>\n                            {\n                                isFirstRegister ?\n                                    <></> :\n                                    <>\n                                        <div className=\"col-md-6\">\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                                                <div className=\"text-center\">\n                                                    <Form.Label className=\"text-muted-dark\">Badge Name</Form.Label>\n                                                </div>\n                                                <Form.Control \n                                                    className={ errorBadgeName !== '' ? \"invalid-content\" : \"\" } \n                                                    type=\"text\" \n                                                    name=\"badge\" \n                                                    placeholder=\"\" \n                                                    value={badgeSymbol} \n                                                    onChange={handleUserInput} \n                                                    required \n                                                    readOnly={status == PENDING ? true : false} \n                                                />\n                                                <div className='error-tooltip'>{errorBadgeName}</div>\n                                            </Form.Group>\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                                                <div className=\"text-center\">\n                                                    <Form.Label className=\"text-muted-dark\">DAO Name</Form.Label>\n                                                </div>\n                                                <Form.Control \n                                                    className={errorDaoName !== '' ? \"invalid-content\" : \"\"} \n                                                    type=\"text\" \n                                                    name=\"dao\" \n                                                    placeholder=\"\" \n                                                    value={daoName} \n                                                    onChange={handleUserInput} \n                                                    required \n                                                    readOnly={status === PENDING ? true : false} \n                                                />\n                                                <div className='error-tooltip'>{errorDaoName}</div>\n                                            </Form.Group>\n                                        </div>\n                                        <div className=\"col-md-6\">\n                                            <Form.Group className=\"mb-3\" controlId=\"formBasicText\">\n                                                <div className=\"text-center\">\n                                                    <Form.Label className=\"text-muted-dark\">Badge Address</Form.Label>\n                                                </div>\n                                                <Form.Control \n                                                    type=\"text\" \n                                                    name=\"tokenAddress\" \n                                                    value={_badgeTokenAddress}\n                                                    placeholder=\"\" \n                                                    required readOnly \n                                                />\n                                            </Form.Group>\n                                        </div>\n                                        <div className=\"col-12 text-center\">\n                                            <div className=\"zl_securebackup_btn\">\n                                                <OrSpinButton\n                                                    onClick={onSubmitHandler}\n                                                >Deploy Token\n                                                </OrSpinButton>\n                                            </div>\n                                        </div>\n                                    </>\n                            }\n                            <div className=\"col-12 text-center\">\n                                <div className=\"zl_securebackup_btn\">\n                                    {\n                                        <OrSpinButton\n                                            onClick={onClickRegister}\n                                            disabled={status === PENDING}\n                                        >Launch this ONERep\n                                        </OrSpinButton>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </Form>\n                </div>\n            </div>\n        </section>\n    );\n}\nconst mapStoreToProps = ({ userAction }) => ({\n});\nexport default connect(mapStoreToProps, null)(RegisterModule);\n","import React, { useState, useEffect } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nconst OrConfirm = props => {\n\n    const { show, children, closeConfirm, context } = props;\n\n    const [show_modal, setShowModal] = useState(false);\n    const [_context, setContext] = useState(null);\n\n    useEffect(() => {\n        setShowModal(show);\n        setContext(context?context:null);\n    });\n\n    const _closeConfirmWithYes = () => {\n        setShowModal(false);\n        if (closeConfirm) {\n            closeConfirm(true, _context);\n        }\n    };\n\n    const _closeConfirmWithNo = () => {\n        setShowModal(false);\n        if (closeConfirm) {\n            closeConfirm(false, null);\n        }\n    };\n\n    return (\n        <Modal centered show={show_modal} onHide={_closeConfirmWithNo} className=\"or-modal\" onEscapeKeyDown={_closeConfirmWithNo}>\n            <Modal.Header closeButton>\n                <Modal.Title><span>Confirm</span></Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {children}\n            </Modal.Body>\n            <Modal.Footer>\n                <Button style={{\"marginRight\": \"15px\"}} onClick={_closeConfirmWithYes}>\n                    Yes\n                </Button>\n                <Button onClick={_closeConfirmWithNo}>\n                    No\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default OrConfirm;","import React, { useEffect, useState } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport { FaPencilAlt, FaUserAlt, FaTrashAlt, FaRegSave } from \"react-icons/fa\";\n\nconst OrTable = props => {\n\n    const {\n        name,\n        config,\n        editable = false,\n        removable = false,\n        columns,\n        rows,\n        methods\n    } = props;\n\n    const [headers, setHeaders] = useState([]);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [startRowIndex, setStartRowIndex] = useState(0);\n    const [totalRows, setTotalRows] = useState(0);\n    const [tableData, setTableData] = useState([]);\n\n    useEffect(() => {\n        buildTable();\n        setTotalRows(rows.length ? rows.length : 0);\n    }, [rows]);\n\n    useEffect(() => {\n        let _headers = [];\n        if (columns && columns.length) {\n            for (let c in columns) {\n                _headers.push(\n                    <th key={columns[c].name} className={`${columns[c].className ? columns[c].className : \"\"}`}>\n                        {columns[c].label}\n                    </th>\n                );\n            }\n            if (editable || removable) {\n                _headers.push(<th key=\"actions\">Actions</th>);\n            }\n        }\n        setHeaders(_headers);\n    }, [columns]);\n\n    useEffect(() => {\n        buildTable();\n    }, [startRowIndex]);\n    useEffect(() => {\n        setStartRowIndex(0);\n        setPageNumber(1);\n    }, [pageSize]);\n\n    const onPageChanged = ev => {\n        let _page = ev.target.value;\n        setPageNumber(_page);\n        setStartRowIndex(pageNumber * pageSize);\n        console.log(_page);\n    }\n    const onPrevPage = ev => {\n        let _page = pageNumber - 1;\n        if (_page < 1) _page = 1;\n        setPageNumber(_page);\n        setStartRowIndex((_page - 1) * pageSize);\n    }\n    const onNextPage = ev => {\n        let _page = pageNumber + 1;\n        let nextAvailablePageNumber = parseInt((totalRows / pageSize) + 1);\n        if (totalRows % pageSize === 0) {\n            nextAvailablePageNumber--;\n        }\n        if (_page > nextAvailablePageNumber) {\n            _page = pageNumber;\n        }\n        setPageNumber(_page);\n        setStartRowIndex((_page - 1) * pageSize);\n    }\n    const onPageSizeChanged = ev => {\n        let _pageSize = ev.target.value;\n        if (_pageSize < 0) {\n            _pageSize = 0;\n        }\n        setPageSize(_pageSize);\n    }\n    const buildTable = () => {\n        let trArray = [];\n        let trCount = 0;\n        if (rows.length) {\n            for (let i in rows) {\n                let row = rows[i];\n                if (trCount < startRowIndex) {\n                    trCount++;\n                    continue;\n                }\n                if (trCount - startRowIndex >= pageSize) {\n                    break;\n                }\n                let fields = [];\n                for (let j in columns) {\n                    fields.push(\n                        <td\n                            key={name + \"-\" + i + \"-\" + j}\n                            className={\n                                `${row[columns[j].name].className ?\n                                    row[columns[j].name].className :\n                                    \"\"\n                                }`\n                            }\n                        >{row[columns[j].name].content}\n                        </td>\n                    );\n                }\n                if (editable || removable) {\n                    fields.push(\n                        <td\n                            key=\"row-actions-col\"\n                            className=\"text-center\"\n                        >\n                            {\n                                editable ? <div className=\"cursor-pointer flow-layout\">\n                                    <FaPencilAlt onClick={() => methods.onEditRow(row)} />\n                                </div> : <></>}\n                            {\n                                removable ? <div className=\"cursor-pointer flow-layout ml-20\">\n                                    <FaTrashAlt onClick={() => methods.onDeleteRow(row)} className=\"text-danger\" />\n                                </div> : <></>\n                            }\n                        </td>\n                    );\n                }\n                trArray.push(\n                    <tr key={name + \"-row-\" + i}>{fields}</tr>\n                );\n                trCount++;\n            }\n        } else {\n            trArray.push(<tr key=\"no-data\"><td colSpan=\"7\" className=\"text-center main-text-color-second\"><i>No Data</i></td></tr>);\n        }\n        return trArray;\n    }\n\n    return (\n        <div className=\"or-table-wrapper\">\n            <div className=\"or-table-content\">\n                <Table striped className=\"or-table table\">\n                    <thead>\n                        <tr>{headers}</tr>\n                    </thead>\n                    <tbody>{\n                        buildTable()\n                    }</tbody>\n                </Table>\n            </div>\n            <div className=\"or-table-footer\">\n                <div className=\"page-sizer\">\n                    <input className=\"form-control\" value={pageSize} onChange={onPageSizeChanged} />\n                    <span className=\"ml-1 pt-2\"> records per page</span>\n                </div>\n                <div className=\"paginator\">\n                    <div className=\"paginator-control\">\n                        <div className=\"main-button\" onClick={onNextPage}>\n                            <img src=\"assets/image/next.png\" />\n                        </div>\n                    </div>\n                    <div className=\"paginator-input\">\n                        <input className=\"form-control\" value={pageNumber} onChange={onPageChanged} />\n                    </div>\n                    <div className=\"paginator-control\">\n                        <div className=\"main-button\" onClick={onPrevPage}>\n                            <img src=\"assets/image/prev.png\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default OrTable;","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { USERS } from \"../store/actionTypes\";\nimport { FaPencilAlt, FaUserAlt, FaTrashAlt, FaRegSave } from \"react-icons/fa\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport ToggleButton from 'react-toggle-button';\nimport BasicModal from '../components/Modals/BasicModal';\nimport axios from 'axios';\nimport { SERVER_URL } from '../conf';\nimport SettingModule from './Settings';\nimport OrConfirm from '../components/Modals/OrConfirm';\nimport { orAlert } from \"../service/utils\";\nimport OrTable from \"../components/OrTable\";\n\n/*\n *************************************** \n * Data definition for user table \n *************************************** \n */\nconst userTableHeaderInfo = [\n    { label: \"Name\", name: \"username\" },\n    { label: \"DAO\", name: \"daoName\" },\n    { label: \"ETH Wallet\", name: \"wallet\" },\n    { label: \"Is Admin?\", name: \"userType\" },\n    {\n        label: <div className=\"text-right\">\n                    <div>Reputation</div>\n                    <div>Awarded</div>\n                </div>,\n        name: \"received\", className: \"text-right\"\n    },\n    { label: \"Status\", name: \"status\" },\n];\nconst refineTableData = rawTableData => {\n    let userList = expandUserList(rawTableData);\n    let _userList = [];\n    for (let i in userList) {\n        let _user = userList[i];\n        _userList.push({\n            \"username\": { content: <><FaUserAlt /><span className=\"pl-2\">{_user.username}</span></> },\n            \"daoName\": { content: _user.daoName },\n            \"wallet\": { content: _user.wallet },\n            \"userType\": { className: \"text-center\", content: _user.userType === 0 ? 'Admin' : '-' },\n            \"received\": { className: \"text-right\", content: _user.received },\n            \"status\": { className: \"text-center\", content: !_user.status ? 'Inactive' : 'Active' }\n        });\n    }\n    return _userList;\n}\nconst expandUserList = userListNested => {\n    let userList = [];\n    if (userListNested && userListNested.length) {\n        for (let i in userListNested) {\n            let userInfo = userListNested[i];\n            if (userInfo && userInfo.daos && userInfo.daos.length) {\n                for (let j in userInfo.daos) {\n                    userInfo['daoName'] = userInfo.daos[j].name;\n                    userInfo['received'] = userInfo.daos[j].received;\n                    userList.push(userInfo);\n                }\n            } else {\n                userInfo['daoName'] = \"\";\n                userInfo['received'] = \"\";\n                userList.push(userInfo);\n            }\n        }\n    }\n    return userList;\n}\n\n/*\n *************************************** \n ********** Admin page  ****************\n *************************************** \n */\n const AdminModule = (props) => {\n\n    const defaultUser = {\n        _id: '',\n        username: '',\n        wallet: '',\n        badge: '',\n        dao: '',\n        isAdmin: false,\n        status: false,\n        badgeAddress: '0x0000000000000000000000000000000000000000'\n    }\n    const [show, setShow] = useState(false);\n    const [showSettings, setShowSettings] = useState(false);\n    // const [admin, setSAdmin] = useState(false);\n    const [enable, setEnable] = useState(false);\n    const [users, setUsers] = useState([]);\n    const [curUser, setCurUser] = useState(defaultUser);\n    const [color, setColor] = useState('zl_page_dark_mode');\n    const [showMessage, setShowMessage] = useState(false);\n    const [messageType, setMessageType] = useState(\"error\");\n    const [messageTitle, setMessageTitle] = useState(\"\");\n    const [messageContent, setMessageContent] = useState(\"\");\n    const [badgeAddress, setBadgeAddress] = useState(null);\n    const [_userName, setUserName] = useState(null);\n    const [_wallet, setWallet] = useState(null);\n    const [inited, setInited] = useState(false);\n    // const [chainId, setChainId] = useState(0);\n\n    const [confirmContext, setConfirmContext] = useState(\"\");\n    const [confirmText, setConfirmText] = useState(\"\");\n    const [showConfirm, setShowConfirm] = useState(false);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (localStorage.getItem('wallet') === '' || !localStorage.getItem('wallet')) {\n            window.location.href = \"/\";\n            return;\n        }\n        if (!inited) {\n            axios.post(\n                SERVER_URL + '/users/loggedinuserbywallet',\n                {\n                    wallet: localStorage.getItem(\"wallet\")\n                }\n            ).then(ret => {\n                setInited(true);\n                console.log(\"Logged in user:\", ret.data);\n                let badgeAddress = null;\n                if (\n                    ret.data &&\n                    ret.data.data &&\n                    ret.data.data.daoRelation &&\n                    ret.data.data.daoRelation.length\n                ) {\n                    badgeAddress = ret.data.data.daoRelation[0].badgeAddress;\n                }\n                setBadgeAddress(badgeAddress);\n                let userInfo = ret.data.data;\n                dispatch({\n                    type: USERS.CONNECT_WALLET,\n                    payload: {\n                        wallet: userInfo.wallet,\n                        user: userInfo.username,\n                        isAdmin: (userInfo.userType === 0),\n                        badgeTokenAddress: badgeAddress,\n                    }\n                });\n                // setChainId(localStorage.getItem('chainId'));\n            });\n        }\n        if (!users || users.length === undefined || !users.length) {\n            getContributors();\n        }\n    })\n    const openConfirm = (text, context) => {\n        setConfirmContext(context);\n        setConfirmText(text);\n        setShowConfirm(true);\n    }\n    const closeConfirm = (ret, context) => {\n        setShowConfirm(false);\n        if (ret) {\n            if (context && context.onCloseWithYes) {\n                context.onCloseWithYes(context ? context.params ? context.params : null : null);\n            }\n        }\n    }\n    const showMessageBox = (title, content, _type = \"error\") => {\n        setMessageType(_type);\n        setMessageTitle(title);\n        setMessageContent(content);\n        setShowMessage(true);\n    }\n    const handleClose = () => setShow(false);\n    const handleCloseSettings = () => setShowSettings(false);\n    const handleShow = (user) => {\n        setCurUser(user);\n        setUserName(user.username);\n        setWallet(user.wallet);\n        setShow(true);\n    }\n    const handleCloseMessageBox = () => {\n        setShowMessage(false);\n    }\n    const _handleDelete = (user) => {\n        axios.post(SERVER_URL + '/users/delete', { ...user, master: localStorage.getItem(\"wallet\") }).then(response => {\n            let success = response.data ? response.data.success ? response.data.success : false : false;\n            let retData = response.data ? response.data.data ? response.data.data : null : null;\n            if (success) {\n                if (retData === null || retData.length < 1) {\n                    window.location.href = \"/\";\n                    return;\n                }\n                setUsers(refineTableData(retData));\n                orAlert(\"Successfully deleted the user\");\n                return;\n            }\n            orAlert(retData ? retData : \"\");\n        });\n    }\n    const handleDelete = (user) => {\n        openConfirm(\"Are you sure to delete this contributor?\", {\n            onCloseWithYes: _handleDelete,\n            params: user\n        });\n    }\n    const onClickSave = ev => {\n        handleSave(ev);\n    }\n    const handleSave = async ev => {\n        curUser.status = enable;\n        curUser.username = _userName;\n        curUser.wallet = _wallet;\n\n        try {\n            let ret = await axios.post(\n                SERVER_URL + '/users/loggedinuserbywallet',\n                {\n                    wallet: localStorage.getItem(\"wallet\")\n                }\n            );\n            if (\n                ret.status !== 200 ||\n                ret.data === undefined ||\n                ret.data === null ||\n                ret.data.data === undefined ||\n                ret.data.data === null\n            ) {\n                orAlert(\"Failed to get user information by wallet address\");\n                return;\n            }\n            curUser.userType = ret.data.data.userType;\n            setBadgeAddress(\n                ret.data.data.daoRelation ?\n                    ret.data.data.daoRelation.length ?\n                        ret.data.data.daoRelation[0].badgeAddress :\n                        null :\n                    null\n            );\n            // curUser.dao = ret.data.data.dao;\n            // curUser.badge = ret.data.data.badge;\n        } catch (error) {\n            showMessageBox(\"Error\", \"Failed to verify this user\");\n            return;\n        }\n\n        try {\n            let ret = await axios.post(\n                SERVER_URL + '/users/update',\n                {\n                    ...curUser,\n                    badgeAddress: badgeAddress,\n                    master: localStorage.getItem(\"wallet\")\n                }\n            );\n            console.log(\"response\", ret);\n            if (ret.data.success) {\n                setUsers(refineTableData(ret.data.users));\n            } else {\n                alert(ret.data.error);\n            }\n        } catch (error) {\n            showMessageBox(\"Error\", \"Failed to update information for the user\");\n            return;\n        }\n        window.location.reload(true);\n    }\n\n    const borderRadiusStyle = { borderRadius: 2, height: 40, }\n\n    const getContributors = async () => {\n        await axios.post(\n            SERVER_URL + '/users',\n            {\n                master: localStorage.getItem(\"wallet\")\n            }\n        ).then(response => {\n            let users = response.data ? response.data.data ? response.data.data : [] : [];\n            let success = response.data ? response.data.success ? response.data.success : false : false;\n            if (success) {\n                setUsers(refineTableData(users));\n            }\n        });\n    }\n    const onClickSettings = ev => {\n        setShowSettings(true);\n    }\n    const themHandler = (val) => {\n        setColor(val ? 'zl_light_theme_active' : 'zl_page_dark_mode');\n        if (typeof window !== 'undefined') {\n            localStorage.setItem(\"themColor\", val ? 'zl_light_theme_active' : 'zl_page_dark_mode');\n        }\n    }\n    const handleEditRow = row => {\n        // setSAdmin(row.userType === 0);\n        setEnable(row.status);\n        handleShow(row)\n    }\n    const handleDeleteRow = row => {\n        handleDelete(row)\n    }\n\n    return (\n        <section className=\"\">\n            <br /><br />\n            <div className=\"zl_all_page_heading_section\">\n                <div className=\"zl_all_page_heading\"><h2>My ONERep Account</h2></div>\n                <div className=\"zl_all_page_notify_logout_btn\">\n                    <ul className=\"v-link\">\n                        <li><button className=\"btn-connect\" onClick={onClickSettings}><FaPencilAlt /> Settings</button></li>\n                        <li><button className=\"btn-connect\" onClick={() => {\n                            // setSAdmin(false)\n                            setEnable(false)\n                            handleShow(defaultUser)\n                        }}>Add Contributor</button></li>\n                    </ul>\n                </div>\n            </div>\n            <BasicModal\n                show={showMessage}\n                modalType={messageType}\n                title={messageTitle}\n                closeModal={handleCloseMessageBox}\n            >\n                <p className=\"text-white\">{messageContent}</p>\n            </BasicModal>\n            <OrConfirm\n                show={showConfirm}\n                context={confirmContext}\n                closeConfirm={closeConfirm}\n            >\n                {confirmText}\n            </OrConfirm>\n            <OrTable\n                name=\"user-table\"\n                columns={userTableHeaderInfo}\n                editable={true}\n                removable={true}\n                methods={{\n                    onEditRow: handleEditRow,\n                    onDeleteRow: handleDeleteRow\n                }}\n                rows={users}\n            />\n            <Modal centered show={showSettings} onHide={handleCloseSettings}>\n                <Modal.Body>\n                    <SettingModule themHandler={themHandler} />\n                </Modal.Body>\n            </Modal>\n\n            <Modal centered show={show} onHide={handleClose}>\n                <Modal.Body>\n                    <div className=\"p-4\">\n                        <h5 className=\"text-center text-white\">{curUser._id === '' ? \"Add Contributor\" : \"Edit Contributor\"}</h5>\n                        <br /><br />\n                        <Form className=\"row\">\n                            <div className=\"col-md-12\">\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                    <div className=\"text-center\"><Form.Label className=\"text-muted-dark\">Contributor Name</Form.Label></div>\n                                    <Form.Control type=\"text\" name=\"username\" value={_userName} placeholder=\"\" onChange={(e) => setUserName(e.target.value)} required />\n                                </Form.Group>\n                            </div>\n                            <div className=\"col-md-12\">\n                                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                                    <div className=\"text-center\"><Form.Label className=\"text-muted-dark\">Contributor ETH address</Form.Label></div>\n                                    <Form.Control type=\"text\" name=\"wallet\" value={_wallet} onChange={(e) => setWallet(e.target.value)} placeholder=\"\" />\n                                </Form.Group>\n                            </div>\n                            {/*{<div className=\"col-md-6\">\n                            \n                                localStorage.getItem('isAdmin') === \"true\" && ([\n                                    <Form.Label key=\"form-label-elem\" className=\"text-muted-dark\">Is Super Admin?</Form.Label>,\n                                    <ToggleButton\n                                        key=\"toggle-btn-elem\"\n                                        name=\"isAdmin\"\n                                        value={true}\n                                        inactiveLabel=\"No\"\n                                        activeLabel=\"Yes\"\n                                        thumbStyle={borderRadiusStyle}\n                                        trackStyle={borderRadiusStyle}\n                                        onToggle={(value) => {\n                                            setSAdmin(true);\n                                        }} \n                                    />\n                                ])\n                            }\n                            </div>*/}\n                            <div className=\"col-md-6\">\n                                <Form.Label className=\"text-muted-dark\">Enable</Form.Label>\n                                <ToggleButton\n                                    name=\"status\"\n                                    value={enable || false}\n                                    inactiveLabel=\"No\"\n                                    activeLabel=\"Yes\"\n                                    thumbStyle={borderRadiusStyle}\n                                    trackStyle={borderRadiusStyle}\n                                    onToggle={value => {\n                                        setEnable(!value);\n                                    }}\n                                />\n                            </div>\n                            <div className=\"col-12 text-center\">\n                                <div className=\"zl_securebackup_btn\"><button type=\"button\" onClick={onClickSave} className=\"mx-auto\"><FaRegSave /><span className=\"ml-2\">Save</span></button></div>\n                            </div>\n                        </Form>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        </section >\n    );\n}\n\nconst mapStoreToProps = ({ userAction }) => ({});\nexport default connect(mapStoreToProps, null)(AdminModule);\n","import React from \"react\";\n\n/*\n ***********************************\n * ONERep File Import Wizard Step1\n ***********************************\n */\nconst ORFiwStep1 = props => {\n  \n  const {checkAccomplished, stepAction} = props;\n\n  if (props.currentStep !== 1) {\n    return null;\n  }\n\n  const handleStepAction = (ev) => {\n    console.log(\"ORFiwStep1.handleStepAction(): \", ev.target.files);\n    if (ev.target && ev.target.files && ev.target.files.length) {\n      checkAccomplished(1);\n    }\n    if (stepAction) {\n      stepAction(ev);\n    }\n  }\n\n  return (\n    <>\n      <p>Upload Cordinape File</p>\n      <input \n        name=\"fileToUpload\" \n        className=\"main-text-color\"\n        type=\"file\" \n        accept=\".csv\"\n        onChange={handleStepAction}\n      />\n    </>\n  );\n};\n\nexport default ORFiwStep1;","import React, { useEffect, useState } from \"react\";\nimport Table from \"react-bootstrap/Table\";\n\n/*\n ***********************************\n * ONERep File Import Wizard Step 2\n ***********************************\n */\nconst ORFiwStep2 = props => {\n\n  const {/*checkAccomplished, stepAction,*/ stepData} = props;\n\n  const [tableRows, setTableRows] = useState([]);\n  const [values, setValues] = useState([]);\n  const [reputation, setReputation] = useState(0);\n\n  useEffect(() => {\n    if (stepData) {\n      if (stepData.tableRows && stepData.tableRows.length && stepData.tableRows.length > 0) {\n        setTableRows(stepData.tableRows);\n      }\n      if (stepData.values && stepData.values.length && stepData.values.length > 0) {\n        setValues(stepData.values);\n      }\n      if (stepData.reputation) {\n        setReputation(stepData.reputation);\n      }\n    }\n  }, [stepData]);\n  \n  if (props.currentStep !== 2) {\n    return null;\n  }\n\n  // const handleStepAction = (ev) => {\n  //   checkAccomplished(2);\n  //   if (stepAction) {\n  //     stepAction(ev);\n  //   }\n  // }\n\n  return (\n    <>\n      <p>Verify the records</p>\n      <Table responsive striped className=\"zl_transaction_list_table table\">\n        <thead>\n          <tr>\n            {\n              tableRows && tableRows.length?\n                tableRows.map((rows, index) => {\n                  return <th key={index}>{rows}</th>;\n                }):\n              <></>\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {\n            values && values.length?\n              values.map((value, index) => {\n                return (\n                  <tr key={index}>\n                    {value.map((val, i) => {\n                      return <td key={i}>{val}</td>;\n                    })}\n                  </tr>\n                );\n              }):\n              <tr></tr>\n          }\n        </tbody>\n      </Table>\n      <br />\n      <div className=\"text-right text-white\">\n        <h6>Total Mint: {reputation}</h6>\n      </div>\n    </>\n  );\n};\n\nexport default ORFiwStep2;","import React from \"react\";\n\n/*\n ***********************************\n * ONERep File Import Wizard Step 3\n ***********************************\n */\nconst ORFiwStep3 = props => {\n\n  // const {checkAccomplished, stepAction} = props;\n\n  if (props.currentStep !== 3) {\n    return null;\n  }\n\n  // const handleStepAction = (ev) => {\n  //   checkAccomplished(3);\n  //   if (stepAction) {\n  //     stepAction(ev);\n  //   }\n  // }\n\n  return (\n    <>\n      <p>Mint</p>\n    </>\n  );\n};\n\nexport default ORFiwStep3;","import React, { useEffect, useState } from \"react\";\nimport \"./ORFileImportWizardSPB.css\";\nimport \"react-step-progress-bar/styles.css\";\nimport { ProgressBar, Step } from \"react-step-progress-bar\";\n\nconst StepLabel = (props) => {\n  const [accomplished, setAccomplished] = useState(false);\n  const [failedPass, setCheckPass] = useState(false);\n  const [index, setIndex] = useState(0);\n  const [_class, setClass] = useState(\"\");\n\n  useEffect(() => {\n    setAccomplished(props.accomplished);\n    setIndex(props.index);\n    setCheckPass(props.failedPass);\n\n    let _className = \"indexedStep \";\n    if (props.failedPass !== undefined && props.failedPass) {\n      _className += \"failed \";\n    } else if (props.accomplished) {\n      _className += \"accomplished \";\n    }\n    setClass(_className);\n  });\n\n  return (\n    <div className={_class}>{index + 1}</div>\n  );\n}\n/*\n *********************************************************\n * Step progress bar in wizard for importing OpenRep File \n *********************************************************\n */\nconst ORFileImportWizardSPB = props => {\n\n  const [_failedPass, setCheckPass] = useState(true);\n  const [_stepCount, setStepCount] = useState(0);\n  const [currentStep, setCurrentStep] = useState(0);\n\n  useEffect(() => {\n    setCurrentStep(props.currentStep);\n    setCheckPass(props.failedPass);\n    setStepCount(props.stepCount);\n  });\n\n  var stepPercentage = 0;\n  var failedPassList = [];\n\n  for (let i = 0; i < props.stepCount; i++) {\n    if (i == props.currentStep - 1) {\n      failedPassList.push(props.failedPass);\n    } else {\n      failedPassList.push(false);\n    }\n  }\n\n  if (props.currentStep === 1) {\n    stepPercentage = 0;\n  } else if (props.currentStep === 2) {\n    stepPercentage = 50;\n  } else if (props.currentStep === 3) {\n    stepPercentage = 100;\n  } else {\n    stepPercentage = 0;\n  }\n\n  return (\n    <ProgressBar percent={stepPercentage}>\n      <Step>\n        {({ accomplished, index }) => (\n          <StepLabel accomplished={accomplished} index={index} failedPass={failedPassList[index]} />\n        )}\n      </Step>\n      <Step>\n        {({ accomplished, index }) => (\n          <StepLabel accomplished={accomplished} index={index} failedPass={failedPassList[index]} />\n        )}\n      </Step>\n      <Step>\n        {({ accomplished, index }) => (\n          <StepLabel accomplished={accomplished} index={index} failedPass={failedPassList[index]} />\n        )}\n      </Step>\n    </ProgressBar>\n  );\n};\n\nexport default ORFileImportWizardSPB;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  CardText,\n  CardFooter\n} from \"reactstrap\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport ORFiwStep1 from \"./ORFiwStep1\";\nimport ORFiwStep2 from \"./ORFiwStep2\";\nimport ORFiwStep3 from \"./ORFiwStep3\";\n\nimport ORFileImportWizardSPB from \"./ORFileImportWizardSPB\";\n\nconst ORFileImportWizard = props => {\n\n  const { stepActions, stepData, onClose } = props;\n\n  const [currentStep, setCurrentStep] = useState(1);\n  const [failedPass, setFailedPass] = useState(false);\n  const [fileToUpload, setFileToUpload] = useState(\"\");\n  const [passedStep, setPassedStep] = useState(0);\n  const [_stepData, setStepData] = useState([]);\n\n  useEffect(() => {\n    setStepData(stepData);\n  }, [stepData]);\n\n  // Use the submitted data to set the state\n  const handleChange = event => {\n    const { name, value } = event.target;\n    if (name === 'currentStep') setCurrentStep(value);\n    else if (name === 'fileToUpload') setFileToUpload(value);\n    else if (name === 'passedStep') setPassedStep(value);\n  }\n  // Trigger an alert on form submission\n  const checkAccomplished = step => {\n    setPassedStep(step);\n  }\n  const validateStep = step => {\n    if (step === 1) {\n      if (passedStep >= 1) {\n        return true;\n      }\n      return false;\n    } \n    return true;\n  }\n  // Test current step with ternary\n  // _next and _previous functions will be called on button click\n  const _next = () => {\n    if (!validateStep(currentStep)) {\n      setFailedPass(true);\n      setTimeout(() => { setFailedPass(false) }, 700);\n      return;\n    }\n    setFailedPass(false);\n    // If the current step is 1 or 2, then add one on \"next\" button click\n    let _currentStep = currentStep >= 2 ? 3 : currentStep + 1;\n    setCurrentStep(_currentStep);\n  }\n  const _prev = () => {\n    if (currentStep === 2) {\n      setPassedStep(0);\n    }\n    // If the current step is 2 or 3, then subtract one on \"previous\" button click\n    let _currentStep = currentStep <= 1 ? 1 : currentStep - 1;\n    setCurrentStep(_currentStep);\n  }\n  const _mint = ev => {\n    stepActions[stepActions.length - 1](ev);\n  }\n  // The \"next\" and \"previous\" button functions\n  const PreviousButton = () => {\n    // If the current step is not 1, then render the \"previous\" button\n    if (currentStep !== 1) {\n      return (\n        <Button color=\"secondary float-left\" onClick={_prev}>\n          Previous\n        </Button>\n      );\n    }\n    // ...else return nothing\n    return <></>;\n  }\n  const NextButton = () => {\n    // If the current step is not 3, then render the \"next\" button\n    if (currentStep < 3) {\n      return (\n        <div className=\"or-button float-right\" onClick={_next}>\n          Next\n        </div>\n      );\n    }\n    // ...else render nothing\n    return <></>;\n  }\n  const MintButton = () => {\n    // If the current step is the last step, then render the \"submit\" button\n    if (currentStep > 2) {\n      return <div className=\"or-button float-right\" onClick={_mint}>Mint</div>;\n    }\n    // ...else render nothing\n    return <></>;\n  }\n\n  return (\n    <>\n      {/*<Modal centered className=\"w-fit-content\" show={show} onHide={handleCloseWatingModalForMint}>*/}\n      <Modal centered className=\"or-wizard-modal w-fit-content\" show={true}>\n        <Modal.Body className=\"\">\n          <Card className=\"or-wizard-dialog bg-dark main-text-color\">\n            <CardHeader>\n                <div className=\"flow-layout float-left mr-10\">\n                  Import Cordinape file\n                </div>\n                <div className=\"or-small-button float-right\" onClick={onClose}>x</div>\n            </CardHeader>\n            <CardBody>\n              <CardTitle style={{\"marginBottom\": \"4em\", \"marginTop\": \"2em\"}}>\n                <ORFileImportWizardSPB currentStep={currentStep} failedPass={failedPass} stepCount={3} />\n              </CardTitle>\n              <CardText />\n              <ORFiwStep1\n                currentStep={currentStep}\n                handleChange={handleChange}\n                fileToupload={fileToUpload}\n                checkAccomplished={checkAccomplished}\n                stepAction={stepActions[0]}\n                stepData={_stepData[0]}\n              />\n              <ORFiwStep2\n                currentStep={currentStep}\n                handleChange={handleChange}\n                checkAccomplished={checkAccomplished}\n                stepAction={stepActions[1]}\n                stepData={_stepData[1]}\n              />\n              <ORFiwStep3\n                currentStep={currentStep}\n                handleChange={handleChange}\n                checkAccomplished={checkAccomplished}\n                stepAction={stepActions[2]}\n                stepData={_stepData[2]}\n              />\n            </CardBody>\n            <CardFooter>\n              <PreviousButton />\n              <NextButton />\n              <MintButton />\n            </CardFooter>\n          </Card>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default ORFileImportWizard;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { USERS } from \"../store/actionTypes\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Table from \"react-bootstrap/Table\";\nimport Modal from \"react-bootstrap/Modal\";\nimport ORFileImportWizard from \"../components/Modals/ORFileImportWizard\";\nimport UploadService from \"../service/upload-files.service\";\nimport ONERepDeployedInfo from \"../shared/ONERep.json\";\nimport Papa from \"papaparse\";\n// import { CID } from \"ipfs-http-client\";\nimport axios from \"axios\";\nimport \"react-step-progress/dist/index.css\";\nimport Web3 from \"web3\";\nimport { ethers } from \"ethers\";\nimport { getMintBatchApprovalSignature, orAlert } from \"../service/utils\";\nimport BasicModal from \"../components/Modals/BasicModal\";\nimport OrSpinner from \"../components/OrSpinner\";\nimport OrTable from \"../components/OrTable\";\nconst { SERVER_URL } = require(\"../conf\");\n\n/*\n ******************************************\n * Data definition for ONERep Board Table \n ****************************************** \n */\nconst fileTableHeaderInfo = [\n  { label: \"DAO\", name: \"dao\" },\n  { label: \"File Name\", name: \"fileName\" },\n  { label: \"IPFS URI\", name: \"ipfsUrl\", className: \"text-center\" },\n  { label: \"Reputation\", name: \"reputation\", className: \"text-right\" },\n  { label: \"Status\", name: \"status\", className: \"text-center\" },\n  { label: \"Date\", name: \"created_at\", className: \"text-center\" },\n];\nconst refineTableData = rawTableData => {\n  let _boardDataList = [];\n  for (let i in rawTableData) {\n    let r = rawTableData[i];\n    _boardDataList.push({\n      \"dao\": { content: r.dao },\n      \"fileName\": { content: r.filename },\n      \"ipfsUrl\": { content: <a href={`${SERVER_URL}/uploads/${r.ipfsuri}`}>{r.ipfsuri}</a> },\n      \"reputation\": { className: \"text-right\", content: r.reputation },\n      \"status\": { className: \"text-center\", content: r.status ? \"Completed\" : \"Failed\" },\n      \"created_at\": {\n        className: \"text-center\",\n        content: new Date(r.created_at).toLocaleDateString() +\n          \" \" +\n          new Date(r.created_at).toLocaleTimeString()\n      },\n    });\n  }\n  return _boardDataList;\n}\n\n\n/*\n ***************************************\n ********* ONERep File page  **********\n *************************************** \n */\nconst OneRepFileModule = (props) => {\n  // const { _wallet, _userName, _isAdmin, _badgeTokenAddress } = props;\n\n  const [showMintWizard, setShowMintWizard] = useState(false);\n  const [showSucces, setshowSucces] = useState(false);\n  const [showFailure, setshowFailure] = useState(false);\n  const [repfiles, setRepFiles] = useState([]);\n  const [daoList, setDaoList] = useState([]);\n  const [selectedDao, setSelectedDao] = useState(null);\n  const [selectedDaoTokenTotalSupply, setSelectedDaoTokenTotalSupply] = useState(0);\n  // const [progress, setProgress] = useState(0);\n  const [ipfsPath, setipfsPath] = useState(\"\");\n  const [ipfsName, setipfsName] = useState(\"\");\n  const [reputation, setReputation] = useState(0);\n  const [showWatingModalForMint, setShowWatingModalForMint] = useState(false);\n  // const [images, setImages] = useState({ cid: CID, path: \"\" });\n  // const [totalMint, setTotalMint] = useState(0);\n  // const [file, setFile] = useState(null);\n  const [parsedData, setParsedData] = useState([]);\n  const [csvData, setCSVData] = useState([]);\n  //State to store table Column name\n  const [tableRows, setTableRows] = useState([]);\n  //State to store the values\n  const [values, setValues] = useState([]);\n  const [step, setStep] = useState(0);\n  const [badgeTokenAddress, setBadgeTokenAddress] = useState(null);\n  const [badgecontract, setBadgeContract] = useState(null);\n  const [showMessageBox, setShowMessageBox] = useState(false);\n  const [messageBoxTitle, setMessageBoxTitle] = useState(false);\n  const [messageBoxContent, setMessageBoxContent] = useState(false);\n  const [messageBoxType, setMessageBoxType] = useState(\"error\");\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [userName, setUserName] = useState(null);\n  const [chainId, setChainId] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isFileImportable, setIsFileImportable] = useState(false);\n  const [initedIsAdmin, setInitedIsAdmin] = useState(false);\n  const [mintFailureReason, setMintFailureReason] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [inited, setInited] = useState(false);\n\n  let web3 = null;\n  let rpcProvider = null;\n  let signer = null;\n  let step1Completed = false;\n\n  const uploadFileInput = useRef(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    let _isAdmin = localStorage.getItem(\"isAdmin\");\n    if (_isAdmin !== \"undefined\" && !initedIsAdmin) {\n      setIsAdmin(_isAdmin === \"true\" ? true : false);\n      setInitedIsAdmin(true);\n    }\n    if (!inited) {\n      axios.post(\n        SERVER_URL + '/users/loggedinuserbywallet',\n        {\n          wallet: localStorage.getItem(\"wallet\")\n        }\n      ).then(ret => {\n        let userInfo = ret.data ? ret.data ? ret.data.data : null : null;\n        if (!userInfo) {\n          orAlert(\"Failed to get information for current logined user\");\n          logout();\n          return;\n        }\n        setInited(true);\n        // console.log(\"Logged in user:\", ret.data);\n        setIsAdmin(userInfo.userType === 0);\n        setIsFileImportable(userInfo.userType === 1);\n        setInitedIsAdmin(true);\n        let badgeTokenAddress = userInfo.daoRelation ?\n          userInfo.daoRelation.length ?\n            userInfo.daoRelation[0].badgeAddress :\n            null :\n          null;\n        setBadgeTokenAddress(badgeTokenAddress);\n        setChainId(localStorage.getItem('chainId'));\n        dispatch({\n          type: USERS.CONNECT_WALLET,\n          payload: {\n            wallet: userInfo.wallet,\n            user: userInfo.username,\n            isAdmin: userInfo.userType === 0,\n            badgeTokenAddress: badgeTokenAddress,\n          }\n        });\n        // Init DAO drop down\n        let thisAddress = localStorage.getItem(\"wallet\");\n        // Get all DAO names to fill into DAO name list and select first DAO from it\n        axios.post(SERVER_URL + \"/getDaoData\", {\n          master: thisAddress\n        }).then((resp) => {\n          if (resp.data.success) {\n            let daos = resp.data.data;\n            daos = [\n              {\n                _id: '',\n                badgeAddress: null,\n                name: 'All'\n              },\n              ...daos\n            ];\n            setDaoList(daos);\n            handleDropDown(null);\n          } else {\n            alert(\"Failed to get DAO data\");\n          }\n        });\n      })\n        .catch(error => {\n          orAlert(\"OneRepFile: Failed to get information for logged in user: \" + error.message);\n        });\n    }\n  });\n  // useEffect(() => {\n  //   // setShowWatingModalForMint(true);\n  //   loadOneRepFiles();\n  //   if (\n  //     localStorage.getItem(\"wallet\") === \"\" ||\n  //     !localStorage.getItem(\"wallet\")\n  //   ) {\n  //     window.location.href = \"/\";\n  //     return;\n  //   }\n  // }, [step]);\n\n  const logout = async () => {\n    localStorage.setItem(\"wallet\", \"\");\n    localStorage.setItem('user', \"\");\n    localStorage.setItem(\"isAdmin\", false);\n    window.location.href = \"/\";\n  }\n  const filterContractMessage = (originMessage) => {\n    let contractErrorReqExp = /[a-zA-Z\\ ]+;[a-zA-Z\\ ]+\\[[a-zA-Z\\:\\/\\/\\-_\\.0-9 ]+\\] \\(reason=\\\"([a-zA-Z \\:]+)\\\",.+/;\n    let msgElems = originMessage.match(contractErrorReqExp);\n    if (msgElems === null) {\n      return originMessage;\n    }\n    if (msgElems.length !== undefined && msgElems.length > 1) {\n      return msgElems[1].replace(\"execution reverted:\", \"\");\n    }\n    return originMessage;\n  }\n  const handleCloseMintWizard = () => setShowMintWizard(false);\n  const handleCloseWatingModalForMint = () => setShowWatingModalForMint(false);\n  const handleCloseMessageBox = () => setShowMessageBox(false);\n  const handleTriggerFileImportWizard = () => {\n    setShowMintWizard(true);\n    // setFile(null);\n    setTableRows([]);\n    setValues([]);\n    setStep(0);\n    // setProgress(0);\n  };\n  const handleCloseSuccess = () => setshowSucces(false);\n  const handleCloseFailure = () => setshowFailure(false);\n  const handleShowSuccess = () => setshowSucces(true);\n  const handleShowFailure = (reason) => {\n    setMintFailureReason(reason);\n    setshowFailure(true);\n  }\n  const inform = (title, content, type = 'error') => {\n    setMessageBoxType(type);\n    setMessageBoxTitle(title);\n    setMessageBoxContent(content);\n    setShowMessageBox(true);\n  }\n  const InitWeb3 = async () => {\n    if (web3 == null && window.ethereum) {\n      web3 = new Web3(window.ethereum);\n      rpcProvider = new ethers.providers.Web3Provider(window.ethereum)\n      signer = rpcProvider.getSigner();\n    }\n  }\n  const handleSubmit = async () => {\n    await InitWeb3();\n    if (web3 == null || chainId == null) {\n      orAlert(\"Initialization not complete yet. Please try again a while later\");\n      return;\n    }\n    setShowMintWizard(false);\n    // setTotalMint(reputation);\n\n    if (badgeTokenAddress === undefined ||\n      badgeTokenAddress === null ||\n      badgeTokenAddress === \"\") {\n      orAlert(\"Invalid badge token address\");\n      return;\n    }\n\n    setShowWatingModalForMint(true);\n    /*******************************Creating Badge Contract Instance***************/\n    const badgeTokenContract = new ethers.Contract(badgeTokenAddress, ONERepDeployedInfo.abi, rpcProvider);\n    // let wallet = localStorage.getItem('wallet')\n    // let recipientcontractadd;\n\n    /***************************Mint to each individual Recipient Contract***********/\n\n    ////////////////////////////////////////////////////////\n    try {\n      let idsList = [];\n      let toList = [];\n      let amountsList = [];\n      let tokenUrisList = [];\n      let dataList = [];\n\n      let minter = localStorage.getItem(\"wallet\");\n      for (let i = 0; i < values.length; i++) {\n        let tokenAmount = values[i][3];\n        if (parseInt(tokenAmount) <= 0) {\n          continue;\n        }\n        let amounts = [];\n        amounts.push(tokenAmount)\n        /////////////////////////////////////////////////////////////////////\n        // Get signature for each \n        let ret = await getMintBatchApprovalSignature({\n          web3,\n          erc1238ContractAddress: badgeTokenAddress,\n          chainId: chainId,\n          signer: signer,\n          amounts: amounts,\n          recipient: values[i][2]\n        });\n        if (ret.fullSignature === undefined || ret.fullSignature === null) {\n          console.log(\"Failed to getMintApprovalSignature()\", ret);\n          continue;\n        }\n        toList.push(values[i][2]);\n        amountsList.push(amounts);\n        let tokenUris = [];\n        tokenUris.push(\"https://your-domain-name.com/credentials/tokens/1\");\n        tokenUrisList.push(tokenUris);\n        dataList.push(ret.fullSignature);\n        idsList.push([1]);\n      }\n\n      let resp = await badgeTokenContract.connect(signer).mintBundle(\n        toList,\n        idsList,\n        amountsList,\n        tokenUrisList,\n        dataList\n      );\n\n      if (resp) {\n        console.log(resp);\n      }\n      /****************************adding information of uploaded files in the mongodb */\n      let ret = await axios.post(SERVER_URL + \"/files/add\", {\n        filename: ipfsName,\n        ipfsuri: ipfsPath,\n        status: true,\n        reputation: reputation,\n        data: values,\n        master: minter,\n      });\n\n      setShowWatingModalForMint(false);\n      if (ret.data === undefined || ret.data === null ||\n        ret.data.success === undefined) {\n        orAlert(\"Failed to save file\");\n        return;\n      }\n      loadOneRepFiles(selectedDao.badgeAddress);\n      inform(\"Success\", \"Successfully Minted\", \"success\");\n    } catch (error) {\n      setShowWatingModalForMint(false);\n      let msg = filterContractMessage(error.message);\n      handleShowFailure(msg);\n      let errorCode = error.code ? error.code : 0;\n      if (errorCode === 4001) {\n        return;\n      }\n      console.error(\"Failed to mintToEOA(): \", error);\n    }\n  };\n  const loadOneRepFiles = (badgeAddressForSelectedDao = null) => {\n    setLoading(true);\n    axios.post(\n      SERVER_URL + \"/files\",\n      {\n        master: localStorage.getItem(\"wallet\"),\n        badgeAddress: badgeAddressForSelectedDao\n      }\n    ).then((response) => {\n      setLoading(false);\n      if (response.data.error) {\n        orAlert(\"Failed to load ONERep files: \" + response.data.data);\n        return;\n      }\n      setRepFiles(refineTableData(response.data.data));\n    });\n  };\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    const files = e.target.files;\n    if (!files || files.length === 0) {\n      return;\n    }\n    // setFile(files[0]);\n    let prefix = \"data__\" + Date.now() + \"__\";\n    setipfsName(files[0].name);\n    setipfsPath(prefix + files[0].name);\n    UploadService.upload(files[0], prefix, (event) => {\n      // setProgress(Math.round((100 * event.loaded) / event.total));\n    })\n      .then((response) => {\n        inform(\"Success\", response.data.message, \"success\");\n        step1Completed = true;\n        Papa.parse(files[0], {\n          header: true,\n          skipEmptyLines: true,\n          complete: (results) => {\n            const rowsArray = [];\n            const valuesArray = [];\n\n            setCSVData(results.data);\n\n            // Iterating data to get column name and their values\n            let rep = 0;\n            results.data.map((d) => {\n              rowsArray.push(Object.keys(d));\n              valuesArray.push(Object.values(d));\n              rep += parseInt(d.received);\n              return true;\n            });\n            setReputation(rep);\n            // Parsed Data Response in array format\n            setParsedData(results.data);\n\n            // Filtered Column Names\n            setTableRows(rowsArray[0]);\n\n            // Filtered Values\n            // setValues([...values, ...valuesArray]);\n            setValues(valuesArray);\n          },\n        });\n\n        // this.setState({\n        // message: response.data.message,\n        // });\n        // return UploadService.getFiles(\"data\");\n      })\n      .then((files) => {\n        // this.setState({\n        // fileInfos: files.data,\n        // });\n      })\n      .catch((err) => {\n        this.setState({\n          progress: 0,\n          message: \"Could not upload the file!\",\n          currentFile: undefined,\n        });\n      });\n  };\n  const onChangedFileUploadInput = (ev) => {\n    onSubmitHandler(ev);\n  }\n  const handleDropDown = async (selectedDaoName = null) => {\n    try {\n      let getDaoDataReqParam = {\n        master: localStorage.getItem(\"wallet\"),\n        dao: selectedDaoName === \"All\" ? null : selectedDaoName\n      };\n      // let isAdmin = localStorage.getItem(\"isAdmin\");\n      // if (isAdmin) {\n      //   getDaoDataReqParam = {\n      //     master: localStorage.getItem(\"wallet\"),\n      //   };\n      // }\n      if (selectedDaoName) {\n        let resp = await axios.post(SERVER_URL + \"/getDaoData\", getDaoDataReqParam);\n        if (resp.data.success) {\n          let selectedDao = resp.data.data ? resp.data.data.length ? resp.data.data[0] : null : null;\n          if (selectedDao) {\n            setSelectedDao(selectedDao);\n            setSelectedDaoTokenTotalSupply(selectedDao.sent);\n            loadOneRepFiles(selectedDao.badgeAddress);\n          }\n        } else {\n          orAlert(\"Failed to get DAO list: \" + resp.data.data);\n          return;\n        }\n      } else {\n        setSelectedDao(null);\n        setSelectedDaoTokenTotalSupply(0);\n        loadOneRepFiles();\n      }\n    } catch (error) {\n      console.log(\"Error occurred in handleDropDown()\", error);\n    }\n  }\n  return (\n    <section className=\"\">\n      <br />\n      <br />\n      <div className=\"zl_all_page_heading_section\">\n        <div className=\"zl_all_page_heading\">\n          <h2>ONERep Files (Cordinape)</h2>\n        </div>\n        {\n          isFileImportable ?\n            <div className=\"zl_all_page_notify_logout_btn\">\n              <ul className=\"v-link\">\n                <li>\n                  <button onClick={handleTriggerFileImportWizard} className=\"btn-connect\">\n                    Add ONERep File\n                  </button>\n                </li>\n              </ul>\n            </div> :\n            <></>\n        }\n      </div>\n      {\n        showMintWizard ?\n          <ORFileImportWizard\n            onClose={handleCloseMintWizard}\n            stepActions={[\n              onChangedFileUploadInput,\n              null,\n              handleSubmit\n            ]}\n            stepData={[\n              {},\n              {\n                values,\n                reputation,\n                tableRows\n              },\n              {}\n            ]}\n          /> :\n          <></>\n      }\n      <div className='main-text-color'>\n        <div className='flow-layout mr-20'>\n          <div className='flow-layout mr-10'>DAO</div>\n          <div className='flow-layout mr-10'>\n            <Dropdown onSelect={handleDropDown}>\n              <Dropdown.Toggle variant=\"dropdown\" id=\"dropdown-basic\">\n                {selectedDao ? selectedDao.name ? selectedDao.name : \"All\" : \"All\"}\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                {\n                  (daoList.length > 0) ?\n                    daoList.map(m => {\n                      return <Dropdown.Item key={m.name} eventKey={m.name}>{m.name}</Dropdown.Item>\n                    }) :\n                    <Dropdown.Item eventKey={daoList.name}>{daoList.name}</Dropdown.Item>\n                }\n              </Dropdown.Menu>\n            </Dropdown>\n          </div>\n        </div>\n        {\n          selectedDao ? ([\n            <div key=\"badge-token-name-label\" className='flow-layout mr-20'>\n              Token Name\n              <label className=\"bordered-label\">\n                {selectedDao ? selectedDao.badge ? selectedDao.badge : \" \" : \" \"}\n              </label>\n            </div>,\n            <div key=\"badge-token-total-supply-label\" className='flow-layout mr-10'>\n              Number Of Tokens\n              <label className=\"bordered-label\">\n                {selectedDaoTokenTotalSupply}\n              </label>\n            </div>\n          ]) :\n            <></>\n        }\n      </div>\n      <br />\n      <OrTable\n        name=\"file-table\"\n        columns={fileTableHeaderInfo}\n        editable={false}\n        removable={false}\n        rows={repfiles}\n      />\n      {/******************* \"Minted Successfully\" Dialog *********************/}\n      <BasicModal show={showMessageBox} title={messageBoxTitle} modalType={messageBoxType} closeModal={handleCloseMessageBox}>\n        <p className=\"main-text-color text-center\">\n          {messageBoxContent}\n        </p>\n      </BasicModal>\n      {/******************* \"Minted Failure\" Dialog *********************/}\n      <Modal centered show={showFailure} onHide={handleCloseFailure}>\n        <Modal.Body>\n          <div className=\"p-4\">\n            <br />\n            <h4 className=\"text-center text-white\">\n              Failed to Mint\n            </h4>\n            <br />\n            <p className=\"main-text-color text-center\">\n              {mintFailureReason}\n            </p>\n            <br />\n            <div className=\"text-center\">\n              <button\n                type=\"button\"\n                className=\"btn-connect\"\n                onClick={handleCloseFailure}\n              >\n                Got it\n              </button>\n            </div>\n          </div>\n        </Modal.Body>\n      </Modal>\n      {/******************* \"Minting...\" Dialog *********************/}\n      <Modal centered className=\"w-fit-content\" show={showWatingModalForMint} onHide={handleCloseWatingModalForMint}>\n        <Modal.Body className=\"\">\n          <div className=\"or-waiting-modal-body\">\n            <div className=\"or-waiting-modal-spinner mr-2\">\n              <div className=\"or-spin-border-white spinner-border\" role=\"status\" />\n            </div>\n            <div className=\"or-waiting-modal-text main-text-color\">\n              Minting... Please wait a while.\n            </div>\n          </div>\n        </Modal.Body>\n      </Modal>\n      {/*************************************************************/}\n    </section>\n  );\n};\n\nfunction mapStoreToProps(state) {\n  return {\n    //     _userName: state.userAction.user,\n    //     _wallet: state.userAction.wallet,\n    //     _isAdmin: state.userAction.isAdmin,\n    //     _badgeTokenAddress: state.userAction.badgeTokenAddress\n  };\n}\n\nexport default connect(mapStoreToProps)(OneRepFileModule);\n","import React, { useState, useEffect } from \"react\";\nimport \"react-step-progress/dist/index.css\";\nimport { connect } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { USERS } from \"../store/actionTypes\";\nimport { orAlert } from \"../service/utils\";\nimport Table from \"react-bootstrap/Table\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport axios from \"axios\";\nimport OrSpinner from \"../components/OrSpinner\";\nimport OrTable from \"../components/OrTable\";\nconst { SERVER_URL } = require(\"../conf\");\n\n/*\n ******************************************\n * Data definition for ONERep Board Table \n ****************************************** \n */\nconst boardDataTableHeaderInfo = [\n  { label: \"DAO\", name: \"dao\" },\n  { label: \"BADGE\", name: \"badge\" },\n  { label: \"Name\", name: \"name\" },\n  { label: \"Wallet\", name: \"wallet\", className: \"text-center\" },\n  { label: \"ONEREP TOKENS\", name: \"sum\", className: \"text-right\" },\n];\nconst refineTableData = rawTableData => {\n  let _boardDataList = [];\n  for (let i in rawTableData) {\n      let r = rawTableData[i];\n      _boardDataList.push({\n          \"dao\": { content: r.dao },\n          \"badge\": { content: r.badge },\n          \"name\": { content: r.name },\n          \"wallet\": { className: \"text-center\", content: r._id },\n          \"sum\": { className: \"text-right\", content: r.sum },\n      });\n  }\n  return _boardDataList;\n}\n\n/*\n ***************************************\n ********* ONERep Board page  **********\n *************************************** \n */\n const OneRepBoardModule = (props) => {\n  const [show, setShow] = useState(false);\n  const [boardData, setBoardData] = useState([]);\n  const [sort_name, setSortName] = useState(1);\n  const [sort_badge, setSortBadge] = useState(1);\n  const [sort_id, setSortId] = useState(1);\n  const [sort_sum, setSortSum] = useState(1);\n  const [sortOption, setSortOption] = useState({ sum: -1 });\n  const [daoList, setDaoList] = useState([]);\n  const [selectedDao, setSelectedDao] = useState(null);\n  const [selectedDaoTokenTotalSupply, setSelectedDaoTokenTotalSupply] = useState(0);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [badgeTokenAddress, setBadgeTokenAddress] = useState(null);\n  const [userName, setUserName] = useState(null);\n  const [inited, setInited] = useState(false);\n  const [loading, setLoading] = useState(true);\n  // const [chainId, setChainId] = useState(0);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // Init connection info\n    if (!inited) {\n      axios.post(\n        SERVER_URL + '/users/loggedinuserbywallet',\n        {\n          wallet: localStorage.getItem(\"wallet\")\n        }\n      ).then(ret => {\n        let userInfo = ret.data ? ret.data.data ? ret.data.data : null : null;\n        if (!userInfo) {\n          orAlert(\"Failed to get information for current logined user\");\n          return;\n        }\n        setInited(true);\n        setIsAdmin(userInfo.userType === 0);\n        localStorage.setItem(\"isAdmin\", userInfo.userType === 0);\n        let badgeTokenAddress = userInfo.daoRelation ?\n          userInfo.daoRelation.length ?\n            userInfo.daoRelation[0].badgeAddress :\n            null :\n          null;\n        setBadgeTokenAddress(badgeTokenAddress);\n        setUserName(userInfo.username);\n        // setChainId(localStorage.getItem('chainId'));\n        dispatch({\n          type: USERS.CONNECT_WALLET,\n          payload: {\n            wallet: userInfo.wallet,\n            user: userInfo.username,\n            isAdmin: userInfo.userType === 0,\n            badgeTokenAddress: badgeTokenAddress,\n          }\n        });\n        // Init DAO drop down\n        let thisAddress = localStorage.getItem(\"wallet\");\n        // Get all DAO names to fill into DAO name list and select first DAO from it\n        axios.post(SERVER_URL + \"/getDaoData\", {\n          master: thisAddress\n        }).then((resp) => {\n          if (resp.data.success) {\n            let daos = resp.data.data;\n            if (userInfo.userType !== 1) {\n              daos = [\n                {\n                  _id: '',\n                  name: 'All'\n                },\n                ...daos\n              ];\n            }\n            setDaoList(daos);\n            // if (daos.length && daos.length > 1) { // \n            if (userInfo.userType === 1) { // System User\n              handleDropDown(daos[0].name, daos);\n            }\n            // } else {\n            //   handleDropDown(daos[0].name, daos);\n            // }\n          } else {\n            alert(\"Failed to get DAO data\");\n          }\n        });\n      }).catch(error => {\n        orAlert(\"OneRepBoard: Failed to get information for logged in user: \" + error.message);\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (\n      localStorage.getItem(\"wallet\") === \"\" ||\n      !localStorage.getItem(\"wallet\")\n    ) {\n      window.location.href = \"/\";\n      return;\n    }\n  }, [show, sortOption]);\n\n  useEffect(() => {\n    loadBoardData(\n      selectedDao ?\n        selectedDao.badgeAddress ?\n          selectedDao.badgeAddress :\n          null :\n        null\n    );\n  }, [sortOption]);\n\n  const loadBoardData = async (badgeAddress) => {\n    try {\n      setLoading(true);\n      let ret = await axios.post(SERVER_URL + \"/getOneRepBoard\", {\n        master: localStorage.getItem('wallet'),\n        sort: sortOption,\n        badgeAddress: badgeAddress\n      });\n      setLoading(false);\n      if (ret === null || ret.data === undefined || ret.data.success === undefined || !ret.data.success) {\n        orAlert(\"Failed to get all board data for super admin\");\n        return;\n      }\n      setBoardData(refineTableData(ret.data.data));\n    } catch (error) {\n      orAlert(\"Failed to loadBoardData(): \" + error.message);\n    }\n  };\n  // const getSelOpList = () => {\n  //   axios.post(SERVER_URL + \"/getSelOpList\", {\n  //     master: localStorage.getItem(\"wallet\"),\n  //   })\n  //   .then((response) => {\n  //     console.log(\"The response in inside getSelOpList\",response);\n  //     setSelectData(response.data);\n  //   });\n  // };\n  const handleDropDown = async (selectedDaoName, daos = null) => {\n    try {\n      let getDaoDataReqParam = {\n        master: localStorage.getItem(\"wallet\"),\n        dao: selectedDaoName === \"All\" ? null : selectedDaoName\n      };\n      if (selectedDaoName) {\n        let resp = await axios.post(SERVER_URL + \"/getDaoData\", getDaoDataReqParam);\n        if (resp.data.success) {\n          let selectedDao = resp.data.data ? resp.data.data.length ? resp.data.data[0] : null : null;\n          if (selectedDao) {\n            setSelectedDao(selectedDao);\n            setSelectedDaoTokenTotalSupply(selectedDao.sent);\n            loadBoardData(\n              selectedDao ?\n                selectedDao.badgeAddress ?\n                  selectedDao.badgeAddress :\n                  null :\n                null\n            );\n          }\n        } else {\n          orAlert(\"Failed to get DAO list: \" + resp.data.data);\n          return;\n        }\n      } else {\n        setSelectedDao(null);\n        setSelectedDaoTokenTotalSupply(0);\n        loadBoardData(null);\n      }\n    } catch (error) {\n      console.log(\"Error occurred in handleDropDown()\", error);\n    }\n  };\n\n  return (\n    <section className=\"\">\n      <br />\n      <br />\n      <div className=\"zl_all_page_heading_section\">\n        <div className=\"zl_all_page_heading\">\n          <h2>ONERep Board</h2>\n        </div>\n        <div className=\"zl_all_page_notify_logout_btn\"></div>\n      </div>\n      <div className='main-text-color'>\n        <div className='flow-layout mr-20'>\n          <div className='flow-layout mr-10'>DAO</div>\n          <div className='flow-layout mr-10'>\n            <Dropdown onSelect={handleDropDown}>\n              <Dropdown.Toggle variant=\"dropdown\" id=\"dropdown-basic\">\n                {selectedDao ? selectedDao.name ? selectedDao.name : \"All\" : \"All\"}\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                {\n                  (daoList.length > 0) ?\n                    daoList.map(m => {\n                      return <Dropdown.Item key={m.name} eventKey={m.name}>{m.name}</Dropdown.Item>\n                    }) :\n                    <Dropdown.Item eventKey={daoList.name}>{daoList.name}</Dropdown.Item>\n                }\n              </Dropdown.Menu>\n            </Dropdown>\n          </div>\n        </div>\n        {\n          selectedDao ? ([\n            <div key=\"token-name-label\" className='flow-layout mr-20'>\n              Token Name\n              <label className=\"bordered-label\">\n                {selectedDao ? selectedDao.badge ? selectedDao.badge : \" \" : \" \"}\n              </label>\n            </div>,\n            <div key=\"token-token-total-count-label\" className='flow-layout mr-10'>\n              Number Of Tokens\n              <label className=\"bordered-label\">\n                {selectedDaoTokenTotalSupply}\n              </label>\n            </div>\n          ]) :\n            <></>\n        }\n      </div>\n      <br />\n      <OrTable\n        name=\"board-data-table\"\n        columns={boardDataTableHeaderInfo}\n        editable={false}\n        removable={false}\n        rows={boardData}\n      />\n    </section>\n  );\n};\nconst mapStoreToProps = ({ userAction }) => ({});\nexport default connect(mapStoreToProps, null)(OneRepBoardModule);\n","import { routes } from '../shared/constants';\n\nimport Dashboard from './Dashboard';\nimport Welcome from './Welcome';\nimport LogIn from './LogIn';\nimport Portfolio from './Portfolio';\nimport AddCurrency from './AddCurrency';\nimport Wallets from './Wallets';\nimport History from './History';\nimport SecureBackup from './SecureBackup';\nimport Setting from './Settings';\nimport RestoreWallet from './RestoreWallet';\nimport Currency from './Currency';\nimport AccountSupport from './AccountSupport';\n\nimport HomePageModule from './HomePage';\nimport RegisterModule from \"./Register\";\nimport AdminModule from \"./Admin\";\nimport OneRepFileModule from \"./OnerepFile\";\nimport OneRepBoardModule from \"./OnerepBoard\";\n\nexport default {\n\t[routes.home]: HomePageModule,\n\t[routes.register]: RegisterModule,\n\t[routes.admin]: AdminModule,\n\t[routes.onerepfile]: OneRepFileModule,\n\t[routes.onerepboard]: OneRepBoardModule,\n\t[routes.dashboardpage]: Dashboard,\n\t[routes.welcomepage]: Welcome,\n\t[routes.loginpage]: HomePageModule,\n\t[routes.portfoliopage]: Portfolio,\n\t[routes.addcurrencypage]: AddCurrency,\n\t[routes.walletspage]: Wallets,\n\t[routes.historypage]: History,\n\t[routes.securebackuppage]: SecureBackup,\n\t[routes.settingspage]: Setting,\n\t[routes.restorewalletpage]: RestoreWallet,\n\t[routes.currencypage]: Currency,\n\t[routes.accountsupportpage]: AccountSupport\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nconst WalletAddressBox = props => {\n\n\tconst { wallet, userName } = props;\n\n\tlet history = useHistory();\n\n\tconst [_wallet_address, setWalletAddress] = useState(null);\n\tconst [_user_name, setUserName] = useState(null);\n\tconst [showCopiedMessage, setShowCopiedMessage] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (userName !== undefined && userName !== null && userName !== \"\") {\n\t\t\tsetWalletAddress(wallet);\n\t\t\tsetUserName(userName);\n\t\t}\n\t}, [wallet, userName]);\n\tconst onClick = ev => {\n\t\tif (navigator.clipboard) {\n\t\t\tnavigator.clipboard.writeText(_wallet_address).then(function() {\n\t\t\t\tconsole.log('Async: Copying to clipboard was successful!');\n\t\t\t\tsetShowCopiedMessage(true);\n\t\t\t\tsetTimeout(hideCopiedMessage, 700);\n\t\t\t}, function(err) {\n\t\t\t\tconsole.error('Async: Failed to copy text into clipboard: ', err);\n\t\t\t});\t\t\t\n\t\t} else {\n\t\t\tconsole.error('Async: Could not copy text into clipboard');\n\t\t}\n\t\tconsole.log(history.location);\n\t}\n\tconst hideCopiedMessage = () => setShowCopiedMessage(false);\n\n\treturn  (\n\t\t<>\n\t\t\t<div className=\"text-right\">\n\t\t\t\t<div className=\"wallet-address-box w-full text-right\">\n\t\t\t\t{\n\t\t\t\t\t_wallet_address && history.location.pathname !== \"/\" ? \n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"flow-layout main-text-color mr-20\"><img className=\"mr-6\" alt=\"Avatar\" src='/assets/image/avatar-3.png' width='30px' height='26px'/>\n\t\t\t\t\t\t\t{_user_name}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"flow-layout\" title=\"Your Wallet Address\">\n\t\t\t\t\t\t\t<div className=\"flow-layout main-text-color\"><img src='/assets/image/wallet.png' alt=\"Wallet\" width='40px' height='40px'/></div>\n\t\t\t\t\t\t\t<div className=\"wallet-address main-text-color\" onClick={onClick} tooltip=\"Copy to clipboard\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t_wallet_address.substring(0, 6) + \n\t\t\t\t\t\t\t\t\"...\" + \n\t\t\t\t\t\t\t\t_wallet_address.substring(_wallet_address.length-5, _wallet_address.length-1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/******************* \"Copied\" toast *********************/}\n\t\t\t\t\t\t<div className={`${showCopiedMessage?\"show-toast-box ml-130\":\"hide-toast-box\"}`} onClick={hideCopiedMessage}>\n\t\t\t\t\t\t\t<div className=\"check-icon flow-layout\">\n\t\t\t\t\t\t    \t<svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n\t\t\t\t\t\t\t\t  <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"flow-layout\">Copied!</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>:\n\t\t\t\t\t<></>\n\t\t\t\t}\n\t\t        </div>\n\t        </div>\n        </>\n\t)\n}\n\nfunction mapStoreToProps(state) {\n\treturn { \n\t\tuserName: state.userAction.user,\n\t\twallet: state.userAction.wallet\n\t};\n}\n\nexport default connect(mapStoreToProps)(WalletAddressBox)","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nconst BadgeTokenAddressBox = props => {\n\n\tconst { badgeTokenAddress } = props;\n\n\tlet history = useHistory();\n\n\tconst [_badgeTokenAddress, setBadgeTokenAddress] = useState(null);\n\tconst [showCopiedMessage, setShowCopiedMessage] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (badgeTokenAddress !== undefined && badgeTokenAddress !== null && badgeTokenAddress !== \"\") {\n\t\t\tsetBadgeTokenAddress(badgeTokenAddress);\n\t\t}\n\t}, [badgeTokenAddress]);\n\tconst onClick = ev => {\n\t\tif (navigator.clipboard) {\n\t\t\tnavigator.clipboard.writeText(_badgeTokenAddress).then(function() {\n\t\t\t\tconsole.log('Async: Copying to clipboard was successful!');\n\t\t\t\tsetShowCopiedMessage(true);\n\t\t\t\tsetTimeout(hideCopiedMessage, 700);\n\t\t\t}, function(err) {\n\t\t\t\tconsole.error('Async: Failed to copy text into clipboard: ', err);\n\t\t\t});\t\t\t\n\t\t} else {\n\t\t\tconsole.error('Async: Could not copy text into clipboard');\n\t\t}\n\t\tconsole.log(history.location);\n\t}\n\tconst hideCopiedMessage = () => setShowCopiedMessage(false);\n\n\treturn  (\n\t\t<>\n\t\t\t<div className=\"text-right\">\n\t\t\t\t<div className=\"badge-address-box w-full text-right\">\n\t\t\t\t{\n\t\t\t\t\t_badgeTokenAddress && history.location.pathname !== \"/\" ? \n\t\t\t\t\t<div title=\"Badge Token Address\">\n\t\t\t\t\t\t<div className=\"flow-layout main-text-color mr-1\"><img src='/assets/image/badge-token.png' alt=\"ONERep Token\" width='26px' height='26px'/></div>\n\t\t\t\t\t\t<div className=\"flow-layout wallet-address main-text-color\" onClick={onClick}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t_badgeTokenAddress.substring(0, 6) + \n\t\t\t\t\t\t\t\t\"...\" + \n\t\t\t\t\t\t\t\t_badgeTokenAddress.substring(_badgeTokenAddress.length-5, _badgeTokenAddress.length-1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/******************* \"Minting...\" Dialog *********************/}\n\t\t\t\t\t\t<div className={`${showCopiedMessage?\"show-toast-box ml-40\":\"hide-toast-box\"}`} onClick={hideCopiedMessage}>\n\t\t\t\t\t\t\t<div className=\"check-icon flow-layout\">\n\t\t\t\t\t\t    \t<svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n\t\t\t\t\t\t\t\t  <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"flow-layout\">Copied!</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>:\n\t\t\t\t\t<></>\n\t\t\t\t}\n\t\t        </div>\n\t        </div>\n        </>\n\t)\n}\n\nfunction mapStoreToProps(state) {\n\treturn { \n\t\tbadgeTokenAddress: state.userAction.badgeTokenAddress\n\t};\n}\n\nexport default connect(mapStoreToProps)(BadgeTokenAddressBox)","import React from \"react\";\nimport { Link } from 'react-router-dom';\n\nimport { routes } from \"../../shared/constants\";\n\nconst texts = {\n    title: \"404\",\n    subTitle: \"Page not found.\",\n    backToHomepage: \"Back to homepage\",\n}\n\nconst Page404Module = () => {\n    return (\n        <div>\n            <p>{texts.title}</p>\n            <p>{texts.subTitle}</p>\n            <div>\n                <Link to={routes.home}>{texts.backToLogin}</Link>\n            </div>\n        </div>\n    );\n};\n\nexport default Page404Module;","import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport \"./css/Header.css\";\nimport { connect } from 'react-redux';\nimport BasicModal from '../Modals/BasicModal';\nimport { orAlert } from \"../../service/utils\";\nimport OrConfirm from '../Modals/OrConfirm';\n\nconst SideBar = (props) => {\n\n    // hide show header\n    const [send, setSend] = useState(false);\n    const [showMessage, setShowMessage] = useState(false);\n    const [messageType, setMessageType] = useState(\"error\");\n    const [messageTitle, setMessageTitle] = useState(\"\");\n    const [messageContent, setMessageContent] = useState(\"\");\n    const [metaMaskAccessible, setMetaMaskAccessible] = useState(true);\n    const [confirmText, setConfirmText] = useState(\"\");\n    const [showConfirm, setShowConfirm] = useState(false);\n    // const [isAdmin, setIsAdmin] = useState(false);\n\n    let connected = false;\n    let installed = false;\n\n    useEffect(() => {\n        if (metaMaskAccessible && window.ethereum === undefined) {\n            setMetaMaskAccessible(false);\n            showMessageBox(\"Warning\", \"No wallet installed. You should have wallet installed to access the page\");\n            return;\n        }\n        if (metaMaskAccessible) {\n            window.ethereum.on('accountsChanged', async (e) => {\n                initialise();\n                if (window.location.pathname === \"\" ||\n                window.location.pathname === \"/\" ||\n                window.location.pathname === \"/home\") {\n                    return;\n                }\n                logout();\n            });\n        }\n        // let wallet = localStorage.getItem(\"wallet\");\n        // if (wallet !== undefined && wallet !== null && wallet !== \"\") {\n        //     axios.post(\n        //         SERVER_URL + '/users/loggedinuserbywallet', \n        //         {\n        //             wallet: wallet\n        //         }\n        //     ).then(ret => {\n        //         if (ret.data === undefined || ret.data.isAdmin === undefined) {\n        //             console.log(\"Failed to get information for logged in user\");\n        //             return;\n        //         }\n        //         setIsAdmin(ret.data.isAdmin);\n        //     })\n        //     .catch(error => {\n        //         orAlert(\"Error occurred in getting information for logged in user\");\n        //     })            \n        // }\n    });\n\n    const showMessageBox = (title, content, _type = \"error\") => {\n        setMessageType(_type);\n        setMessageTitle(title);\n        setMessageContent(content);\n        setShowMessage(true);\n    }\n    const handleCloseMessageBox = () => {\n        setShowMessage(false);\n    }\n\n    const openConfirm = (text) => {\n        setConfirmText(text);\n        setShowConfirm(true);\n    }\n\n    const closeConfirm = (ret) => {\n        setShowConfirm(false);\n        if (ret) {\n            localStorage.setItem(\"wallet\", \"\");\n            localStorage.setItem('username', \"\");\n            localStorage.setItem(\"isAdmin\", false);\n            window.location.href = \"/\";    \n        }\n    }\n\n    function isMetaMaskInstalled() {\n        return Boolean(window.ethereum && window.ethereum.isMetaMask);\n    }\n\n    async function isMetaMaskConnected() {\n        const { ethereum } = window;\n        const accounts = await ethereum.request({ method: 'eth_accounts' });\n        return accounts && accounts.length > 0;\n    }\n\n    async function initialise() {\n        installed = isMetaMaskInstalled();\n        if (!installed) {\n            setMetaMaskAccessible(false);\n            showMessageBox(\"Warning\", \"You should have MetaMask installed\");\n            return;\n        }\n        setMetaMaskAccessible(true);\n        connected = await isMetaMaskConnected();\n        if (!connected) {\n            orAlert(\"No wallet connected. Please connect your wallet first\");\n            return;\n        }\n    }\n\n    const handleToggle = () => {\n        setSend(!send);\n    };\n\n    const logout = async () => {\n        openConfirm('Are you sure to logout?');\n    }\n\n    return (\n        <>\n            <section className={`zl_page_sidebar ${send ? \"zl_hide_sidebar\" : \"\"}`} title={props.title}>\n                <BasicModal\n                    show={showMessage}\n                    modalType={messageType}\n                    title={messageTitle}\n                    closeModal={handleCloseMessageBox}\n                >\n                    <p className=\"text-white\">{messageContent}</p>\n                </BasicModal>\n                <OrConfirm\n                    show={showConfirm}\n                    closeConfirm={closeConfirm}\n                >\n                    {confirmText}\n                </OrConfirm>\n                <div className=\"zl_page_sidebar_content\">\n                    <div className=\"zl_page_sidebar_logo\">\n                        <button className=\"zl_page_sidebar_toggle_btn\" onClick={handleToggle}>\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                            </svg>\n                        </button>\n                        <Link to={'/admin'}>\n                            <img src=\"assets/image/Logo1.svg\" alt=\"logo\" className=\"img-fluid zl_main_logo\" />\n                            <img src=\"assets/image/favicon.svg\" alt=\"logo\" className=\"img-fluid zl_mini_sidebar_logo\" />\n                            <img src=\"assets/image/light-Logo.svg\" alt=\"light-logo\" className=\"img-fluid zl_light_theme_logo d-none\" />\n                        </Link>\n                    </div>\n                    <ul className=\"zl_page_sidebar_nav\">\n                        {/* <li className=\"zl_page_sidebar_items\" title=\"dashboard\">\n                           <Link to={'/dashboard'} className=\"zl_page_sidebar_link position-relative\">\n                               <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                   <rect x=\"0.10527\" y=\"0.10527\" width=\"4\" height=\"4\" rx=\"1.4\" fill=\"#828CAE\" />\n                                   <rect x=\"0.10527\" y=\"6.10527\" width=\"4\" height=\"4\" rx=\"1.4\" fill=\"#828CAE\" />\n                                   <rect x=\"6.10527\" y=\"0.10527\" width=\"4\" height=\"4\" rx=\"1.4\" fill=\"#828CAE\" />\n                                   <rect x=\"6.10527\" y=\"6.10527\" width=\"7\" height=\"7\" rx=\"1.4\" fill=\"#828CAE\" />\n                               </svg>\n                               <span className=\"zl_pagesidebar_text\">Dashboard</span>\n                           </Link>\n                        </li> */}\n                        <li className=\"zl_page_sidebar_items\" title=\"admin\">\n                            <Link to={'/admin'} className=\"zl_page_sidebar_link position-relative\">\n                                <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <rect x=\"0.10527\" y=\"0.10527\" width=\"4\" height=\"4\" rx=\"1.4\" fill=\"#828CAE\" />\n                                    <rect x=\"0.10527\" y=\"6.10527\" width=\"4\" height=\"4\" rx=\"1.4\" fill=\"#828CAE\" />\n                                    <rect x=\"6.10527\" y=\"0.10527\" width=\"4\" height=\"4\" rx=\"1.4\" fill=\"#828CAE\" />\n                                    <rect x=\"6.10527\" y=\"6.10527\" width=\"7\" height=\"7\" rx=\"1.4\" fill=\"#828CAE\" />\n                                </svg>\n                                <span className=\"zl_pagesidebar_text\">Admin</span>\n                            </Link>\n                        </li>\n                        <li className=\"zl_page_sidebar_items\" title=\"onerepfile\">\n                            <Link to={'/onerepfile'} className=\"zl_page_sidebar_link position-relative\">\n                                <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <rect x=\"0.10527\" y=\"0.10527\" width=\"4\" height=\"4\" rx=\"1.4\" fill=\"#828CAE\" />\n                                    <rect x=\"0.10527\" y=\"6.10527\" width=\"4\" height=\"4\" rx=\"1.4\" fill=\"#828CAE\" />\n                                    <rect x=\"6.10527\" y=\"0.10527\" width=\"4\" height=\"4\" rx=\"1.4\" fill=\"#828CAE\" />\n                                    <rect x=\"6.10527\" y=\"6.10527\" width=\"7\" height=\"7\" rx=\"1.4\" fill=\"#828CAE\" />\n                                </svg>\n                                <span className=\"zl_pagesidebar_text\">ONERep Files</span>\n                            </Link>\n                        </li>\n                        <li className=\"zl_page_sidebar_items\" title=\"onerepboard\">\n                            <Link to={'/onerepboard'} className=\"zl_page_sidebar_link position-relative\">\n                                <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <rect x=\"0.10527\" y=\"0.10527\" width=\"4\" height=\"4\" rx=\"1.4\" fill=\"#828CAE\" />\n                                    <rect x=\"0.10527\" y=\"6.10527\" width=\"4\" height=\"4\" rx=\"1.4\" fill=\"#828CAE\" />\n                                    <rect x=\"6.10527\" y=\"0.10527\" width=\"4\" height=\"4\" rx=\"1.4\" fill=\"#828CAE\" />\n                                    <rect x=\"6.10527\" y=\"6.10527\" width=\"7\" height=\"7\" rx=\"1.4\" fill=\"#828CAE\" />\n                                </svg>\n                                <span className=\"zl_pagesidebar_text second-main-text-color\">ONERep Board</span>\n                            </Link>\n                        </li>\n                        <li className=\"zl_page_sidebar_items\" title=\"logout\">\n                            <a className=\"zl_page_sidebar_link position-relative\" href=\"#\" onClick={logout}>\n                                <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <rect x=\"0.10527\" y=\"0.10527\" width=\"4\" height=\"4\" rx=\"1.4\" fill=\"#828CAE\" />\n                                    <rect x=\"0.10527\" y=\"6.10527\" width=\"4\" height=\"4\" rx=\"1.4\" fill=\"#828CAE\" />\n                                    <rect x=\"6.10527\" y=\"0.10527\" width=\"4\" height=\"4\" rx=\"1.4\" fill=\"#828CAE\" />\n                                    <rect x=\"6.10527\" y=\"6.10527\" width=\"7\" height=\"7\" rx=\"1.4\" fill=\"#828CAE\" />\n                                </svg>\n                                <span className=\"zl_pagesidebar_text second-main-text-color\">Logout</span>\n                            </a>\n                        </li>\n                        {/* <li className=\"zl_page_sidebar_items\" title=\"portfolio\">\n                           <Link to={'/portfolio'} className=\"zl_page_sidebar_link position-relative\">\n                               <svg width=\"15\" height=\"17\" viewBox=\"0 0 15 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                   <path d=\"M9.49548 17L9.49548 5.92954\" stroke=\"#828CAE\" strokeWidth=\"1.5\" strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\" />\n                                    <path d=\"M13.515 17L13.515 2.91033\" stroke=\"#828CAE\" strokeWidth=\"1.5\" strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\" />\n                                    <path d=\"M5.47666 17L5.47666 8.94876\" stroke=\"#828CAE\" strokeWidth=\"1.5\" strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\" />\n                                    <path d=\"M1.45715 17L1.45715 10.9616\" stroke=\"#828CAE\" strokeWidth=\"1.5\" strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\" />\n                                    <path d=\"M1.6745 7.32535L9.40402 1.04169\" stroke=\"#828CAE\" strokeWidth=\"1.5\" strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\" />\n                                </svg>\n                                <span className=\"zl_pagesidebar_text\">User Management</span>\n                            </Link>\n                        </li> */}\n\n                        {/* <li className=\"zl_page_sidebar_items\" title=\"wallets\">\n                            <Link to={'/wallets'} className=\"zl_page_sidebar_link position-relative\">\n                                <svg width=\"13\" height=\"13\" viewBox=\"0 0 13 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n                                        d=\"M2 0C0.895431 0 0 0.89543 0 2V11C0 12.1046 0.89543 13 2 13H11C12.1046 13 13 12.1046 13 11V2C13 0.895431 12.1046 0 11 0H2ZM7.5 5C6.67157 5 6 5.67157 6 6.5C6 7.32843 6.67157 8 7.5 8H9.5C10.3284 8 11 7.32843 11 6.5C11 5.67157 10.3284 5 9.5 5H7.5Z\"\n                                        fill=\"#828CAE\" />\n                                </svg>\n                                <span className=\"zl_pagesidebar_text\">Admin Management</span>\n                            </Link>\n                        </li>\n                        <li className=\"zl_page_sidebar_items\" title=\"wallets\">\n                            <Link to={'/wallets'} className=\"zl_page_sidebar_link position-relative\">\n                                <svg width=\"13\" height=\"13\" viewBox=\"0 0 13 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n                                        d=\"M2 0C0.895431 0 0 0.89543 0 2V11C0 12.1046 0.89543 13 2 13H11C12.1046 13 13 12.1046 13 11V2C13 0.895431 12.1046 0 11 0H2ZM7.5 5C6.67157 5 6 5.67157 6 6.5C6 7.32843 6.67157 8 7.5 8H9.5C10.3284 8 11 7.32843 11 6.5C11 5.67157 10.3284 5 9.5 5H7.5Z\"\n                                        fill=\"#828CAE\" />\n                                </svg>\n                                <span className=\"zl_pagesidebar_text\">Wallets</span>\n                                <span className=\"zl_page_sidebar_notification_dot\"></span>\n                            </Link>\n                        </li>\n                        <li className=\"zl_page_sidebar_items\" title=\"history\">\n                            <Link to={'/history'} className=\"zl_page_sidebar_link position-relative\">\n                                <svg width=\"16\" height=\"15\" viewBox=\"0 0 16 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path fillRule=\"evenodd\" clipRule=\"evenodd\"\n                                        d=\"M7 7H0V0L2.79289 2.79289L3.85355 1.73222C4.24408 1.3417 4.87724 1.3417 5.26776 1.73222C5.65829 2.12275 5.65829 2.75591 5.26776 3.14644L4.2071 4.2071L7 7ZM15.2678 7.73224H8.26776L11.0607 10.5251L9.99999 11.5858C9.60947 11.9763 9.60947 12.6095 9.99999 13C10.3905 13.3905 11.0237 13.3905 11.4142 13L12.4749 11.9393L15.2678 14.7322V7.73224Z\"\n                                        fill=\"#828CAE\" />\n                                </svg>\n                                <span className=\"zl_pagesidebar_text\">History</span>\n                            </Link>\n                        </li>\n                        <li className=\"zl_page_sidebar_items\" title=\"securebackup\">\n                            <Link to={'/securebackup'} className=\"zl_page_sidebar_link position-relative\">\n                                <svg width=\"15\" height=\"17\" viewBox=\"0 0 15 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path\n                                        d=\"M14.2624 2.75273L7.75463 0.0507634C7.59161 -0.0169045 7.40836 -0.0169377 7.24537 0.0507634L0.737553 2.75273C0.489691 2.85566 0.328125 3.09765 0.328125 3.36603V6.65065C0.328125 11.1733 3.06171 15.2416 7.24905 16.9508C7.40989 17.0164 7.59008 17.0164 7.75095 16.9508C11.9382 15.2417 14.6719 11.1734 14.6719 6.65065V3.36603C14.6719 3.09765 14.5103 2.85566 14.2624 2.75273Z\"\n                                        fill=\"#828CAE\" />\n                                    <path\n                                        d=\"M6.76601 8.88901L9.62029 6.03477C9.8796 5.77545 10.3001 5.77542 10.5594 6.03477C10.8188 6.29412 10.8187 6.71457 10.5594 6.97389L7.23557 10.2977C6.97619 10.5571 6.55574 10.557 6.29645 10.2977L4.4406 8.44183C4.18125 8.18248 4.18125 7.76203 4.4406 7.50271C4.69995 7.2434 5.1204 7.24336 5.37972 7.50271L6.76601 8.88901Z\"\n                                        fill=\"#252F47\" />\n                                </svg>\n                                <span className=\"zl_pagesidebar_text\">Security Backup</span>\n                            </Link>\n                        </li>\n                        <li className=\"zl_page_sidebar_items\" title=\"settings\">\n                            <Link to={'/settings'} className=\"zl_page_sidebar_link position-relative\">\n                                <svg width=\"17\" height=\"15\" viewBox=\"0 0 17 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path d=\"M13 6.10996L16 6.10995L16 2.35996L13 2.35997L13 6.10996Z\" stroke=\"#828CAE\" strokeWidth=\"1.5\"\n                                        strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                    <path d=\"M14.5 6.25937L14.5 13.7594\" stroke=\"#828CAE\" strokeWidth=\"1.5\" strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\" />\n                                    <path d=\"M7 9.10996L10 9.10995L9.99999 5.35996L6.99999 5.35997L7 9.10996Z\" stroke=\"#828CAE\" strokeWidth=\"1.5\"\n                                        strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                    <path d=\"M8.5 10.0094V13.7594\" stroke=\"#828CAE\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                    <path d=\"M8.5 1.00937V4.75936\" stroke=\"#828CAE\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                    <path d=\"M14.5 1.00937V1.75937\" stroke=\"#828CAE\" strokeWidth=\"1.5\" strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\" />\n                                    <path d=\"M1.00001 12.1099L4 12.1099L3.99999 8.35993L0.999999 8.35994L1.00001 12.1099Z\" stroke=\"#828CAE\"\n                                        strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                    <path d=\"M2.50001 8.35994L2.50001 0.859955\" stroke=\"#828CAE\" strokeWidth=\"1.5\" strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\" />\n                                    <path d=\"M2.50001 13.61V12.86\" stroke=\"#828CAE\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                                </svg>\n                                <span className=\"zl_pagesidebar_text\">Settings</span>\n                            </Link>\n                        </li>\n                        <li className=\"zl_page_sidebar_items\" title=\"accountsupport\">\n                            <Link to={'/accountsupport'} className=\"zl_page_sidebar_link position-relative\">\n                                <svg width=\"17\" height=\"17\" viewBox=\"0 0 17 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                    <path\n                                        d=\"M4.51562 6.97266C3.69172 6.97266 3.02148 7.64289 3.02148 8.4668V12.5176C3.02148 13.3415 3.69172 14.0117 4.51562 14.0117C5.33953 14.0117 6.00977 13.3415 6.00977 12.5176V8.4668C6.00977 7.64289 5.33953 6.97266 4.51562 6.97266Z\"\n                                        fill=\"#828CAE\" />\n                                    <path\n                                        d=\"M2.02539 8.46679C2.02539 8.32312 2.04435 8.18433 2.06782 8.0473C1.46758 8.24131 1.0293 8.79885 1.0293 9.46288V11.5215C1.0293 12.1855 1.46758 12.7431 2.06782 12.9371C2.04435 12.8 2.02539 12.6612 2.02539 12.5176V8.46679Z\"\n                                        fill=\"#828CAE\" />\n                                    <path\n                                        d=\"M12.4844 6.97266C11.6605 6.97266 10.9902 7.64289 10.9902 8.4668V12.5176C10.9902 13.3415 11.6605 14.0117 12.4844 14.0117C12.6341 14.0117 12.776 13.9829 12.9124 13.9417C12.727 14.5563 12.1625 15.0078 11.4883 15.0078H9.9024C9.69611 14.4293 9.14846 14.0117 8.5 14.0117C7.6761 14.0117 7.00586 14.682 7.00586 15.5059C7.00586 16.3298 7.6761 17 8.5 17C9.14846 17 9.69611 16.5824 9.9024 16.0039H11.4883C12.8613 16.0039 13.9785 14.8867 13.9785 13.5137V12.5176V8.4668C13.9785 7.64289 13.3083 6.97266 12.4844 6.97266Z\"\n                                        fill=\"#828CAE\" />\n                                    <path\n                                        d=\"M14.9322 8.0473C14.9557 8.18433 14.9746 8.32312 14.9746 8.46679V12.5176C14.9746 12.6612 14.9557 12.8 14.9322 12.9371C15.5324 12.7431 15.9707 12.1855 15.9707 11.5215V9.46288C15.9707 8.79885 15.5324 8.24131 14.9322 8.0473Z\"\n                                        fill=\"#828CAE\" />\n                                    <path\n                                        d=\"M8.5 0C4.38042 0 1.0293 3.35113 1.0293 7.4707V7.48342C1.32603 7.25877 1.66935 7.09438 2.0482 7.02077C2.28099 3.66068 5.08187 0.996094 8.5 0.996094C11.9181 0.996094 14.719 3.66068 14.9518 7.02073C15.3306 7.09435 15.6739 7.25877 15.9707 7.48339V7.4707C15.9707 3.35113 12.6196 0 8.5 0Z\"\n                                        fill=\"#828CAE\" />\n                                </svg>\n                                <span className=\"zl_pagesidebar_text\">Account Support</span>\n                            </Link>\n                        </li> */}\n                    </ul>\n                    <button className=\"zl_page_sidebar_toggle_icon\" onClick={handleToggle}>\n                        <img src=\"assets/image/right-two-arrow.svg\" alt=\"right-two-arrow\" />\n                    </button>\n                </div>\n            </section>\n            <button className=\"zl_page_sidebar_toggle_btn\" onClick={handleToggle}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n                </svg>\n            </button>\n        </>\n    );\n}\n\nconst mapStoreToProps = ({ userAction }) => ({\n    \n});\nexport default connect(mapStoreToProps, null)(SideBar);\n","import { connect } from 'react-redux';\n\nimport SideBar from \"./SideBar\";\n\nconst mapStateToProps = state => {\n    return {\n        user: state.userAction.user || null,\n    }\n}\n\nexport default connect(mapStateToProps)(SideBar);\n","import React, { useState, useEffect } from \"react\";\nimport Settings from \"../../modules/Settings\";\n\nimport SideBar from \"../SideBar\";\nimport BasicModal from '../Modals/BasicModal';\n\n// const GET_STARTED_DISALLOWED_ROUTES = [\n//     \"/account\",\n// ];\n\n// const shouldGetStaredBeBlocked = path => GET_STARTED_DISALLOWED_ROUTES.some(item => path.startsWith(item));\n\n\nconst Layout = (props) => {\n\n    const [color, setColor] = useState('zl_page_dark_mode');\n    const [showMessageBox, setShowMessageBox] = useState(false);\n    const [messageTitle, setMessageTitle] = useState(null);\n    const [messageType, setMessageType] = useState('error');\n    const [messageContent, setMessageContent] = useState(null);\n   \n    const url = window.location.pathname;\n    const title = url.split('/')[1]\n\n    useEffect(() => {\n        if (typeof window !== 'undefined') {\n            setColor(localStorage.getItem(\"themColor\"));\n        }    \n    });    \n\n    const themHandler = (val) => {\n        setColor(val ? 'zl_light_theme_active' : 'zl_page_dark_mode');\n        if (typeof window !== 'undefined') {\n            localStorage.setItem(\"themColor\", val ? 'zl_light_theme_active' : 'zl_page_dark_mode');\n        }    \n    }    \n    const handleCloseMessageBox = () => {\n        setShowMessageBox(false);\n    }    \n\n    return (\n        <div>\n            <BasicModal\n                show={showMessageBox}\n                modalType={messageType}\n                title={messageTitle}\n                closeModal={handleCloseMessageBox}\n            >\n                {messageContent}\n            </BasicModal>\n            <div className={`zl_all_pages_content ${color === null ? 'zl_page_dark_mode' : color}`}>\n                <SideBar title={title} />\n                <div className=\"zl_all_pages_inner_content\">\n                    {props.location.pathname === \"/settings\" ? <Settings themHandler={themHandler} /> : props.children}\n                </div>\n                {/* <Footer /> */}\n            </div>\n        </div>\n    );\n\n}\n\nexport default Layout;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\n// import getAccountInfoAction from '../../store/actions/authorization/info';\n\nimport Connector from './Connector';\n\nconst mapStoreToProps = ({ userAction }) => ({\n    user: userAction.user,\n});\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     getAccountData: () => dispatch(getAccountInfoAction()),\n//   };\n// };\n\nexport default withRouter(connect(mapStoreToProps)(Connector));\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Switch, withRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport modules from './modules';\nimport WalletAddressBox from './components/WalletAddressBox';\nimport BadgeTokenAddressBox from './components/BadgeTokenAddressBox';\n\nimport Page404 from './components/Page404';\nimport Layout from './components/Layout';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App(props) {\n\n  const [routes, setRoutes] = useState(null);\n  const [showMessageBox, setShowMessageBox] = useState(true);\n  const [messageTitle, setMessageTitle] = useState(null);\n  const [messageType, setMessageType] = useState('error');\n  const [messageContent, setMessageContent] = useState(null);\n\n  useEffect(() => {\n    renderRoutes();\n  });\n\n  const renderRoutes = () => {\n    if (routes) {\n      return;\n    }\n\n    let _routes = Object.keys(modules).map((item) => {\n      return (\n        <Route key={`route_${item}`} exact path={item}>\n          {withRouter(modules[item])}\n        </Route>\n      );\n    });\n    setRoutes(_routes);\n  }\n  return (\n    <>\n      <Provider store={store}>\n        <BrowserRouter>\n          <Layout>\n            <div className=\"or-header\">\n              <div className=\"float-left\">\n                <BadgeTokenAddressBox />\n              </div>\n              <div className=\"float-right\">\n                <WalletAddressBox />\n              </div>\n            </div>\n            <Switch>\n              {routes}\n              <Route component={Page404} />\n            </Switch>\n          </Layout>\n        </BrowserRouter>\n      </Provider>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport { render } from 'react-snapshot';\n\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\nif ('serviceWorker' in navigator) {\n  navigator.serviceWorker.getRegistrations().then(function(registrations) {\n    for(let registration of registrations) {  \n      registration.unregister();\n    }\n  });\n}\n"],"sourceRoot":""}