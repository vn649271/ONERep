{
  "contractName": "IERC1238URIStorage",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "BurnBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "BurnSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "MintBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MintSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[][]",
          "name": "ids",
          "type": "uint256[][]"
        }
      ],
      "name": "balanceOfBundle",
      "outputs": [
        {
          "internalType": "uint256[][]",
          "name": "",
          "type": "uint256[][]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"BurnBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BurnSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"MintBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MintSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"ids\",\"type\":\"uint256[][]\"}],\"name\":\"balanceOfBundle\",\"outputs\":[{\"internalType\":\"uint256[][]\",\"name\":\"\",\"type\":\"uint256[][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Proposal of an interface for ERC1238 token with storage based token URI management.\",\"events\":{\"URI(uint256,string)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address,uint256[])\":{\"details\":\"Returns the balance of `account` for a batch of token `ids`\"},\"balanceOfBundle(address[],uint256[][])\":{\"details\":\"Returns the balance of multiple `accounts` for a batch of token `ids`. This is equivalent to calling {balanceOfBatch} for several accounts in just one call. Reuirements: - `accounts` and `ids` must have the same length.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `id` token.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ERC1238/extensions/IERC1238URIStorage.sol\":\"IERC1238URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ERC1238/IERC1238.sol\":{\"keccak256\":\"0x4a6be037694d0bfcbc9dcba4eededc4093920ce4c2ca246c74d3c8e53d52b7d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://588d84ef78086ff974f9e45b91c6fb7e6ced88e6239b5f471d70c3aa307f56f6\",\"dweb:/ipfs/QmWDfsTAgDGGQEDmmsj3BpriachsCPgxxHpGQKc9frYiek\"]},\"project:/contracts/ERC1238/extensions/IERC1238URIStorage.sol\":{\"keccak256\":\"0x99400ec07dad1c81fb1685d7c455a4bd3e75cd6ed8aa256b0e6fd568d6a447a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43825205a14e44a880a23e460ae1765ad4773bf162274986f1f1d46e046baae5\",\"dweb:/ipfs/QmZEGm2s6SAdtKzDkLXLfjWmt19jREohMu1DHkZ3mE9MaQ\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../IERC1238.sol\";\r\n\r\n/**\r\n * @dev Proposal of an interface for ERC1238 token with storage based token URI management.\r\n */\r\ninterface IERC1238URIStorage is IERC1238 {\r\n    /**\r\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\r\n     *\r\n     */\r\n    event URI(uint256 indexed id, string value);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `id` token.\r\n     */\r\n    function tokenURI(uint256 id) external view returns (string memory);\r\n}",
  "sourcePath": "F:\\Workspace\\Orders\\ONERep\\ONERep.github\\dat\\badge-truffle\\contracts\\ERC1238\\extensions\\IERC1238URIStorage.sol",
  "ast": {
    "absolutePath": "project:/contracts/ERC1238/extensions/IERC1238URIStorage.sol",
    "exportedSymbols": {
      "IERC1238": [
        1672
      ],
      "IERC1238URIStorage": [
        1869
      ]
    },
    "id": 1870,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1849,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:6"
      },
      {
        "absolutePath": "project:/contracts/ERC1238/IERC1238.sol",
        "file": "../IERC1238.sol",
        "id": 1850,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1870,
        "sourceUnit": 1673,
        "src": "62:25:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1852,
              "name": "IERC1238",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1672,
              "src": "226:8:6"
            },
            "id": 1853,
            "nodeType": "InheritanceSpecifier",
            "src": "226:8:6"
          }
        ],
        "canonicalName": "IERC1238URIStorage",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1851,
          "nodeType": "StructuredDocumentation",
          "src": "91:101:6",
          "text": " @dev Proposal of an interface for ERC1238 token with storage based token URI management."
        },
        "fullyImplemented": false,
        "id": 1869,
        "linearizedBaseContracts": [
          1869,
          1672
        ],
        "name": "IERC1238URIStorage",
        "nameLocation": "204:18:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 1854,
              "nodeType": "StructuredDocumentation",
              "src": "242:127:6",
              "text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI."
            },
            "eventSelector": "369737eac2f50072db0001f8a5c3f225ab50d5ab38d8cbdbabf885abf2ab722a",
            "id": 1860,
            "name": "URI",
            "nameLocation": "381:3:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1856,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "401:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1860,
                  "src": "385:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1858,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "412:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1860,
                  "src": "405:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1857,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "405:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "384:34:6"
            },
            "src": "375:44:6"
          },
          {
            "documentation": {
              "id": 1861,
              "nodeType": "StructuredDocumentation",
              "src": "427:87:6",
              "text": " @dev Returns the Uniform Resource Identifier (URI) for `id` token."
            },
            "functionSelector": "c87b56dd",
            "id": 1868,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "529:8:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1863,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "546:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1868,
                  "src": "538:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1862,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "537:12:6"
            },
            "returnParameters": {
              "id": 1867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1866,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1868,
                  "src": "573:13:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1865,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "573:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "572:15:6"
            },
            "scope": 1869,
            "src": "520:68:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1870,
        "src": "194:397:6",
        "usedErrors": []
      }
    ],
    "src": "35:556:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-14T03:16:16.707Z",
  "devdoc": {
    "details": "Proposal of an interface for ERC1238 token with storage based token URI management.",
    "events": {
      "URI(uint256,string)": {
        "details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI."
      }
    },
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address,uint256[])": {
        "details": "Returns the balance of `account` for a batch of token `ids`"
      },
      "balanceOfBundle(address[],uint256[][])": {
        "details": "Returns the balance of multiple `accounts` for a batch of token `ids`. This is equivalent to calling {balanceOfBatch} for several accounts in just one call. Reuirements: - `accounts` and `ids` must have the same length."
      },
      "tokenURI(uint256)": {
        "details": "Returns the Uniform Resource Identifier (URI) for `id` token."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}